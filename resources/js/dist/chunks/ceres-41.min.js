"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[41],{7621:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ VariationSelect; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/VariationSelect.vue?vue&type=template&id=588c1887&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    "div",\n    { staticClass: "row" },\n    [\n      _vm.attributes.length ||\n      (_vm.possibleUnitCombinationIds.length > 1 && _vm.isContentVisible)\n        ? [\n            _vm._l(_vm.attributes, function (attribute, index) {\n              return _c(\n                "div",\n                { key: index, staticClass: "col-12 variation-select" },\n                [\n                  attribute.type === "dropdown"\n                    ? _c(\n                        "div",\n                        {\n                          ref: "attributesContaner",\n                          refInFor: true,\n                          staticClass: "input-unit",\n                        },\n                        [\n                          _c(\n                            "select",\n                            {\n                              staticClass: "custom-select",\n                              attrs: {\n                                id: "custom-select_" + attribute.name,\n                                "data-testing": "variation-select-dropdown",\n                              },\n                              on: {\n                                change: function ($event) {\n                                  return _vm.selectAttribute(\n                                    attribute.attributeId,\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _vm.addPleaseSelectOption || !_vm.hasSelection\n                                ? _c("option", { domProps: { value: -1 } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.$translate(\n                                          "Ceres::Template.singleItemPleaseSelect"\n                                        )\n                                      )\n                                    ),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(" "),\n                              _vm.hasEmptyOption ||\n                              _vm.selectedAttributes[attribute.attributeId] ===\n                                null\n                                ? _c(\n                                    "option",\n                                    {\n                                      domProps: {\n                                        value: null,\n                                        selected:\n                                          _vm.selectedAttributes[\n                                            attribute.attributeId\n                                          ] === null,\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$translate(\n                                            "Ceres::Template.singleItemNoSelection"\n                                          )\n                                        )\n                                      ),\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(" "),\n                              _vm._l(attribute.values, function (value) {\n                                return _c(\n                                  "option",\n                                  {\n                                    key: value.attributeValueId,\n                                    domProps: {\n                                      value: value.attributeValueId,\n                                      selected:\n                                        value.attributeValueId ===\n                                        _vm.selectedAttributes[\n                                          attribute.attributeId\n                                        ],\n                                    },\n                                  },\n                                  [\n                                    _vm.isAttributeSelectionValid(\n                                      attribute.attributeId,\n                                      value.attributeValueId,\n                                      true\n                                    )\n                                      ? [\n                                          _vm._v(\n                                            "\\n                            " +\n                                              _vm._s(value.name) +\n                                              "\\n                        "\n                                          ),\n                                        ]\n                                      : _vm.isAttributeSelectionValid(\n                                          attribute.attributeId,\n                                          value.attributeValueId,\n                                          false\n                                        )\n                                      ? [\n                                          _vm._v(\n                                            "\\n                            " +\n                                              _vm._s(\n                                                _vm.$translate(\n                                                  "Ceres::Template.singleItemNotSalableAttribute",\n                                                  { name: value.name }\n                                                )\n                                              ) +\n                                              "\\n                        "\n                                          ),\n                                        ]\n                                      : [\n                                          _vm._v(\n                                            "\\n                            " +\n                                              _vm._s(\n                                                _vm.$translate(\n                                                  "Ceres::Template.singleItemInvalidAttribute",\n                                                  { name: value.name }\n                                                )\n                                              ) +\n                                              "\\n                        "\n                                          ),\n                                        ],\n                                  ],\n                                  2\n                                )\n                              }),\n                            ],\n                            2\n                          ),\n                          _vm._v(" "),\n                          _c(\n                            "label",\n                            {\n                              directives: [\n                                {\n                                  name: "tooltip",\n                                  rawName: "v-tooltip",\n                                  value: _vm.isTextCut(attribute.name),\n                                  expression: "isTextCut(attribute.name)",\n                                },\n                              ],\n                              attrs: {\n                                for: "custom-select_" + attribute.name,\n                                "data-toggle": "tooltip",\n                                "data-placement": "top",\n                                title: attribute.name,\n                                "data-testing":\n                                  "variation-select-dropdown-label",\n                              },\n                            },\n                            [_vm._v(_vm._s(attribute.name))]\n                          ),\n                        ]\n                      )\n                    : attribute.type === "box" || attribute.type === "image"\n                    ? _c("div", [\n                        _c(\n                          "span",\n                          {\n                            staticClass: "text-muted",\n                            attrs: { "data-testing": "attribute-name" },\n                          },\n                          [_vm._v(_vm._s(attribute.name) + ":")]\n                        ),\n                        _vm._v(" "),\n                        _c(\n                          "b",\n                          { attrs: { "data-testing": "attribute-value" } },\n                          [\n                            _vm._v(\n                              _vm._s(\n                                _vm.getSelectedAttributeValueName(attribute)\n                              )\n                            ),\n                          ]\n                        ),\n                        _vm._v(" "),\n                        _c(\n                          "div",\n                          {\n                            staticClass: "v-s-boxes py-3",\n                            class: { images: attribute.type === "image" },\n                          },\n                          [\n                            _vm.addPleaseSelectOption\n                              ? _c(\n                                  "div",\n                                  {\n                                    staticClass:\n                                      "v-s-box bg-white empty-option",\n                                    class: {\n                                      active:\n                                        _vm.selectedAttributes[\n                                          attribute.attributeId\n                                        ] === -1,\n                                      invalid: !_vm.isAttributeSelectionValid(\n                                        attribute.attributeId,\n                                        -1\n                                      ),\n                                    },\n                                    attrs: {\n                                      "data-testing": "variation-select-box",\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.selectAttribute(\n                                          attribute.attributeId,\n                                          -1\n                                        )\n                                      },\n                                    },\n                                  },\n                                  [\n                                    _c("span", { staticClass: "mx-3" }, [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$translate(\n                                            "Ceres::Template.singleItemPleaseSelect"\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(" "),\n                            _vm.hasEmptyOption\n                              ? _c(\n                                  "div",\n                                  {\n                                    staticClass:\n                                      "v-s-box bg-white empty-option",\n                                    class: {\n                                      active:\n                                        _vm.selectedAttributes[\n                                          attribute.attributeId\n                                        ] === null,\n                                      invalid: !_vm.isAttributeSelectionValid(\n                                        attribute.attributeId,\n                                        null,\n                                        true\n                                      ),\n                                    },\n                                    attrs: {\n                                      "data-testing": "variation-select-box",\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.selectAttribute(\n                                          attribute.attributeId,\n                                          null\n                                        )\n                                      },\n                                    },\n                                  },\n                                  [\n                                    _c("span", { staticClass: "mx-3" }, [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$translate(\n                                            "Ceres::Template.singleItemNoSelection"\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(" "),\n                            _vm._l(attribute.values, function (value) {\n                              return _c(\n                                "div",\n                                {\n                                  directives: [\n                                    {\n                                      name: "tooltip",\n                                      rawName: "v-tooltip",\n                                      value: true,\n                                      expression: "true",\n                                    },\n                                  ],\n                                  key: value.attributeValueId,\n                                  staticClass: "v-s-box bg-white",\n                                  class: {\n                                    active:\n                                      value.attributeValueId ===\n                                      _vm.selectedAttributes[\n                                        attribute.attributeId\n                                      ],\n                                    invalid: !_vm.isAttributeSelectionValid(\n                                      attribute.attributeId,\n                                      value.attributeValueId,\n                                      true\n                                    ),\n                                  },\n                                  attrs: {\n                                    "data-testing": "variation-select-box",\n                                    "data-html": "true",\n                                    "data-toggle": "tooltip",\n                                    "data-placement": "top",\n                                    "data-original-title": _vm.getTooltip(\n                                      attribute,\n                                      value\n                                    ),\n                                  },\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.selectAttribute(\n                                        attribute.attributeId,\n                                        value.attributeValueId\n                                      )\n                                    },\n                                  },\n                                },\n                                [\n                                  attribute.type === "box"\n                                    ? _c("span", { staticClass: "mx-3" }, [\n                                        _vm._v(_vm._s(value.name)),\n                                      ])\n                                    : _c("img", {\n                                        staticClass: "p-1",\n                                        attrs: {\n                                          src: value.imageUrl,\n                                          alt: value.name,\n                                        },\n                                      }),\n                                ]\n                              )\n                            }),\n                          ],\n                          2\n                        ),\n                      ])\n                    : _vm._e(),\n                ]\n              )\n            }),\n            _vm._v(" "),\n            _vm.possibleUnitCombinationIds.length > 1 && _vm.isContentVisible\n              ? _c("div", { staticClass: "col-12 variation-select" }, [\n                  _c("div", { staticClass: "input-unit" }, [\n                    _c(\n                      "select",\n                      {\n                        staticClass: "custom-select",\n                        attrs: {\n                          id: "unit-combination-ids-select",\n                          "data-testing": "variation-select-unit",\n                        },\n                        on: {\n                          change: function ($event) {\n                            return _vm.selectUnit($event.target.value)\n                          },\n                        },\n                      },\n                      _vm._l(\n                        _vm.possibleUnitCombinationIds,\n                        function (unitCombinationId) {\n                          return _c(\n                            "option",\n                            {\n                              key: unitCombinationId,\n                              domProps: {\n                                value: unitCombinationId,\n                                selected:\n                                  parseInt(unitCombinationId) ===\n                                  _vm.selectedUnit,\n                              },\n                            },\n                            [\n                              _vm.isUnitSelectionValid(unitCombinationId)\n                                ? [\n                                    _vm._v(\n                                      "\\n                            " +\n                                        _vm._s(\n                                          _vm.possibleUnits[unitCombinationId]\n                                        ) +\n                                        "\\n                        "\n                                    ),\n                                  ]\n                                : [\n                                    _vm._v(\n                                      "\\n                            " +\n                                        _vm._s(\n                                          _vm.$translate(\n                                            "Ceres::Template.singleItemInvalidAttribute",\n                                            {\n                                              name: _vm.possibleUnits[\n                                                unitCombinationId\n                                              ],\n                                            }\n                                          )\n                                        ) +\n                                        "\\n                        "\n                                    ),\n                                  ],\n                            ],\n                            2\n                          )\n                        }\n                      ),\n                      0\n                    ),\n                    _vm._v(" "),\n                    _c(\n                      "label",\n                      {\n                        attrs: {\n                          for: "unit-combination-ids-select",\n                          "data-testing": "variation-select-unit-label",\n                        },\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.singleItemContent")\n                          )\n                        ),\n                      ]\n                    ),\n                  ]),\n                ])\n              : _vm._e(),\n          ]\n        : [_vm._t("default")],\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/VariationSelect.vue?vue&type=template&id=588c1887&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/dom.js\nvar dom = __webpack_require__(7494);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/VariationSelect.vue?vue&type=script&lang=js&\n\n\n\n\nconst NotificationService = __webpack_require__(1452);\n\n/* harmony default export */ var VariationSelectvue_type_script_lang_js_ = ({\n\n    name: "variation-select",\n\n    props: {\n        forceContent:\n        {\n            type: Boolean,\n            default: false\n        }\n    },\n\n    inject: {\n        itemId: {\n            default: null\n        }\n    },\n\n    data()\n    {\n        return {\n            filteredVariationsCache: {},\n            lastContentCount: 0\n        };\n    },\n\n    mounted()\n    {\n        // initially check for valid selection and disable add to basket button\n        this.$store.commit(`${this.itemId}/variationSelect/setIsVariationSelected`, !!this.currentSelection);\n    },\n\n    computed:\n    {\n        currentVariation() {\n            return this.$store.getters[`${this.itemId}/currentItemVariation`];\n        },\n\n        currentVariationSelect() {\n            return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationSelect;\n        },\n\n        /**\n         * returns true if any variation has no attributes\n         */\n        hasEmptyOption()\n        {\n            return this.variations.some(variation => !variation.attributes.length);\n        },\n\n        addPleaseSelectOption()\n        {\n            return App.config.item.showPleaseSelect;\n        },\n\n        /**\n         * returns the variation, based on the selected attributes / unit\n         * returns false if there are none or multiple results\n         */\n        currentSelection()\n        {\n            const filteredVariations = this.filterVariations(null, null, true);\n\n            if (filteredVariations.length === 1)\n            {\n                return filteredVariations[0];\n            }\n\n            return false;\n        },\n\n        /**\n         * returns all units, selectable by current selection\n         * prop \'forceContent\' with value true will return all units, without filtering\n         */\n        possibleUnits()\n        {\n            // use an object, to make the entries unique\n            const possibleUnits = {};\n            const variations = this.forceContent ? this.variations : this.filterVariations(null, null, null, true);\n\n            for (const variation of variations)\n            {\n                possibleUnits[variation.unitCombinationId] = variation.unitName;\n            }\n\n            return possibleUnits;\n        },\n\n        possibleUnitCombinationIds()\n        {\n            return this.transformPossibleUnits(this.possibleUnits).map(value => value[0]);\n        },\n\n        isContentVisible()\n        {\n            return !this.forceContent && !!this.currentSelection || this.forceContent;\n        },\n\n        hasSelection()\n        {\n            return !(0,utils/* isNullOrUndefined */.le)(this.selectedAttributes) && !Object.values(this.selectedAttributes).some((value) => value < 0);\n        },\n\n        attributes() {\n            return this.currentVariationSelect && this.currentVariationSelect.attributes;\n        },\n\n        selectedAttributes() {\n            return this.currentVariationSelect && this.currentVariationSelect.selectedAttributes;\n        },\n\n        selectedUnit() {\n            return this.currentVariationSelect && this.currentVariationSelect.selectedUnit;\n        },\n\n        variations() {\n            return this.currentVariationSelect && this.currentVariationSelect.variations;\n        }\n    },\n\n    methods:\n    {\n        /**\n         * select an attribute and check, if the selection is valid; if not, unsetInvalidSelection will be executed\n         * @param {number} attributeId\n         * @param {[number, string, null]} attributeValueId\n         */\n        selectAttribute(attributeId, attributeValueId)\n        {\n            attributeValueId = parseInt(attributeValueId) || null;\n\n            if (this.selectedAttributes[attributeId] !== attributeValueId)\n            {\n                this.$store.commit(`${this.itemId}/variationSelect/selectItemAttribute`, { attributeId, attributeValueId });\n                this.onSelectionChange(attributeId, attributeValueId, null);\n            }\n        },\n\n        /**\n         * select a unit and check, if the selection is valid; if not, unsetInvalidSelection will be executed\n         * @param {[number, string]} unitId\n         */\n        selectUnit(unitId)\n        {\n            unitId = parseInt(unitId);\n            this.$store.commit(`${this.itemId}/variationSelect/selectItemUnit`, unitId);\n            this.onSelectionChange(null, null, unitId);\n        },\n\n        onSelectionChange(attributeId, attributeValueId, unitId)\n        {\n            if (this.currentSelection)\n            {\n                this.setVariation(this.currentSelection.variationId);\n            }\n            else if (!this.hasSelection)\n            {\n                // user switched back to "please select"\n                this.setVariation(0);\n            }\n            else\n            {\n                this.unsetInvalidSelection(attributeId, attributeValueId, unitId);\n            }\n\n            this.lastContentCount = this.possibleUnitCombinationIds.length;\n        },\n\n        /**\n         * changes the selected attributes / unit, to ensure a valid seelction\n         * @param {[number, null]} attributeId\n         * @param {[number, null]} attributeValueId\n         * @param {[number, null]} unitId\n         */\n        unsetInvalidSelection(attributeId, attributeValueId, unitId)\n        {\n            const qualifiedVariations = this.getQualifiedVariations(attributeId, attributeValueId, unitId);\n            const closestVariations = this.getClosestVariations(qualifiedVariations);\n            \n            // if the salable \'closestVariations\' is undefined, take the not-salable one\n            const closestVariation = closestVariations[0] || closestVariations[1];\n\n            if (!closestVariation)\n            {\n                return;\n            }\n\n            const invalidSelection = this.getInvalidSelectionByVariation(closestVariation);\n\n            this.correctSelection(invalidSelection);\n        },\n\n        getTooltip(attribute, attributeValue)\n        {\n            if(!this.isAttributeSelectionValid(attribute.attributeId, attributeValue.attributeValueId, true))\n            {\n                return this.getInvalidOptionTooltip(attribute.attributeId, attributeValue.attributeValueId);\n            }\n            else if(attribute.type === "image")\n            {\n                return this.$translate("Ceres::Template.singleItemAttributeTooltip", {\n                    attribute: attribute.name,\n                    value: attributeValue.name\n                });\n            }\n\n            return "";\n        },\n\n        /**\n         * returns a string for box tooltips, for not available options\n         * @param {number} attributeId\n         * @param {number} attributeValueId\n         */\n        getInvalidOptionTooltip(attributeId, attributeValueId)\n        {\n            const qualifiedVariations = this.getQualifiedVariations(attributeId, attributeValueId);\n            const closestVariations   = this.getClosestVariations(qualifiedVariations);\n\n            if (!closestVariations || closestVariations.length <= 0)\n            {\n                return "";\n            }\n\n            const invalidSelections = [\n                !!closestVariations[0] ? this.getInvalidSelectionByVariation(closestVariations[0]) : null,\n                !!closestVariations[1] ? this.getInvalidSelectionByVariation(closestVariations[1]) : null\n            ];\n\n            if (!!invalidSelections[0]\n                && !!invalidSelections[1]\n                && invalidSelections[0].attributesToReset.length > invalidSelections[1].attributesToReset.length)\n            {\n                // there is a non-salable variation with less changes\n                return this.$translate("Ceres::Template.singleItemNotSalable");\n            }\n\n            const invalidSelection = invalidSelections[0] || invalidSelections[1];\n            const names = [];\n\n            for (const attribute of invalidSelection.attributesToReset)\n            {\n                if (attribute.attributeId !== attributeId)\n                {\n                    names.push("<b>" + attribute.name +"</b>");\n                }\n            }\n            if (invalidSelection.newUnit)\n            {\n                names.push(\n                    "<b>" + this.$translate("Ceres::Template.singleItemContent") + "</b>"\n                );\n            }\n\n            if (!names.length)\n            {\n                return null;\n            }\n\n            return this.$translate("Ceres::Template.singleItemNotAvailableInSelection", { name: names.join(", ") });\n        },\n\n        /**\n         * returns a list of variations, filtered by attribute or unit\n         * @param {[number, null]} attributeId\n         * @param {[number, null]} attributeValueId\n         * @param {[number, null]} unitId\n         */\n        getQualifiedVariations(attributeId, attributeValueId, unitId)\n        {\n            if ((0,utils/* isDefined */.$K)(attributeValueId))\n            {\n                return this.variations.filter(variation =>\n                {\n                    return (0,utils/* isDefined */.$K)(variation.attributes.find(attribute =>\n                        attribute.attributeId === attributeId && attribute.attributeValueId === attributeValueId));\n                });\n            }\n            else if ((0,utils/* isDefined */.$K)(unitId))\n            {\n                return this.variations.filter(variation => variation.unitCombinationId === unitId);\n            }\n\n            return this.variations.filter(variation => !variation.attributes.length);\n        },\n\n        /**\n         * return a salable and a non-salable variation with the minimum number of changes on attributes compared to the current selection.\n         * @param {array} qualifiedVariations\n         */\n        getClosestVariations(qualifiedVariations)\n        {\n            let closestSalableVariation, numberOfSalableChanges;\n            let closestNonSalableVariation, numberOfNonSalableChanges;\n\n            for (const variation of qualifiedVariations)\n            {\n                let changes = 0;\n\n                if (variation.unitCombinationId !== this.selectedUnit && !(0,utils/* isNull */.Ft)(this.selectedUnit))\n                {\n                    // when the unit dropdown isn\'t visible, it should have a lower weight for reset investigations\n                    const unitWeight = this.possibleUnitCombinationIds.length > 1 && this.isContentVisible ? 0.9 : 0.1;\n\n                    changes += unitWeight;\n                }\n\n                for (const attribute of variation.attributes)\n                {\n                    if (this.selectedAttributes[attribute.attributeId] !== attribute.attributeValueId)\n                    {\n                        changes++;\n                    }\n                }\n\n                if(variation.isSalable && (!numberOfSalableChanges || changes < numberOfSalableChanges))\n                {\n                    closestSalableVariation = variation;\n                    numberOfSalableChanges = changes;\n                }\n                else if (!variation.isSalable && (!numberOfNonSalableChanges || changes < numberOfNonSalableChanges))\n                {\n                    closestNonSalableVariation = variation;\n                    numberOfNonSalableChanges = changes;\n                }\n            }\n\n            return [closestSalableVariation, closestNonSalableVariation];\n        },\n\n        /**\n         * returns object with array \'attributesToReset\' and newUnit. The attributesToReset contains all attributes, which are not matching with the given variation\n         * @param {object} variation\n         */\n        getInvalidSelectionByVariation(variation)\n        {\n            const attributesToReset = [];\n            let newUnit = null;\n\n            for (let selectedAttributeId in this.selectedAttributes)\n            {\n                selectedAttributeId = parseInt(selectedAttributeId);\n                const variationAttribute = variation.attributes.find(attribute => attribute.attributeId === selectedAttributeId);\n\n                if (!(0,utils/* isNull */.Ft)(this.selectedAttributes[selectedAttributeId]))\n                {\n                    if (variationAttribute && variationAttribute.attributeValueId !== this.selectedAttributes[selectedAttributeId] || !variationAttribute)\n                    {\n                        const attributeToReset = this.attributes.find(attr => attr.attributeId === selectedAttributeId);\n\n                        attributesToReset.push(attributeToReset);\n                    }\n                }\n            }\n\n            if (variation.unitCombinationId !== this.selectedUnit)\n            {\n                newUnit = variation.unitCombinationId;\n            }\n\n            return { attributesToReset, newUnit };\n        },\n\n        /**\n         * resets all invalid attributes and change the unit, if required. Prints a message to the user if so.\n         * @param {object} invalidSelection\n         */\n        correctSelection(invalidSelection)\n        {\n            const messages   = [];\n            const attributes = JSON.parse(JSON.stringify(this.selectedAttributes));\n\n            for (const attributeToReset of invalidSelection.attributesToReset)\n            {\n                messages.push(\n                    this.$translate("Ceres::Template.singleItemNotAvailable", { name: attributeToReset.name })\n                );\n\n                attributes[attributeToReset.attributeId] = (!this.hasEmptyOption && App.config.item.showPleaseSelect) ? -1 : null;\n            }\n\n            if (invalidSelection.newUnit)\n            {\n                if (this.lastContentCount > 1 && this.possibleUnitCombinationIds.length > 1 && !(0,utils/* isNull */.Ft)(this.selectedUnit))\n                {\n                    messages.push(\n                        this.$translate("Ceres::Template.singleItemNotAvailable", { name:\n                                this.$translate("Ceres::Template.singleItemContent")\n                        })\n                    );\n                }\n\n                this.$store.commit(`${this.itemId}/variationSelect/selectItemUnit`, invalidSelection.newUnit);\n            }\n\n            this.$store.commit(`${this.itemId}/variationSelect/setItemSelectedAttributes`, attributes);\n\n            this.setVariation(this.currentSelection ? this.currentSelection.variationId : 0);\n\n            NotificationService.warn(\n                messages.join("<br>")\n            ).closeAfter(5000);\n        },\n\n        /**\n         * returns matching variations with current selection\n         * attributes and unitId could be filled, to check a specific selection\n         * @param {object} attributes\n         * @param {number} unitId\n         * @param {boolean} strict\n         */\n        filterVariations(attributes, unitId, strict, ignoreUnit)\n        {\n            attributes = attributes || this.selectedAttributes;\n            unitId = unitId || this.selectedUnit;\n            strict = !!strict;\n            ignoreUnit = !!ignoreUnit;\n\n            const key = JSON.stringify(attributes) + "_" + unitId + "_" + strict + "_" + ignoreUnit;\n\n            if ((0,utils/* isDefined */.$K)(this.filteredVariationsCache[key]))\n            {\n                return this.filteredVariationsCache[key];\n            }\n\n            const uniqueValues = [...new Set(Object.values(attributes))];\n            const isEmptyOptionSelected = uniqueValues.length === 1 && (0,utils/* isNull */.Ft)(uniqueValues[0]);\n            const filteredVariations = this.variations.filter(variation =>\n            {\n                // the selected unit is not matching\n                if (!ignoreUnit && variation.unitCombinationId !== unitId)\n                {\n                    return false;\n                }\n\n                // the variation has no attributes (only checked, if any attribute has a selected value); or the variation has attributes and empty option is selected\n                // requires more than 0 attributes\n                if (((!isEmptyOptionSelected && !variation.attributes.length) || (isEmptyOptionSelected && variation.attributes.length))\n                    && this.attributes.length > 0)\n                {\n                    return false;\n                }\n\n                for (const attributeId in attributes)\n                {\n                    const variationAttribute = variation.attributes.find(variationAttribute =>\n                        variationAttribute.attributeId === parseInt(attributeId));\n\n                    // an attribute is not matching with selection\n                    if (variationAttribute &&\n                        variationAttribute.attributeValueId !== attributes[attributeId] &&\n                        (strict || !strict && !(0,utils/* isNull */.Ft)(attributes[attributeId]) && attributes[attributeId] !== -1))\n                    {\n                        return false;\n                    }\n                }\n\n                return true;\n            });\n\n            this.filteredVariationsCache[key] = filteredVariations;\n\n            return filteredVariations;\n        },\n\n        /**\n         * returns true, if the selection with a new attribute value would be valid\n         * @param {number} attributeId\n         * @param {[number, string, null]} attributeValueId\n         * @param {boolean} filterSalableVariations\n         */\n        isAttributeSelectionValid(attributeId, attributeValueId, filterSalableVariations)\n        {\n            attributeValueId = parseInt(attributeValueId) || null;\n            if (this.selectedAttributes[attributeId] === attributeValueId)\n            {\n                return true;\n            }\n\n            const selectedAttributes = JSON.parse(JSON.stringify(this.selectedAttributes));\n\n            selectedAttributes[attributeId] = parseInt(attributeValueId) || null;\n\n            const ignoreUnit = !(Object.keys(this.possibleUnits).length > 1 && this.isContentVisible);\n            let variations = this.filterVariations(selectedAttributes, null, null, ignoreUnit);\n\n            if (filterSalableVariations)\n            {\n                variations = variations.filter(variation => variation.isSalable)\n            }\n\n            return variations.length > 0;\n        },\n\n        /**\n         * returns true, if the selection with a new unitId would be valid\n         * @param {[number, string]} unitId\n         */\n        isUnitSelectionValid(unitId)\n        {\n            unitId = parseInt(unitId);\n            if (this.selectedUnit === unitId)\n            {\n                return true;\n            }\n\n            return this\n                .filterVariations(null, unitId)\n                .filter(variation => variation.isSalable)\n                .length > 0\n        },\n\n        /**\n         * dispatch vuex action \'loadVariation\' to archive a variation\n         * dispatches a custom event named \'onVariationChanged\'\n         * @param {[string, number, null]} variationId\n         */\n        setVariation(variationId)\n        {\n            if (!(0,utils/* isDefined */.$K)(variationId) && this.currentSelection)\n            {\n                variationId = this.currentSelection.variationId;\n            }\n\n            if ((0,utils/* isDefined */.$K)(variationId))\n            {\n                this.$store.dispatch(`${this.itemId}/loadVariation`, variationId).then(variation =>\n                {\n                    document.dispatchEvent(new CustomEvent("onVariationChanged",\n                        {\n                            detail:\n                                {\n                                    attributes: variation.attributes,\n                                    documents: variation.documents,\n                                    itemId: this.itemId\n                                }\n                        }));\n                });\n            }\n        },\n\n        isTextCut(content)\n        {\n            if (this.$refs.attributesContaner)\n            {\n                return (0,dom/* textWidth */.$H)(content, "Custom-Font, Helvetica, Arial, sans-serif") > this.$refs.attributesContaner[0].clientWidth;\n            }\n\n            return false;\n        },\n\n        getSelectedAttributeValueName(attribute)\n        {\n            const selectedAttributeValueId =  this.selectedAttributes[attribute.attributeId];\n            const selectedAttributeValue = attribute.values.find(attrValue => attrValue.attributeValueId === selectedAttributeValueId);\n\n            if (selectedAttributeValue)\n            {\n                return selectedAttributeValue.name;\n            }\n            else if (App.config.item.showPleaseSelect && selectedAttributeValueId === -1)\n            {\n                return this.$translate("Ceres::Template.singleItemPleaseSelect");\n            }\n            return this.$translate("Ceres::Template.singleItemNoSelection");\n        },\n\n        transformPossibleUnits(possibleUnits)\n        {\n            return Object.entries(possibleUnits).sort((unitA, unitB) => {\n                unitA = this.splitUnitName(unitA[1]);\n                unitB = this.splitUnitName(unitB[1]);\n                // order by unit\n                if (unitA[1] < unitB[1]) {\n                    return -1;\n                }\n                if (unitA[1] > unitB[1]) {\n                    return 1;\n                }\n                // order by content (count)\n                if (unitA[0] < unitB[0]) {\n                    return -1;\n                }\n                if (unitA[0] > unitB[0]) {\n                    return 1;\n                }\n                return 0;\n            });\n        },\n        splitUnitName(unitName) {\n            const unitNameSplit = unitName.split(" ");\n\n            if (!isNaN(unitNameSplit[0])) {\n                unitNameSplit[0] = unitNameSplit[0].replace(App.currencyPattern.separator_thousands, "");\n                unitNameSplit[0] = parseInt(unitNameSplit[0]);\n            }\n\n            return unitNameSplit;\n        }\n    },\n\n    watch:\n    {\n        currentSelection(value)\n        {\n            this.$store.commit(`${this.itemId}/variationSelect/setIsVariationSelected`, !!value);\n        },\n        variations()\n        {\n            // FIX unset variation cache after subsequent variations are loaded\n            this.filteredVariationsCache = {};\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/VariationSelect.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_VariationSelectvue_type_script_lang_js_ = (VariationSelectvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/VariationSelect.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_VariationSelectvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var VariationSelect = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7621\n')}}]);