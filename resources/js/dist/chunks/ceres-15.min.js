"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[15],{1399:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ SetQuantityInput; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/SetQuantityInput.vue?vue&type=template&id=5c70f1f1&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("quantity-input", {\n    staticClass: "widget-alignment qty-set",\n    attrs: {\n      value: _vm.currentQuantity,\n      min: _vm.setComponentConfig.minimumOrderQuantity,\n      max: _vm.setComponentConfig.maximumOrderQuantity,\n      "variation-id": _vm.currentVariation.variation.id,\n      waiting: !_vm.setComponentConfig.orderQuantityPossible || _vm.isLoading || !_vm.isSalable,\n      "use-appearance": true\n    },\n    on: {\n      "quantity-change": function quantityChange($event) {\n        _vm.currentQuantity = $event;\n      }\n    }\n  });\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/SetQuantityInput.vue?vue&type=template&id=5c70f1f1&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/SetQuantityInput.vue?vue&type=script&lang=js&\n/* harmony default export */ var SetQuantityInputvue_type_script_lang_js_ = ({\n  name: "set-quantity-input",\n  inject: {\n    itemId: {\n      default: null\n    }\n  },\n  computed: {\n    setComponentConfig: function setComponentConfig() {\n      var _this = this;\n      var itemSetId = this.$store.state.items.itemSetId;\n      var setComponents = this.$store.getters["".concat(itemSetId, "/currentItemVariation")].setComponents;\n      if (App.isShopBuilder) {\n        return setComponents[0];\n      } else {\n        return setComponents.find(function (setComponent) {\n          return setComponent.itemId === _this.itemId;\n        });\n      }\n    },\n    currentVariation: function currentVariation() {\n      return this.$store.getters["".concat(this.itemId, "/currentItemVariation")];\n    },\n    isLoading: function isLoading() {\n      return this.$store.state.items.isAddToBasketLoading === this.currentVariation.variation.id || this.$store.state.items.isSetLoading;\n    },\n    isSalable: function isSalable() {\n      return !!this.currentVariation.filter && this.currentVariation.filter.isSalable;\n    },\n    currentQuantity: {\n      get: function get() {\n        return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationOrderQuantity;\n      },\n      set: function set(quantity) {\n        this.$store.commit("".concat(this.itemId, "/setVariationOrderQuantity"), quantity);\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/SetQuantityInput.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_SetQuantityInputvue_type_script_lang_js_ = (SetQuantityInputvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/SetQuantityInput.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_SetQuantityInputvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var SetQuantityInput = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1399\n')}}]);