"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[16],{1464:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ BasketList; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/BasketList.vue?vue&type=template&id=4d459ab0&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", [_c("div", [!_vm.basketItems.length > 0 ? _c("div", [_c("div", {\n    staticClass: "h5 py-3"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketNoItems")))])]) : _vm._e(), _vm._v(" "), _c("transition-group", {\n    attrs: {\n      name: "list-transition",\n      tag: "div"\n    }\n  }, [_vm._l(_vm.basketItems, function (basketItem) {\n    return [_c("basket-list-item", {\n      key: basketItem.id,\n      attrs: {\n        "basket-item": basketItem,\n        "is-preview": _vm.isPreview,\n        "basket-details-data": _vm.basketDetailsData\n      },\n      scopedSlots: _vm._u([{\n        key: "before-basket-item",\n        fn: function fn() {\n          return [_vm._t("before-basket-item")];\n        },\n        proxy: true\n      }, {\n        key: "after-basket-item",\n        fn: function fn() {\n          return [_vm._t("after-basket-item")];\n        },\n        proxy: true\n      }], null, true)\n    })];\n  })], 2)], 1), _vm._v(" "), !_vm.isBasketInitiallyLoaded ? _c("loading-animation", {\n    staticClass: "d-table w-100"\n  }) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketList.vue?vue&type=template&id=4d459ab0&\n\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/BasketListItem.vue?vue&type=template&id=73c8df90&\nvar BasketListItemvue_type_template_id_73c8df90_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "basket-list-item py-3"\n  }, [_vm._t("before-basket-item"), _vm._v(" "), _c("div", {\n    staticClass: "basket-item component-loading with-icon d-flex",\n    class: {\n      "sending is-loading": _vm.waiting,\n      "is-loading": _vm.isCheckoutReadonly\n    }\n  }, [_c("div", {\n    staticClass: "image-container"\n  }, [_c("a", {\n    attrs: {\n      href: _vm._f("itemURL")(_vm.basketItem.variation.data)\n    }\n  }, [_vm.image ? _c("lazy-img", {\n    attrs: {\n      "picture-class": "d-block mw-100 mh-100",\n      "image-url": _vm.image,\n      alt: _vm.altText,\n      title: _vm.itemName,\n      "data-testing": "basket-item-img"\n    }\n  }) : _vm._e()], 1)]), _vm._v(" "), _c("div", {\n    staticClass: "meta-container-wrapper"\n  }, [_c("div", {\n    staticClass: "meta-container-wrapper-inner"\n  }, [_c("div", {\n    staticClass: "meta-container"\n  }, [_c("div", {\n    staticClass: "position-relative w-100"\n  }, [_c("a", {\n    staticClass: "item-name text-primary text-appearance small font-weight-bold text-break",\n    attrs: {\n      href: _vm._f("itemURL")(_vm.basketItem.variation.data),\n      "data-testing": "basket-item-name"\n    }\n  }, [_vm._v("\\n                            " + _vm._s(_vm._f("itemName")(_vm.basketItem.variation.data)) + "\\n                        ")]), _vm._v(" "), _c("div", {\n    staticClass: "item-base-price small"\n  }, [_vm._v("\\n                            " + _vm._s(_vm._f("currency")(_vm.unitPrice)) + "\\n                        ")]), _vm._v(" "), _c("item-bundle", {\n    attrs: {\n      "bundle-type": _vm.basketItem.variation.data.variation.bundleType,\n      "bundle-components": _vm.basketItem.variation.data.bundleComponents\n    }\n  }), _vm._v(" "), !(_vm.basketItem.variation.data.unit.unitOfMeasurement === "C62" && _vm.basketItem.variation.data.unit.content === 1) && _vm.basketItem.variation.data.variation.mayShowUnitPrice ? _c("div", {\n    staticClass: "text-muted small"\n  }, [_c("div", [_vm._v("\\n                                " + _vm._s(_vm.basePrice) + "\\n                            ")]), _vm._v(" "), _c("div", [_c("strong", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketContent")) + ": ")]), _vm._v("\\n                                " + _vm._s(_vm.basketItem.variation.data.unit.content) + " " + _vm._s(_vm.basketItem.variation.data.unit.names.name) + "\\n                            ")])]) : _vm._e(), _vm._v(" "), _vm.basketItem.inputLength > 0 || _vm.basketItem.inputWidth > 0 ? _c("div", {\n    staticClass: "small"\n  }, [_c("div", [_c("strong", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.itemInput")) + " " + _vm._s(_vm._f("inputUnit")(_vm.basketItem, true)) + ": ")]), _vm._v("\\n                                " + _vm._s(_vm._f("inputUnit")(_vm.basketItem)) + "\\n                            ")])]) : _vm._e(), _vm._v(" "), _c("div", {\n    staticClass: "small"\n  }, _vm._l(_vm.basketItem.variation.data.attributes, function (attribute) {\n    return _c("div", [_c("strong", [_vm._v(_vm._s(attribute.attribute.names.name) + ": ")]), _vm._v(" "), _c("span", [_vm._v(_vm._s(attribute.value.names.name))])]);\n  }), 0), _vm._v(" "), _c("div", {\n    staticClass: "text-muted small"\n  }, [_vm._l(_vm.basketItem.variation.data.variationProperties, function (propertyGroup) {\n    return _vm._l(propertyGroup.properties, function (property) {\n      return _c("div", [propertyGroup.name ? _c("strong", [_vm._v(_vm._s(propertyGroup.name) + ": ")]) : _vm._e(), _vm._v(" "), _c("span", [_vm._v(_vm._s(property.names.name))]), _vm._v(" "), property.cast === "file" ? _c("span", [_c("a", {\n        attrs: {\n          href: _vm._f("propertyFileUrl")(property.values.value),\n          target: "_blank"\n        },\n        domProps: {\n          innerHTML: _vm._s(property.values.value)\n        }\n      })]) : property.cast === "multiSelection" && property.values[0] !== undefined ? [_c("ul", {\n        staticClass: "pl-3"\n      }, _vm._l(property.values, function (multiSelectProperty) {\n        return _c("li", [_vm._v(_vm._s(multiSelectProperty.value))]);\n      }), 0)] : _c("span", {\n        domProps: {\n          innerHTML: _vm._s(property.values.value)\n        }\n      })], 2);\n    });\n  })], 2)], 1)]), _vm._v(" "), _c("div", {\n    staticClass: "basket-item-container-right"\n  }, [_c("div", {\n    staticClass: "qty-box-container"\n  }, [_c("quantity-input", {\n    attrs: {\n      value: _vm.basketItem.quantity,\n      waiting: _vm.isInputLocked || _vm.isCheckoutReadonly,\n      min: _vm.basketItem.variation.data.variation.minimumOrderQuantity,\n      max: _vm.basketItem.variation.data.variation.maximumOrderQuantity,\n      interval: _vm.basketItem.variation.data.variation.intervalOrderQuantity\n    },\n    on: {\n      "quantity-change": _vm.updateQuantity\n    }\n  })], 1), _vm._v(" "), _c("div", {\n    staticClass: "price-box text-right ml-2 mt-1"\n  }, [_c("div", {\n    staticClass: "item-total-price font-weight-bold text-nowrap"\n  }, [_vm._v(_vm._s(_vm._f("currency")(_vm.basketItem.quantity * _vm.unitPrice, _vm.basketItem.variation.data.prices.default.currency)))]), _vm._v(" "), _c("button", {\n    staticClass: "btn btn-sm text-danger p-0",\n    class: {\n      disabled: _vm.waiting || _vm.isBasketLoading || _vm.isCheckoutReadonly || _vm.waitingForDelete\n    },\n    attrs: {\n      "data-testing": "basket-item-delete"\n    },\n    on: {\n      click: _vm.deleteItem\n    }\n  }, [_vm._v("\\n                            " + _vm._s(_vm.$translate("Ceres::Template.basketDelete")) + "\\n                            "), _c("icon", {\n    staticClass: "default-float",\n    attrs: {\n      icon: "trash-o",\n      loading: _vm.waitingForDelete\n    }\n  })], 1)])])]), _vm._v(" "), _vm.basketItem.setComponents ? _c("basket-set-component-list", {\n    attrs: {\n      "set-components": _vm.basketItem.setComponents,\n      "set-item": _vm.basketItem\n    }\n  }) : _vm._e(), _vm._v(" "), _c("order-property-value-list", {\n    attrs: {\n      "basket-item": _vm.basketItem\n    }\n  }), _vm._v(" "), _vm.showMoreInformation ? _c("div", {\n    staticClass: "small"\n  }, [_vm.isDataFieldVisible("basket.item.item_id") && _vm.basketItem.variation.data.item.id ? [_c("div", {\n    staticClass: "mt-3"\n  }, [_c("strong", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketItemId")) + ":")]), _vm._v(" "), _c("span", [_vm._v(_vm._s(_vm.basketItem.variation.data.item.id))])])] : _vm._e(), _vm._v(" "), _vm.isDataFieldVisible("basket.item.customNumber") ? [_vm.basketItem.variation.data.variation.number ? _c("div", [_c("strong", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketItemNumber")) + ":")]), _vm._v(" "), _c("span", [_vm._v(_vm._s(_vm.basketItem.variation.data.variation.number))])]) : _vm._e()] : _vm._e(), _vm._v(" "), _vm.isDataFieldVisible("basket.item.availability") ? [_vm.basketItem.variation.data.variation.availability && _vm.basketItem.variation.data.variation.availability.names.name ? _c("div", [_c("strong", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketAvailability")) + ":")]), _vm._v(" "), _c("span", [_vm._v(_vm._s(_vm.basketItem.variation.data.variation.availability.names.name))])]) : _vm._e()] : _vm._e(), _vm._v(" "), _vm.isDataFieldVisible("basket.item.description_long") ? [_vm.basketItem.variation.data.texts.description ? _c("p", {\n    staticClass: "my-3",\n    domProps: {\n      innerHTML: _vm._s(_vm.basketItem.variation.data.texts.description)\n    }\n  }) : _vm._e()] : _vm._e(), _vm._v(" "), _vm.isDataFieldVisible("basket.item.description_short") ? [_vm.basketItem.variation.data.texts.shortDescription ? _c("p", {\n    staticClass: "my-3",\n    domProps: {\n      innerHTML: _vm._s(_vm.basketItem.variation.data.texts.shortDescription)\n    }\n  }) : _vm._e()] : _vm._e()], 2) : _vm._e(), _vm._v(" "), _vm.isMoreButtonVisible ? _c("label", {\n    staticClass: "btn-collapse",\n    class: {\n      collapsed: !_vm.showMoreInformation\n    },\n    attrs: {\n      "data-show-more": _vm.$translate("Ceres::Template.basketShowMore"),\n      "data-show-less": _vm.$translate("Ceres::Template.basketShowLess")\n    },\n    on: {\n      click: function click($event) {\n        _vm.showMoreInformation = !_vm.showMoreInformation;\n      }\n    }\n  }) : _vm._e()], 1)]), _vm._v(" "), _vm._t("after-basket-item")], 2);\n};\nvar BasketListItemvue_type_template_id_73c8df90_staticRenderFns = [];\nBasketListItemvue_type_template_id_73c8df90_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketListItem.vue?vue&type=template&id=73c8df90&\n\n// EXTERNAL MODULE: ./resources/js/src/app/exceptions/ExceptionMap.js\nvar ExceptionMap = __webpack_require__(6799);\n// EXTERNAL MODULE: ./resources/js/src/app/services/TranslationService.js\nvar TranslationService = __webpack_require__(6698);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(9413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/BasketSetComponentList.vue?vue&type=template&id=05de3e1c&\nvar BasketSetComponentListvue_type_template_id_05de3e1c_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _vm.setComponents.length > 0 ? _c("div", {\n    staticClass: "set-data small"\n  }, [_c("div", {\n    staticClass: "mb-2"\n  }, [_c("strong", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.itemSetContent")))])]), _vm._v(" "), _vm._l(_vm.setComponents, function (setComponent) {\n    return [_c("set-component-item", {\n      attrs: {\n        variation: setComponent.variation.data,\n        quantity: setComponent.quantity,\n        "order-properties": setComponent.basketItemOrderParams,\n        rebate: _vm.setItem.variation.data.item.rebate\n      }\n    })];\n  })], 2) : _vm._e();\n};\nvar BasketSetComponentListvue_type_template_id_05de3e1c_staticRenderFns = [];\nBasketSetComponentListvue_type_template_id_05de3e1c_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketSetComponentList.vue?vue&type=template&id=05de3e1c&\n\n// EXTERNAL MODULE: ./resources/js/src/app/components/basket/list/SetComponentItem.vue + 4 modules\nvar SetComponentItem = __webpack_require__(3397);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/BasketSetComponentList.vue?vue&type=script&lang=js&\n\n/* harmony default export */ var BasketSetComponentListvue_type_script_lang_js_ = ({\n  name: "basket-set-component-list",\n  components: {\n    SetComponentItem: SetComponentItem/* default */.Z\n  },\n  props: {\n    setComponents: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    setItem: Object\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketSetComponentList.vue?vue&type=script&lang=js&\n /* harmony default export */ var list_BasketSetComponentListvue_type_script_lang_js_ = (BasketSetComponentListvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketSetComponentList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  list_BasketSetComponentListvue_type_script_lang_js_,\n  BasketSetComponentListvue_type_template_id_05de3e1c_render,\n  BasketSetComponentListvue_type_template_id_05de3e1c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var BasketSetComponentList = (component.exports);\n// EXTERNAL MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue + 9 modules\nvar OrderPropertyValueList = __webpack_require__(5413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/BasketListItem.vue?vue&type=script&lang=js&\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\n\nvar NotificationService = __webpack_require__(1841);\n\n\n/* harmony default export */ var BasketListItemvue_type_script_lang_js_ = ({\n  name: "basket-list-item",\n  components: {\n    BasketSetComponentList: BasketSetComponentList,\n    OrderPropertyValueList: OrderPropertyValueList/* default */.Z\n  },\n  props: {\n    template: {\n      type: String,\n      default: "#vue-basket-list-item"\n    },\n    basketItem: Object,\n    basketDetailsData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    isPreview: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      waiting: false,\n      waitingForDelete: false,\n      itemCondition: "",\n      showMoreInformation: false\n    };\n  },\n  computed: _objectSpread({\n    image: function image() {\n      var itemImages = this.$options.filters.itemImages(this.basketItem.variation.data.images, "urlPreview");\n      return this.$options.filters.itemImage(itemImages);\n    },\n    altText: function altText() {\n      var images = this.$options.filters.itemImages(this.basketItem.variation.data.images, "urlPreview");\n      var altText = this.$options.filters.itemImageAlternativeText(images);\n      if (altText) {\n        return altText;\n      }\n      return this.itemName;\n    },\n    itemName: function itemName() {\n      return this.$options.filters.itemName(this.basketItem.variation.data);\n    },\n    isInputLocked: function isInputLocked() {\n      return this.waiting || this.isBasketLoading;\n    },\n    propertySurchargeSum: function propertySurchargeSum() {\n      var sum = 0;\n      var _iterator = _createForOfIteratorHelper(this.basketItem.basketItemOrderParams),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var property = _step.value;\n          sum += this.$options.filters.propertySurcharge(this.basketItem.variation.data.properties, property.propertyId);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return sum;\n    },\n    unitPrice: function unitPrice() {\n      var setComponentsParamSurcharge = 0;\n      if ((0,utils/* isDefined */.$K)(this.basketItem.setComponents)) {\n        setComponentsParamSurcharge = this.basketItem.setComponents.map(function (component) {\n          return component.quantity * component.attributeTotalMarkup;\n        }).reduce(function (sum, i) {\n          return sum + i;\n        }, 0);\n      }\n      return this.basketItem.price + setComponentsParamSurcharge;\n    },\n    basePrice: function basePrice() {\n      var _this = this;\n      // if the \'AfterBasketItemUpdate\' event contains a new base price for the item, return it\n      if (!(0,utils/* isNullOrUndefined */.le)(this.basketItem.updatedBasePrice)) {\n        return this.basketItem.updatedBasePrice;\n      }\n      if (!(0,utils/* isNullOrUndefined */.le)(this.basketItem.variation.data.prices.specialOffer)) {\n        return this.basketItem.variation.data.prices.specialOffer.basePrice;\n      }\n      if (!(0,utils/* isNullOrUndefined */.le)(this.basketItem.variation.data.prices.graduatedPrices)) {\n        var calculatedPrice = null;\n        this.basketItem.variation.data.prices.graduatedPrices.forEach(function (price) {\n          if ((0,utils/* isNullOrUndefined */.le)(calculatedPrice) && _this.basketItem.quantity >= price.minimumOrderQuantity) {\n            calculatedPrice = price;\n          } else if (_this.basketItem.quantity >= price.minimumOrderQuantity && price.minimumOrderQuantity >= calculatedPrice.minimumOrderQuantity) {\n            calculatedPrice = price;\n          }\n        });\n        if (!(0,utils/* isNullOrUndefined */.le)(calculatedPrice)) {\n          return calculatedPrice.basePrice;\n        }\n      }\n      return this.basketItem.variation.data.prices.default.basePrice;\n    },\n    // eslint-disable-next-line complexity\n    isMoreButtonVisible: function isMoreButtonVisible() {\n      return this.isDataFieldVisible("basket.item.item_id") && this.basketItem.variation.data.item.id || this.isDataFieldVisible("basket.item.customNumber") && this.basketItem.variation.data.variation.number || this.isDataFieldVisible("basket.item.availability") && this.basketItem.variation.data.variation.availability.names.name || this.isDataFieldVisible("basket.item.description_long") && this.basketItem.variation.data.texts.description || this.isDataFieldVisible("basket.item.description_short") && this.basketItem.variation.data.texts.shortDescription;\n    }\n  }, (0,vuex_esm/* mapState */.rn)({\n    isBasketLoading: function isBasketLoading(state) {\n      return state.basket.isBasketLoading;\n    },\n    isCheckoutReadonly: function isCheckoutReadonly(state) {\n      return state.checkout.readOnly;\n    },\n    showNetPrice: function showNetPrice(state) {\n      return state.basket.showNetPrices;\n    }\n  })),\n  methods: {\n    /**\n     * Delete item from basket\n     */\n    deleteItem: function deleteItem() {\n      var _this2 = this;\n      if (!this.waiting && !this.waitingForDelete && !this.isBasketLoading) {\n        this.waitingForDelete = true;\n        this.$store.dispatch("removeBasketItem", this.basketItem.id).then(function (response) {\n          document.dispatchEvent(new CustomEvent("afterBasketItemRemoved", {\n            detail: _this2.basketItem\n          }));\n          _this2.waitingForDelete = false;\n        }, function (error) {\n          _this2.waitingForDelete = false;\n        });\n      }\n    },\n    /**\n     * Update item quantity in basket\n     * @param quantity\n     */\n    updateQuantity: function updateQuantity(quantity) {\n      var _this3 = this;\n      if (this.basketItem.quantity !== quantity) {\n        this.waiting = true;\n        var origQty = this.basketItem.quantity;\n        this.$store.dispatch("updateBasketItemQuantity", {\n          id: this.basketItem.id,\n          variationId: this.basketItem.variation.id,\n          quantity: quantity\n        }).then(function (response) {\n          document.dispatchEvent(new CustomEvent("afterBasketItemQuantityUpdated", {\n            detail: _this3.basketItem\n          }));\n          _this3.waiting = false;\n        }, function (error) {\n          _this3.basketItem.quantity = origQty;\n          if (_this3.isPreview) {\n            _this3.$store.dispatch("addBasketNotification", {\n              type: "error",\n              message: TranslationService/* default.translate */.Z.translate("Ceres::Template." + ExceptionMap/* default.get */.Z.get(error.data.exceptionCode.toString()), error.data.placeholder)\n            });\n          } else {\n            NotificationService.error(TranslationService/* default.translate */.Z.translate("Ceres::Template." + ExceptionMap/* default.get */.Z.get(error.data.exceptionCode.toString()), error.data.placeholder)).closeAfter(5000);\n          }\n          _this3.waiting = false;\n        });\n      }\n    },\n    isDataFieldVisible: function isDataFieldVisible(value) {\n      return this.basketDetailsData.includes(value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketListItem.vue?vue&type=script&lang=js&\n /* harmony default export */ var list_BasketListItemvue_type_script_lang_js_ = (BasketListItemvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketListItem.vue\n\n\n\n\n\n/* normalize component */\n;\nvar BasketListItem_component = (0,componentNormalizer/* default */.Z)(\n  list_BasketListItemvue_type_script_lang_js_,\n  BasketListItemvue_type_template_id_73c8df90_render,\n  BasketListItemvue_type_template_id_73c8df90_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var BasketListItem = (BasketListItem_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/BasketList.vue?vue&type=script&lang=js&\n\n\n/* harmony default export */ var BasketListvue_type_script_lang_js_ = ({\n  name: "basket-list",\n  components: {\n    BasketListItem: BasketListItem\n  },\n  props: {\n    template: {\n      type: String,\n      default: "#vue-basket-list"\n    },\n    basketDetailsData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    isPreview: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: (0,vuex_esm/* mapState */.rn)({\n    basketItems: function basketItems(state) {\n      return state.basket.items;\n    },\n    isBasketInitiallyLoaded: function isBasketInitiallyLoaded(state) {\n      return state.basket.isBasketInitiallyLoaded;\n    }\n  })\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketList.vue?vue&type=script&lang=js&\n /* harmony default export */ var list_BasketListvue_type_script_lang_js_ = (BasketListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/BasketList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar BasketList_component = (0,componentNormalizer/* default */.Z)(\n  list_BasketListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var BasketList = (BasketList_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1464\n')},3397:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ SetComponentItem; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/SetComponentItem.vue?vue&type=template&id=40dd6c44&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    staticClass: "d-flex mb-2"\n  }, [_c("span", {\n    staticClass: "text-muted"\n  }, [_vm._v(_vm._s(_vm.quantity) + "x")]), _vm._v(" "), _c("div", {\n    staticClass: "image-container mx-1"\n  }, [_vm.itemImage ? _c("lazy-img", {\n    attrs: {\n      "picture-class": "d-block mw-100 mh-100",\n      "image-url": _vm.itemImage,\n      alt: _vm.altText,\n      title: _vm.itemName\n    }\n  }) : _vm._e()], 1), _vm._v(" "), _c("div", [_c("a", {\n    staticClass: "item-name text-primary text-appearance font-weight-bold text-break",\n    attrs: {\n      href: _vm._f("itemURL")(_vm.variation)\n    }\n  }, [_vm._v("\\n            " + _vm._s(_vm.itemName) + "\\n        ")]), _vm._v(" "), _vm._l(_vm.variation.attributes, function (attribute) {\n    return _c("div", {\n      staticClass: "small"\n    }, [_c("strong", [_vm._v(_vm._s(attribute.attribute.names.name) + ": ")]), _vm._v(" "), _c("span", [_vm._v(_vm._s(attribute.value.names.name))])]);\n  }), _vm._v(" "), _c("div", {\n    staticClass: "text-muted small"\n  }, [_vm._l(_vm.variation.variationProperties, function (propertyGroup) {\n    return _vm._l(propertyGroup.properties, function (property) {\n      return _c("div", [propertyGroup.name ? _c("strong", [_vm._v(_vm._s(propertyGroup.name) + ": ")]) : _vm._e(), _vm._v(" "), _c("span", [_vm._v(_vm._s(property.names.name))]), _vm._v(" "), property.cast == "file" ? _c("span", [_c("a", {\n        attrs: {\n          href: _vm._f("propertyFileUrl")(property.values.value),\n          target: "_blank"\n        },\n        domProps: {\n          innerHTML: _vm._s(property.values.value)\n        }\n      })]) : _c("span", {\n        domProps: {\n          innerHTML: _vm._s(property.values.value)\n        }\n      })]);\n    });\n  })], 2), _vm._v(" "), _c("order-property-value-list", {\n    attrs: {\n      "basket-item": _vm.mappedBasketItem\n    }\n  })], 2)]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/SetComponentItem.vue?vue&type=template&id=40dd6c44&\n\n// EXTERNAL MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue + 9 modules\nvar OrderPropertyValueList = __webpack_require__(5413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/list/SetComponentItem.vue?vue&type=script&lang=js&\n\n/* harmony default export */ var SetComponentItemvue_type_script_lang_js_ = ({\n  name: "set-component-item",\n  components: {\n    OrderPropertyValueList: OrderPropertyValueList/* default */.Z\n  },\n  props: {\n    variation: Object,\n    quantity: Number,\n    orderProperties: Array,\n    rebate: Number\n  },\n  computed: {\n    itemImage: function itemImage() {\n      var itemImages = this.$options.filters.itemImages(this.variation.images, "urlPreview");\n      return this.$options.filters.itemImage(itemImages);\n    },\n    altText: function altText() {\n      var images = this.$options.filters.itemImages(this.variation.images, "urlPreview");\n      return this.$options.filters.itemImageAlternativeText(images) || this.itemName;\n    },\n    itemName: function itemName() {\n      return this.$options.filters.itemName(this.variation);\n    },\n    mappedBasketItem: function mappedBasketItem() {\n      // bring given data in basket item structure\n      return {\n        variation: {\n          data: this.variation\n        },\n        basketItemOrderParams: this.orderProperties\n      };\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/SetComponentItem.vue?vue&type=script&lang=js&\n /* harmony default export */ var list_SetComponentItemvue_type_script_lang_js_ = (SetComponentItemvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/list/SetComponentItem.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  list_SetComponentItemvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var SetComponentItem = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3397\n')},5413:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ OrderPropertyValueList; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=template&id=2d8aca16&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _vm.shownProperties && _vm.shownProperties.length ? _c("div", {\n    staticClass: "small"\n  }, [_c("div", {\n    staticClass: "font-weight-bold my-1"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketAdditionalCosts")) + ":")]), _vm._v(" "), _c("ul", {\n    staticClass: "ml-1 pl-3",\n    attrs: {\n      "data-testing": "order-property-list"\n    }\n  }, _vm._l(_vm.shownProperties, function (property) {\n    return _c("order-property-value-list-item", {\n      key: property.propertyId,\n      attrs: {\n        property: property\n      }\n    });\n  }), 1)]) : _vm._e();\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=template&id=2d8aca16&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(9413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=template&id=f7b6d6d2&\nvar OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("li", [_c("span", {\n    staticClass: "d-block"\n  }, [_c("strong", {\n    class: {\n      colon: _vm.showColon\n    }\n  }, [_vm._v("\\n            " + _vm._s(_vm.property.property.names.name) + " \\n            "), _vm.surcharge > 0 ? [_vm.isAdditionalCost || _vm.isTaxless ? [_vm._v("\\n                    (" + _vm._s(_vm.$translate("Ceres::Template.basketPlusAbbr")) + " " + _vm._s(_vm._f("currency")(_vm.surcharge)) + ")\\n                ")] : [_vm._v("\\n                    (" + _vm._s(_vm.$translate("Ceres::Template.basketIncludeAbbr")) + " " + _vm._s(_vm._f("currency")(_vm.surcharge)) + ")\\n                ")]] : _vm._e()], 2), _vm._v(" "), _c("span", [_vm.property.property.valueType === "file" ? _c("span", [_c("a", {\n    attrs: {\n      href: _vm._f("fileUploadPath")(_vm.property.property.value),\n      target: "_blank"\n    }\n  }, [_c("i", {\n    staticClass: "fa fa-external-link",\n    attrs: {\n      "aria-hidden": "true"\n    }\n  }), _vm._v("\\n                    " + _vm._s(_vm._f("fileName")(_vm.property.property.value)) + "\\n                ")])]) : _vm.property.property.valueType !== "empty" ? _c("span", [_vm._v(_vm._s(_vm.property.property.value))]) : _vm._e()])])]);\n};\nvar OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_staticRenderFns = [];\nOrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=template&id=f7b6d6d2&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/OrderPropertyHelper.js\nvar OrderPropertyHelper = __webpack_require__(672);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=script&lang=js&\n\n/* harmony default export */ var OrderPropertyValueListItemvue_type_script_lang_js_ = ({\n  name: "order-property-value-list-item",\n  props: {\n    property: {\n      required: true,\n      type: Object\n    }\n  },\n  computed: {\n    surcharge: function surcharge() {\n      return this.$options.filters.propertySurcharge([this.property], this.property.propertyId);\n    },\n    isAdditionalCost: function isAdditionalCost() {\n      return (0,OrderPropertyHelper/* isAdditionalCosts */.Lh)(this.property);\n    },\n    isTaxless: function isTaxless() {\n      return !(0,OrderPropertyHelper/* hasVat */.uP)(this.property) && App.useVariationOrderProperties;\n    },\n    showColon: function showColon() {\n      return this.property && this.property.property.value && this.property.property.valueType !== "empty";\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyValueListItemvue_type_script_lang_js_ = (OrderPropertyValueListItemvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyValueListItemvue_type_script_lang_js_,\n  OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render,\n  OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var OrderPropertyValueListItem = (component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=script&lang=js&\n\n\n/* harmony default export */ var OrderPropertyValueListvue_type_script_lang_js_ = ({\n  name: "order-property-value-list",\n  components: {\n    OrderPropertyValueListItem: OrderPropertyValueListItem\n  },\n  props: {\n    basketItem: {\n      required: true,\n      type: Object\n    }\n  },\n  computed: {\n    shownProperties: function shownProperties() {\n      var _this = this;\n      var shownProperties = [];\n      this.basketItem.variation.data.properties.forEach(function (property) {\n        var filledProperty = _this.basketItem.basketItemOrderParams.find(function (prop) {\n          return parseInt(prop.propertyId) === property.propertyId;\n        });\n        if ((0,utils/* isDefined */.$K)(filledProperty)) {\n          if (filledProperty.type === "selection") {\n            property.property.value = property.property.selectionValues[filledProperty.value].name;\n          } else {\n            property.property.value = filledProperty.value;\n          }\n        }\n        if ((0,utils/* isDefined */.$K)(filledProperty) || _this.isPropertyWithAdditionalCosts(property)) {\n          shownProperties.push(property);\n        }\n      });\n      return shownProperties;\n    }\n  },\n  methods: {\n    isPropertyWithAdditionalCosts: function isPropertyWithAdditionalCosts(property) {\n      return property.property && property.property.isShownAtCheckout && property.property.isShownAsAdditionalCosts && !property.property.isOderProperty;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyValueListvue_type_script_lang_js_ = (OrderPropertyValueListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderPropertyValueList_component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyValueListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var OrderPropertyValueList = (OrderPropertyValueList_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5413\n')}}]);