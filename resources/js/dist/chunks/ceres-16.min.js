"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[16,28],{574:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ AddToBasket; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/AddToBasket.vue?vue&type=template&id=4d877efb&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c("div", [\n    !_vm.showQuantity && _vm.useLargeScale && _vm.canBeAddedToBasket\n      ? _c(\n          "div",\n          {\n            directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n            staticClass: "add-to-basket-lg-container d-none d-lg-block",\n            class: { "no-pointer-events": _vm.isLoading },\n            attrs: {\n              "data-toggle": "tooltip",\n              "data-placement": "top",\n              title: _vm.$translate("Ceres::Template.singleItemAddToBasket"),\n            },\n            on: {\n              click: function ($event) {\n                return _vm.addToBasket()\n              },\n            },\n          },\n          [\n            _c("icon", {\n              staticClass: "fa-lg mobile-icon-right",\n              attrs: { icon: "cart-plus", loading: _vm.isLoading },\n            }),\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(" "),\n    !_vm.showQuantity && _vm.useLargeScale && !_vm.canBeAddedToBasket\n      ? _c(\n          "div",\n          {\n            directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n            staticClass: "add-to-basket-lg-container d-none d-lg-block",\n            attrs: {\n              "data-toggle": "tooltip",\n              "data-placement": "top",\n              title: _vm.$translate("Ceres::Template.itemShowItem"),\n            },\n            on: {\n              click: function ($event) {\n                return _vm.directToItem()\n              },\n            },\n          },\n          [\n            _c("i", {\n              staticClass: "fa fa-arrow-right fa-lg d-none d-sm-block",\n            }),\n          ]\n        )\n      : _vm._e(),\n    _vm._v(" "),\n    _vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          "div",\n          {\n            staticClass: "d-inline",\n            class: { "d-lg-none": !_vm.$ceres.isItemView },\n          },\n          [\n            _c("div", { staticClass: "add-to-basket-container" }, [\n              _c(\n                "div",\n                { staticClass: "quantity-input-container" },\n                [\n                  _c("quantity-input", {\n                    attrs: {\n                      value: _vm.quantity,\n                      timeout: 0,\n                      min: _vm.minimumQuantity,\n                      max: _vm.maximumQuantity,\n                      interval: _vm.intervalQuantity,\n                      "variation-id": _vm.variationId,\n                      waiting:\n                        _vm.isLoading ||\n                        !_vm.isSalable ||\n                        !_vm.allVariationsSelected,\n                    },\n                    on: {\n                      "quantity-change": _vm.updateQuantity,\n                      "out-of-stock": _vm.handleButtonState,\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(" "),\n              !_vm.allVariationsSelected || !_vm.isSalable\n                ? _c(\n                    "button",\n                    {\n                      directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n                      staticClass:\n                        "btn btn-block btn-primary btn-appearance disabled",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        "data-toggle": "tooltip",\n                        "data-placement": "top",\n                        title: _vm.tooltipText,\n                      },\n                    },\n                    [\n                      _c("i", {\n                        staticClass: "fa fa-shopping-cart",\n                        attrs: { "aria-hidden": "true" },\n                      }),\n                      _vm._v(\n                        "\\n                " +\n                          _vm._s(\n                            _vm.$translate(\n                              "Ceres::Template.singleItemAddToBasket"\n                            )\n                          ) +\n                          "\\n            "\n                      ),\n                    ]\n                  )\n                : !_vm.buttonLockState\n                ? _c(\n                    "button",\n                    {\n                      staticClass: "btn btn-block btn-primary btn-appearance",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: { disabled: _vm.isLoading || !_vm.hasPrice },\n                      on: {\n                        click: function ($event) {\n                          return _vm.addToBasket()\n                        },\n                      },\n                    },\n                    [\n                      _c("icon", {\n                        attrs: {\n                          icon: "shopping-cart",\n                          loading: _vm.isLoading,\n                        },\n                      }),\n                      _vm._v(\n                        "\\n                " +\n                          _vm._s(\n                            _vm.$translate(\n                              "Ceres::Template.singleItemAddToBasket"\n                            )\n                          ) +\n                          "\\n            "\n                      ),\n                    ],\n                    1\n                  )\n                : _c(\n                    "button",\n                    {\n                      directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n                      staticClass:\n                        "btn btn-block btn-primary btn-appearance disabled",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        "data-toggle": "tooltip",\n                        "data-placement": "top",\n                        title: _vm._f("translate")(\n                          "Ceres::Template.singleItemQuantityMax",\n                          { max: _vm.maximumQuantity }\n                        ),\n                      },\n                    },\n                    [\n                      _c("icon", {\n                        attrs: {\n                          icon: "shopping-cart",\n                          waiting: _vm.isLoading,\n                        },\n                      }),\n                      _vm._v(\n                        "\\n                " +\n                          _vm._s(\n                            _vm.$translate(\n                              "Ceres::Template.singleItemAddToBasket"\n                            )\n                          ) +\n                          "\\n            "\n                      ),\n                    ],\n                    1\n                  ),\n            ]),\n          ]\n        )\n      : _vm._e(),\n    _vm._v(" "),\n    !_vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          "div",\n          { staticClass: "d-inline", class: { "d-lg-none": !_vm.isWishList } },\n          [\n            _c(\n              "div",\n              {\n                staticClass: "btn-group",\n                attrs: { role: "group", "aria-label": "Thumb Control" },\n              },\n              [\n                _vm.canBeAddedToBasket\n                  ? _c(\n                      "button",\n                      {\n                        staticClass:\n                          "btn btn-primary btn-appearance mobile-width-button",\n                        class: { "no-pointer-events": _vm.isLoading },\n                        attrs: { type: "button" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.addToBasket()\n                          },\n                        },\n                      },\n                      [\n                        _c("icon", {\n                          staticClass: "fa-lg mobile-icon-right",\n                          attrs: {\n                            icon: "shopping-cart",\n                            loading: _vm.isLoading,\n                          },\n                        }),\n                        _vm._v(\n                          "\\n                " +\n                            _vm._s(\n                              _vm.$translate(\n                                "Ceres::Template.singleItemAddToBasket"\n                              )\n                            ) +\n                            "\\n            "\n                        ),\n                      ],\n                      1\n                    )\n                  : _c(\n                      "button",\n                      {\n                        staticClass:\n                          "btn btn-primary btn-appearance mobile-width-button",\n                        attrs: { type: "button" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.directToItem()\n                          },\n                        },\n                      },\n                      [\n                        _c("i", {\n                          staticClass:\n                            "fa fa-arrow-right fa-lg d-none d-sm-block",\n                          attrs: { "aria-hidden": "true" },\n                        }),\n                        _vm._v(\n                          "\\n                " +\n                            _vm._s(\n                              _vm.$translate("Ceres::Template.itemShowItem")\n                            ) +\n                            "\\n            "\n                        ),\n                      ]\n                    ),\n              ]\n            ),\n          ]\n        )\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddToBasket.vue?vue&type=template&id=4d877efb&\n\n// EXTERNAL MODULE: ./resources/js/src/app/exceptions/ExceptionMap.js\nvar ExceptionMap = __webpack_require__(4650);\n// EXTERNAL MODULE: ./resources/js/src/app/services/UrlService.js + 1 modules\nvar UrlService = __webpack_require__(3279);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./resources/js/src/app/mixins/buttonSizeProperty.mixin.js\nvar buttonSizeProperty_mixin = __webpack_require__(9430);\n// EXTERNAL MODULE: ./resources/js/src/app/components/item/QuantityInput.vue + 4 modules\nvar QuantityInput = __webpack_require__(3401);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/AddToBasket.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\nconst NotificationService = __webpack_require__(1452);\n\n/* harmony default export */ var AddToBasketvue_type_script_lang_js_ = ({\n    name: "add-to-basket",\n\n    mixins: [buttonSizeProperty_mixin/* ButtonSizePropertyMixin */.Z],\n    \n    components:\n    {\n        QuantityInput: QuantityInput["default"]\n    },\n\n    props:\n    {\n        itemUrl: String,\n        showQuantity:\n        {\n            type: Boolean,\n            default: false\n        },\n        useLargeScale:\n        {\n            type: Boolean,\n            default: false\n        },\n        variationId:\n        {\n            type: Number\n        },\n        isSalable:\n        {\n            type: Boolean,\n            default: false\n        },\n        hasChildren:\n        {\n            type: Boolean,\n            default: false\n        },\n        intervalQuantity:\n        {\n            type: Number,\n            default: 1\n        },\n        minimumQuantity:\n        {\n            type: Number,\n            default: 0\n        },\n        maximumQuantity:\n        {\n            type: Number,\n            default: null\n        },\n        orderProperties:\n        {\n            type: Array,\n            default: () => []\n        },\n        hasOrderProperties:\n        {\n            type: Boolean,\n            default: false\n        },\n        hasRequiredOrderProperty:\n        {\n            type: Boolean,\n            default: false\n        },\n        hasPrice:\n        {\n            type: Boolean,\n            default: true\n        },\n        hasGraduatedPrice:\n        {\n          type: Boolean,\n          default: false\n        },\n        paddingClasses:\n        {\n            type: String,\n            default: null\n        },\n        paddingInlineStyles:\n        {\n            type: String,\n            default: null\n        },\n        isWishList:\n        {\n            type: Boolean,\n            default: false\n        },\n        propQuantity:\n        {\n            type: Number,\n            default: null\n        },\n        itemType:\n        {\n            type: String,\n            default: null\n        }\n    },\n\n    inject: {\n        itemId: {\n            default: null\n        }\n    },\n\n    computed:\n    {\n        isSet()\n        {\n            return (\n                this.$store.state.items[this.itemId]\n                && this.$store.state.items[this.itemId].variation\n                && this.$store.state.items[this.itemId].variation.documents[0].data.item.itemType === "set"\n            ) || this.itemType === "set";\n        },\n\n        canBeAddedToBasket()\n        {\n            return this.isSalable &&\n                !this.hasChildren &&\n                !(this.minimumQuantity != 1 || this.intervalQuantity != 1) &&\n                !this.requiresProperties &&\n                this.hasPrice &&\n                !this.hasGraduatedPrice &&\n                !this.isSet;\n        },\n\n        requiresProperties()\n        {\n            return (App.config.item.requireOrderProperties && \n                (this.hasOrderProperties || this.orderProperties.filter(property => property.property.isShownOnItemPage).length > 0)) ||\n                this.hasRequiredOrderProperty;\n        },\n\n        buttonClasses()\n        {\n            const classes = [];\n\n            if ((0,utils/* isDefined */.$K)(this.buttonSizeClass))\n            {\n                classes.push(this.buttonSizeClass);\n            }\n\n            if ((0,utils/* isDefined */.$K)(this.paddingClasses))\n            {\n                classes.push(this.paddingClasses.split(" "));\n            }\n\n            return classes;\n        },\n\n        tooltipText()\n        {\n            if (this.hasAvailableVariations)\n            {\n                return this.$translate("Ceres::Template.singleItemPleaseSelectValidVariation");\n            }\n            else\n            {\n                return this.$translate("Ceres::Template.singleItemPleaseSelectNotAvailable");\n            }\n        },\n\n        variationOrderQuantity()\n        {\n            return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationOrderQuantity;\n        },\n\n        variationMissingProperties()\n        {\n            return this.$store.getters[`${this.itemId}/variationMissingProperties`];\n        },\n\n        hasAvailableVariations()\n        {\n            return this.$store.state.items[this.itemId]\n                && this.$store.state.items[this.itemId].variationSelect\n                && this.$store.state.items[this.itemId].variationSelect.variations.some(variation => variation.isSalable);\n        },\n\n        allVariationsSelected()\n        {\n            if (this.isSet)\n            {\n                return this.$store.getters["itemSetAllVariationSelected"];\n            }\n            else\n            {\n                // FIX return true if module is not registered. This equals the default value from the module\n                // and is required to use this component in other contexts, e.g. the category view\n                return !this.$store.state.items[this.itemId]\n                    || (this.$store.state.items[this.itemId].variationSelect\n                        && this.$store.state.items[this.itemId].variationSelect.isVariationSelected);\n            }\n        },\n\n        isLoading()\n        {\n            return this.$store.state.items.isAddToBasketLoading === this.variationId || this.$store.state.items.isSetLoading;\n        },\n\n        ...(0,vuex_esm/* mapState */.rn)({\n            basketItems: state => state.basket.items,\n            isBasketLoading: state => state.basket.isBasketLoading\n        })\n    },\n\n    data()\n    {\n        return {\n            quantity: 1,\n            buttonLockState: false\n        };\n    },\n\n    methods:\n    {\n        /**\n         * add an item to basket-resource\n         */\n        addToBasket()\n        {\n            this.$store.dispatch("loadComponent", "add-item-to-basket-overlay");\n            this.$store.dispatch("loadComponent", "basket-preview");\n\n            if (this.variationMissingProperties !== undefined && this.variationMissingProperties.length)\n            {\n                this.showMissingPropertiesError();\n            }\n            else if (this.isSalable || this.isSet)\n            {\n                this.$store.commit("setIsAddToBasketLoading", this.variationId);\n\n                const orderParamsAndSurcharge = extractPropertiesAndSurcharge(this.orderProperties);\n\n                const basketObject =\n                    {\n                        variationId             :   this.variationId,\n                        quantity                :   this.quantity,\n                        basketItemOrderParams   :   orderParamsAndSurcharge.orderParams,\n                        totalOrderParamsMarkup  :   orderParamsAndSurcharge.totalSurcharge\n                    };\n\n                if(this.isSet)\n                {\n                    const setComponents = [];\n                    this.$store.state.items.setComponentIds.forEach(itemId =>\n                    {\n                        const setComponent = this.$store.getters[`${itemId}/currentItemVariation`];\n\n                        const variationId = setComponent && setComponent.variation.id;\n\n                        // Extract order properties and total surcharge for set components\n                        const setComponentOrderParamsAndSurcharge = extractPropertiesAndSurcharge(\n                            setComponent.properties.filter(prop => prop.property.isOderProperty)\n                        );\n\n                        setComponents.push({\n                            variationId: variationId,\n                            quantity: this.$store.state.items[itemId].variationOrderQuantity,\n                            basketItemOrderParams: setComponentOrderParamsAndSurcharge.orderParams,\n                            totalOrderParamsMarkup: setComponentOrderParamsAndSurcharge.totalSurcharge\n                        });\n                    });\n                    basketObject.setComponents = setComponents;\n                }\n\n                this.$store.dispatch("addBasketItem", basketObject).then(\n                    response =>\n                    {\n                        document.dispatchEvent(new CustomEvent("afterBasketItemAdded", { detail: basketObject }));\n                        this.$store.commit("setIsAddToBasketLoading", 0);\n                    },\n                    error =>\n                    {\n                        this.$store.commit("setIsAddToBasketLoading", 0);\n\n                        if (error.data)\n                        {\n                            NotificationService.error(\n                                this.$translate(\n                                    "Ceres::Template." + ExceptionMap/* default.get */.Z.get(error.data.exceptionCode.toString()),\n                                    error.data.placeholder\n                                )\n                            ).closeAfter(5000);\n                        }\n                    });\n            }\n        },\n        showMissingPropertiesError()\n        {\n            this.$store.commit(`${this.itemId}/setVariationMarkInvalidProps`, true);\n\n            const propertyNames = this.variationMissingProperties.map(property => property.property.names.name);\n            let errorMsgContent = "";\n\n            for (const name of propertyNames)\n            {\n                errorMsgContent += name + "<br>";\n            }\n\n            NotificationService.error(this.$translate("Ceres::Template.singleItemMissingOrderPropertiesError").replace("<properties>", errorMsgContent));\n        },\n\n        directToItem()\n        {\n            (0,UrlService/* navigateTo */.T8)(this.itemUrl);\n        },\n\n        handleButtonState(value)\n        {\n            this.buttonLockState = value;\n        },\n\n        /**\n         * update the property quantity of the current instance\n         * @param value\n         */\n        updateQuantity(value)\n        {\n            this.quantity = value;\n        }\n    },\n\n    watch:\n    {\n        quantity(value)\n        {\n            if(!(0,utils/* isNullOrUndefined */.le)(this.itemId))\n            {\n                this.$store.commit(`${this.itemId}/setVariationOrderQuantity`, value);\n                this.$store.commit(`${this.itemId}/setVariationPropertySurcharges`, this.$store.getters[`${this.itemId}/variationBasePrice`]);\n            }\n        },\n\n        variationOrderQuantity(value)\n        {\n            if (this.quantity !== value)\n            {\n                this.quantity = value;\n            }\n        },\n\n        propQuantity(value)\n        {\n            if (!isNaN(value))\n            {\n                this.quantity = value;\n            }\n        }\n    }\n});\n\nfunction extractPropertiesAndSurcharge(orderProperties)\n{\n    let totalSurcharge = 0;\n    const orderParams = [];\n\n    orderProperties.forEach((orderProperty) =>\n    {\n        if(!(0,utils/* isNullOrUndefined */.le)(orderProperty.property.value))\n        {\n            const property = orderProperty.property;\n\n            if (property.valueType === "float" &&\n                !(0,utils/* isNullOrUndefined */.le)(property.value) &&\n                property.value.slice(-1) === App.decimalSeparator)\n            {\n                property.value = property.value.substr(0, property.value.length - 1);\n            }\n\n            totalSurcharge += (orderProperty.surcharge || 0) + (property.surcharge || 0);\n\n            orderParams.push({\n                propertyId: property.id,\n                type: property.valueType,\n                name: property.names.name,\n                value: property.value\n            });\n        }\n    });\n\n    return {\n        orderParams: orderParams,\n        totalSurcharge: totalSurcharge\n    };\n}\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddToBasket.vue?vue&type=script&lang=js&\n /* harmony default export */ var basket_AddToBasketvue_type_script_lang_js_ = (AddToBasketvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddToBasket.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  basket_AddToBasketvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var AddToBasket = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///574\n')},3401:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ QuantityInput; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/QuantityInput.vue?vue&type=template&id=24dfbc62&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c("div", { staticClass: "qty-box d-flex h-100" }, [\n    _c("input", {\n      ref: "quantityInputField",\n      staticClass: "qty-input text-center",\n      attrs: {\n        type: "text",\n        disabled: _vm.waiting,\n        "aria-label": _vm.$translate("Ceres::Template.itemQuantityInput"),\n      },\n      domProps: { value: _vm.displayValue },\n      on: {\n        change: function ($event) {\n          return _vm.setValue($event.target.value)\n        },\n      },\n    }),\n    _vm._v(" "),\n    _c("div", { staticClass: "qty-btn-container d-flex flex-column" }, [\n      _c(\n        "button",\n        {\n          directives: [\n            {\n              name: "tooltip",\n              rawName: "v-tooltip",\n              value: _vm.isMaximum && _vm.compMax !== 0,\n              expression: "isMaximum && compMax !== 0",\n            },\n          ],\n          staticClass:\n            "btn qty-btn flex-fill d-flex justify-content-center p-0",\n          class: {\n            disabled: _vm.isMaximum || _vm.waiting,\n            "btn-appearance": _vm.useAppearance,\n          },\n          attrs: {\n            "data-toggle": "tooltip",\n            "data-placement": "top",\n            "data-testing": "quantity-btn-increase",\n            title: _vm.maximumHint,\n            "aria-label": _vm.$translate(\n              "Ceres::Template.itemQuantityInputIncrease"\n            ),\n          },\n          on: {\n            click: function ($event) {\n              return _vm.increaseValue()\n            },\n          },\n        },\n        [\n          _c("i", {\n            staticClass: "fa fa-plus default-float",\n            attrs: { "aria-hidden": "true" },\n          }),\n        ]\n      ),\n      _vm._v(" "),\n      _c(\n        "button",\n        {\n          directives: [\n            {\n              name: "tooltip",\n              rawName: "v-tooltip",\n              value: _vm.isMinimum && _vm.compMax !== 0,\n              expression: "isMinimum && compMax !== 0",\n            },\n          ],\n          staticClass:\n            "btn qty-btn flex-fill d-flex justify-content-center p-0",\n          class: {\n            disabled: _vm.isMinimum || _vm.waiting,\n            "btn-appearance": _vm.useAppearance,\n          },\n          attrs: {\n            "data-toggle": "tooltip",\n            "data-placement": "bottom",\n            "data-testing": "quantity-btn-decrease",\n            title: _vm.minimumHint,\n            "aria-label": _vm.$translate(\n              "Ceres::Template.itemQuantityInputDecrease"\n            ),\n          },\n          on: {\n            click: function ($event) {\n              return _vm.decreaseValue()\n            },\n          },\n        },\n        [\n          _c("i", {\n            staticClass: "fa fa-minus default-float",\n            attrs: { "aria-hidden": "true" },\n          }),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/QuantityInput.vue?vue&type=template&id=24dfbc62&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/number.js\nvar number = __webpack_require__(4507);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/debounce.js\nvar debounce = __webpack_require__(9233);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/QuantityInput.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n/* harmony default export */ var QuantityInputvue_type_script_lang_js_ = ({\n    name: "quantity-input",\n\n    props: {\n        value: {\n            type: Number,\n            required: true\n        },\n        timeout: {\n            type: Number,\n            required: false,\n            default: 500\n        },\n        min: {\n            type: Number,\n            required: false,\n            default: 0\n        },\n        max: {\n            type: Number,\n            required: false\n        },\n        interval: {\n            type: Number,\n            required: false,\n            default: 1\n        },\n        waiting: {\n            type: Boolean,\n            required: false\n        },\n        variationId: {\n            type: Number,\n            required: false\n        },\n        useAppearance: Boolean\n    },\n\n    data()\n    {\n        return {\n            compValue:      this.value,\n            compMin:        this.min,\n            compMax:        this.max,\n            compInterval:   this.interval,\n            compDecimals:   0,\n            onValueChanged: null\n        };\n    },\n\n    created()\n    {\n        this.compInterval = (0,utils/* defaultValue */.LS)(this.compInterval, 1);\n        this.compInterval = this.compInterval === 0 ? 1 : this.compInterval;\n\n        const minDecimals = (0,number/* floatLength */.GQ)(this.min);\n        const intervalDecimals = (0,number/* floatLength */.GQ)(this.compInterval);\n\n        this.compDecimals = Math.max(minDecimals, intervalDecimals);\n\n        this.onValueChanged = (0,debounce/* debounce */.D)(() =>\n        {\n            this.$emit("quantity-change", this.compValue);\n        }, (0,utils/* defaultValue */.LS)(this.timeout, 500));\n\n        if (!(0,utils/* isNullOrUndefined */.le)(this.variationId))\n        {\n            this.fetchQuantityFromBasket();\n        }\n    },\n\n    computed:\n    {\n        variationBasketQuantity()\n        {\n            if ((0,utils/* isNullOrUndefined */.le)(this.variationId))\n            {\n                return 0;\n            }\n\n            if(this.itemSetVariationId <= 0 || this.variationId === this.itemSetVariationId)\n            {\n                const basketObject = this.$store.state.basket.items.find(variations => variations.variationId === this.variationId);\n\n                return basketObject ? basketObject.quantity : 0;\n            }\n\n            return 0;\n        },\n\n        isMinimum()\n        {\n            return (0,utils/* isDefined */.$K)(this.compMin) && (this.compValue - this.compInterval) < this.compMin;\n        },\n\n        isMaximum()\n        {\n            return (0,utils/* isDefined */.$K)(this.compMax) && (this.compValue + this.compInterval) > this.compMax;\n        },\n\n        minimumHint()\n        {\n            return this.$translate(\n                "Ceres::Template.singleItemQuantityMin",\n                {\n                    min: this.$options.filters.numberFormat(this.compMin)\n                }\n            );\n        },\n\n        maximumHint()\n        {\n            return this.$translate(\n                "Ceres::Template.singleItemQuantityMax",\n                {\n                    max: this.$options.filters.numberFormat(this.max)\n                }\n            );\n        },\n\n        displayValue()\n        {\n            return this.$options.filters.numberFormat(this.compValue);\n        },\n\n        itemSetVariationId()\n        {\n            if (this.$store.state.items.itemSetId > 0)\n            {\n                return this.$store.getters[`${this.$store.state.items.itemSetId}/currentItemVariation`].variation.id;\n            }\n\n            return 0;\n        },\n\n        ...(0,vuex_esm/* mapState */.rn)({\n            basketItems: state => state.basket.items\n        })\n    },\n\n    watch:\n    {\n        variationId(newValue)\n        {\n            if ((0,utils/* isDefined */.$K)(newValue))\n            {\n                this.fetchQuantityFromBasket();\n            }\n        },\n\n        basketItems:\n        {\n            handler(newValue, oldValue)\n            {\n                if ((0,utils/* isDefined */.$K)(this.variationId))\n                {\n                    this.fetchQuantityFromBasket();\n                }\n            },\n            deep: true\n        },\n\n        min(newValue)\n        {\n            this.compMin = newValue;\n            this.fetchQuantityFromBasket();\n        },\n\n        max(newValue)\n        {\n            this.compMax = newValue;\n            this.fetchQuantityFromBasket();\n        },\n\n        value(newValue, oldValue)\n        {\n            if (newValue !== oldValue)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        interval(newInterval)\n        {\n            this.compInterval = (0,utils/* defaultValue */.LS)(newInterval, 1)\n        }\n    },\n\n    methods:\n    {\n        increaseValue()\n        {\n            const newValue = (0,number/* formatFloat */.$1)(this.compValue + this.compInterval, this.compDecimals);\n\n            if (((0,utils/* isNullOrUndefined */.le)(this.compMax) || newValue <= this.compMax) && !this.waiting)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        decreaseValue()\n        {\n            const newValue = (0,number/* formatFloat */.$1)(this.compValue - this.compInterval, this.compDecimals);\n\n            if (((0,utils/* isNullOrUndefined */.le)(this.compMin) || newValue >= this.compMin) && !this.waiting)\n            {\n                this.setValue(newValue);\n            }\n        },\n\n        setValue(value)\n        {\n            // consider the configured decimal seperator (if the input is typed in the input field)\n            if (typeof value === "string")\n            {\n                value = value.replace(App.decimalSeparator || ",", ".");\n            }\n\n            value = parseFloat(value);\n            if (isNaN(value))\n            {\n                value = (0,utils/* defaultValue */.LS)(this.compMin, 1);\n            }\n\n            // limit new value to min/ max value\n            value = (0,number/* limit */.b9)(value, this.compMin, this.compMax);\n\n            // make sure, new value is an even multiple of interval\n            let diff;\n            if (this.variationBasketQuantity === 0 && this.min !== 0)\n            {\n                diff = (0,number/* formatFloat */.$1)((value - this.min) % this.compInterval, this.compDecimals, true);\n            }\n            else\n            {\n                diff = (0,number/* formatFloat */.$1)(value % this.compInterval, this.compDecimals, true);\n            }\n\n            if (diff > 0 && diff !== this.compInterval)\n            {\n                if (diff < this.compInterval / 2)\n                {\n                    value -= diff;\n                }\n                else\n                {\n                    value += this.compInterval - diff;\n                }\n                value = (0,number/* limit */.b9)(value, this.compMin, this.compMax);\n            }\n\n            // cut fraction\n            value = (0,number/* formatFloat */.$1)(value, this.compDecimals);\n\n            if (value !== this.compValue)\n            {\n                this.compValue = value;\n                this.onValueChanged();\n            }\n            else if (!(0,utils/* isNullOrUndefined */.le)(this.$refs.quantityInputField))\n            {\n                this.$refs.quantityInputField.value = this.displayValue;\n            }\n        },\n\n        fetchQuantityFromBasket()\n        {\n            if (!(0,utils/* isNullOrUndefined */.le)(this.min) && this.variationBasketQuantity >= this.min && this.variationBasketQuantity !== 0)\n            {\n                // set the minimum value to the interval, if the item is already in the basket\n                this.compMin = this.compInterval;\n            }\n            else if (this.variationBasketQuantity === 0)\n            {\n                // reset the minimum, when item is not in the basket\n                this.compMin = this.min;\n            }\n\n            if (!(0,utils/* isNullOrUndefined */.le)(this.max))\n            {\n                // decrease maximum quantity by quantity of variations already in basket\n                this.compMax = this.max - this.variationBasketQuantity;\n\n                if (this.variationBasketQuantity + this.compInterval > this.max)\n                {\n                    this.compMin = 0;\n                    this.compMax = 0;\n                    this.$emit("out-of-stock", true);\n                }\n                else\n                {\n                    this.$emit("out-of-stock", false);\n                }\n            }\n            else\n            {\n                this.$emit("out-of-stock", false);\n            }\n\n            this.setValue(this.compMin);\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/QuantityInput.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_QuantityInputvue_type_script_lang_js_ = (QuantityInputvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/QuantityInput.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_QuantityInputvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var QuantityInput = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3401\n')},9430:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ButtonSizePropertyMixin; }\n/* harmony export */ });\nconst BUTTON_SIZES = ["btn-sm", "btn-lg"];\n\nconst LEGACY_CLASS_MAP = {\n    "sm": "btn-sm",\n    "md": "",\n    "lg": "btn-lg"\n};\n\nconst ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    "",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQzMC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NlcmVzLy4vcmVzb3VyY2VzL2pzL3NyYy9hcHAvbWl4aW5zL2J1dHRvblNpemVQcm9wZXJ0eS5taXhpbi5qcz9jMmQyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJVVFRPTl9TSVpFUyA9IFtcImJ0bi1zbVwiLCBcImJ0bi1sZ1wiXTtcblxuY29uc3QgTEVHQUNZX0NMQVNTX01BUCA9IHtcbiAgICBcInNtXCI6IFwiYnRuLXNtXCIsXG4gICAgXCJtZFwiOiBcIlwiLFxuICAgIFwibGdcIjogXCJidG4tbGdcIlxufTtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvblNpemVQcm9wZXJ0eU1peGluID1cbntcbiAgICBwcm9wczoge1xuICAgICAgICBidXR0b25TaXplOlxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiBbU3RyaW5nLCBudWxsXSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB2YWxpZGF0b3I6IHZhbHVlID0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgXCJcIixcbiAgICAgICAgICAgICAgICAgICAgLi4uQlVUVE9OX1NJWkVTLFxuICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3Qua2V5cyhMRUdBQ1lfQ0xBU1NfTUFQKVxuICAgICAgICAgICAgICAgIF0uaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGNvbXB1dGVkOiB7XG4gICAgICAgIGJ1dHRvblNpemVDbGFzcygpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmIChMRUdBQ1lfQ0xBU1NfTUFQLmhhc093blByb3BlcnR5KHRoaXMuYnV0dG9uU2l6ZSkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIExFR0FDWV9DTEFTU19NQVBbdGhpcy5idXR0b25TaXplXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnV0dG9uU2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9430\n')}}]);