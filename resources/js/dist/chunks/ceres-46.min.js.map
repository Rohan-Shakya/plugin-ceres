{"version":3,"file":"chunks/ceres-46.min.js","mappings":"+IAAA,IAAIA,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACTC,EAAKJ,EAAIK,MAAMD,IAAMF,EACzB,OAAOE,EACL,MACA,CACEE,IAAK,sBACLC,YAAa,mCACbC,MAAOR,EAAIS,aAEb,CAACT,EAAIU,cAAgBN,EAAG,MAAO,CAACJ,EAAIW,GAAG,YAAa,GAAKX,EAAIY,MAEjE,EAEAb,EAAOc,eAAgB,E,wBCfmH,ECY1I,CACIC,MAAO,CACHC,QACA,CACIC,KAAMC,OACNC,UAAU,GAEdC,IACA,CACIH,KAAMI,OACNF,UAAU,GAEdG,IACA,CACIL,KAAMI,OACNF,UAAU,GAEdI,KACA,CACIN,KAAMI,OACNG,QAAS,IAEbC,QACA,CACIR,KAAMC,OACNM,QAAS,WAEbE,YACA,CACIT,KAAMC,OACNM,QAAS,QAIjBG,KAAM,WAEF,MAAO,CACHhB,eAAe,EAEvB,EAEAiB,SACA,CACIlB,cAEI,MAAO,QAAUR,KAAKwB,WAC1B,GAGJG,UAEI3B,KAAK4B,WAAU,KAEX5B,KAAK6B,eACAC,MAAK,KAEF9B,KAAK+B,eAAe,IAEvBC,OAAM,QAGL,GAEd,EAEAC,QACA,CACIJ,eAEI,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAEzB,MAAMC,EAASC,SAASC,cAAc,2BAEjC,QAAkBF,IAkBnB,EAAAG,EAAA,GACI,oBACA,KAEIxC,KAAKS,eAAgB,EACrB,MAAM4B,EAASC,SAASG,cAAc,UAEtCJ,EAAOtB,KAAO,kBACdsB,EAAOK,GAAK,kBACZL,EAAOM,IAAM,+CAA+CC,IAAIC,OAAOC,OAAOC,mBAE9EV,EAAOW,iBAAiB,QAAQ,IAAMb,EAAQE,KAAS,GACvDA,EAAOW,iBAAiB,SAAS,IAAMZ,EAAOC,KAAS,GAEvDC,SAASW,KAAKC,YAAYb,EAAO,IAErC,KAEIrC,KAAKS,eAAgB,CAAI,KAjCjCT,KAAKS,eAAgB,GACjB,QAAkB0C,OAAOC,QAGzBf,EAAOW,iBAAiB,QAAQ,IAAMb,EAAQE,KAAS,GAKvDF,EAAQE,GA0BhB,GAER,EAEAgB,iBAEI,MAAMC,GAAcC,MAAMvD,KAAKkB,MAAQlB,KAAKkB,KAAO,IAAMlB,KAAKkB,IAAM,GAC9DsC,GAAcD,MAAMvD,KAAKoB,MAAQpB,KAAKoB,KAAO,KAAOpB,KAAKoB,IAAM,IAErE,OAAIkC,GAAcE,EAEPtB,QAAQC,QAAQ,CACnBjB,IAAKlB,KAAKkB,IACVE,IAAKpB,KAAKoB,MAGRpB,KAAKc,SAAaqC,OAAOC,OAExB,IAAIlB,SAAQ,CAACC,EAASC,MAER,IAAIgB,OAAOK,KAAKC,UACxBC,QACL,CACI7C,QAASd,KAAKc,UAElB,CAAC8C,EAAQC,KAEAD,GAAUA,EAAOE,OAAS,GAAOF,EAAO,GAAGG,SAE5C5B,EAAQyB,EAAO,GAAGG,SAASC,UAI3B5B,GACJ,GAEP,IAIFF,QAAQE,QACnB,EAEAL,gBAEI/B,KAAKqD,iBACAvB,MAAMmC,IAEH,MAAMC,EAAM,IAAId,OAAOK,KAAKU,IAAInE,KAAKoE,MAAMC,oBACvC,CACIC,OAAQL,EACR5C,KAAQrB,KAAKqB,KACbkD,UAAWvE,KAAKuB,UAGxB,IAAI6B,OAAOK,KAAKe,OACZ,CACIN,IAAKA,EACLO,SAAUR,GACZ,GAGlB,IClLJS,GAAY,E,QAAA,GACd,EACA5E,EHKoB,IGHpB,EACA,KACA,KACA,MAuBF4E,EAAUC,QAAQC,OAAS,wDAC3B,MAAeF,EAAiB,O","sources":["webpack://Ceres/./resources/js/src/app/components/common/GoogleMaps.vue?377e","webpack://Ceres/./resources/js/src/app/components/common/GoogleMaps.vue?4bab","webpack://Ceres/resources/js/src/app/components/common/GoogleMaps.vue","webpack://Ceres/./resources/js/src/app/components/common/GoogleMaps.vue"],"sourcesContent":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      ref: \"googleMapsContainer\",\n      staticClass: \"maps-component position-relative\",\n      class: _vm.aspectClass,\n    },\n    [_vm.scriptBlocked ? _c(\"div\", [_vm._t(\"default\")], 2) : _vm._e()]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GoogleMaps.vue?vue&type=script&lang=js&\"","<template>\n    <div :class=\"aspectClass\" class=\"maps-component position-relative\" ref=\"googleMapsContainer\">\n        <div v-if=\"scriptBlocked\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { whenConsented } from \"../../helper/whenConsented\";\nimport { isNullOrUndefined } from \"../../helper/utils\";\n\nexport default {\n    props: {\n        address:\n        {\n            type: String,\n            required: false\n        },\n        lat:\n        {\n            type: Number,\n            required: false\n        },\n        lng:\n        {\n            type: Number,\n            required: false\n        },\n        zoom:\n        {\n            type: Number,\n            default: 16\n        },\n        maptype:\n        {\n            type: String,\n            default: \"roadmap\"\n        },\n        aspectRatio:\n        {\n            type: String,\n            default: \"3-1\"\n        }\n    },\n\n    data: function()\n    {\n        return {\n            scriptBlocked: true\n        };\n    },\n\n    computed:\n    {\n        aspectClass()\n        {\n            return \"prop-\" + this.aspectRatio;\n        }\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            this.createScript()\n                .then(() =>\n                {\n                    this.initializeMap();\n                })\n                .catch(() =>\n                {\n                    // Do nothing\n                });\n        });\n    },\n\n    methods:\n    {\n        createScript()\n        {\n            return new Promise((resolve, reject) =>\n            {\n                const script = document.querySelector(\"script#google-maps-api\");\n\n                if (!isNullOrUndefined(script))\n                {\n                    // script already injected...\n                    this.scriptBlocked = false;\n                    if (isNullOrUndefined(window.google))\n                    {\n                        // ...but not loaded yet\n                        script.addEventListener(\"load\", () => resolve(script), false);\n                    }\n                    else\n                    {\n                        // ..and fully loaded\n                        resolve(script);\n                    }\n                }\n                else\n                {\n                    // script not loaded\n                    whenConsented(\n                        \"media.googleMaps\",\n                        () =>\n                        {\n                            this.scriptBlocked = false;\n                            const script = document.createElement(\"script\");\n\n                            script.type = \"text/javascript\";\n                            script.id = \"google-maps-api\";\n                            script.src = `https://maps.googleapis.com/maps/api/js?key=${App.config.global.googleMapsApiKey}`;\n\n                            script.addEventListener(\"load\", () => resolve(script), false);\n                            script.addEventListener(\"error\", () => reject(script), false);\n\n                            document.body.appendChild(script);\n                        },\n                        () =>\n                        {\n                            this.scriptBlocked = true;\n                        });\n                }\n            });\n        },\n\n        getCoordinates()\n        {\n            const isLatValid = !isNaN(this.lat) && this.lat > -90 && this.lat < 90;\n            const isLngValid = !isNaN(this.lng) && this.lng > -180 && this.lng < 180;\n\n            if (isLatValid && isLngValid)\n            {\n                return Promise.resolve({\n                    lat: this.lat,\n                    lng: this.lng\n                });\n            }\n            else if(!!this.address && !!window.google)\n            {\n                return new Promise((resolve, reject) =>\n                {\n                    const geocoder = new google.maps.Geocoder();\n                    geocoder.geocode(\n                        {\n                            address: this.address\n                        },\n                        (result, status) =>\n                        {\n                            if(!!result && result.length > 0 && !!result[0].geometry)\n                            {\n                                resolve(result[0].geometry.location);\n                            }\n                            else\n                            {\n                                reject();\n                            }\n                        }\n                    );\n                });\n            }\n\n            return Promise.reject();\n        },\n\n        initializeMap()\n        {\n            this.getCoordinates()\n                .then((coordinates) =>\n                {\n                    const map = new google.maps.Map(this.$refs.googleMapsContainer,\n                        {\n                            center: coordinates,\n                            zoom  : this.zoom,\n                            mapTypeId: this.maptype\n                        });\n\n                    new google.maps.Marker(\n                        {\n                            map: map,\n                            position: coordinates\n                        });\n\n                });\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\"\nimport script from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\nexport * from \"./GoogleMaps.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/maximilianroell/workspace2/plugins/Ceres/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5bf88bf2')) {\n      api.createRecord('5bf88bf2', component.options)\n    } else {\n      api.reload('5bf88bf2', component.options)\n    }\n    module.hot.accept(\"./GoogleMaps.vue?vue&type=template&id=5bf88bf2&\", function () {\n      api.rerender('5bf88bf2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/app/components/common/GoogleMaps.vue\"\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","class","aspectClass","scriptBlocked","_t","_e","_withStripped","props","address","type","String","required","lat","Number","lng","zoom","default","maptype","aspectRatio","data","computed","mounted","$nextTick","createScript","then","initializeMap","catch","methods","Promise","resolve","reject","script","document","querySelector","whenConsented","createElement","id","src","App","config","global","googleMapsApiKey","addEventListener","body","appendChild","window","google","getCoordinates","isLatValid","isNaN","isLngValid","maps","Geocoder","geocode","result","status","length","geometry","location","coordinates","map","Map","$refs","googleMapsContainer","center","mapTypeId","Marker","position","component","options","__file"],"sourceRoot":""}