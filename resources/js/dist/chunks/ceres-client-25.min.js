"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[25],{3679:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ BasketTotals; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/BasketTotals.vue?vue&type=template&id=3765131c&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "cmp-totals" }, [\n    _c("div", { staticClass: "h3" }, [\n      _vm._v(_vm._s(_vm.$translate("Ceres::Template.basketSum"))),\n    ]),\n    _vm._v(" "),\n    _c(\n      "div",\n      {\n        staticClass: "component-loading with-icon refreshing",\n        class: { "is-loading": _vm.isBasketLoading },\n      },\n      [\n        _c(\n          "dl",\n          [\n            _vm._t("before-item-sum"),\n            _vm._v(" "),\n            (_vm.visibleFields.includes("additionalCosts") ||\n              _vm.visibleFields.includes("basket.additional_costs")) &&\n            _vm.displayedProperties.length\n              ? [\n                  _vm._l(_vm.displayedProperties, function (property) {\n                    return [\n                      _c(\n                        "dt",\n                        {\n                          key: "property-name-" + property.propertyId,\n                          class: { "font-weight-bold": _vm.showNetPrices },\n                          attrs: { "data-testing": "additionalcost-with-tax" },\n                        },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(property.name) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                      _c(\n                        "dd",\n                        {\n                          key: "property-price-" + property.propertyId,\n                          class: { "font-weight-bold": _vm.showNetPrices },\n                        },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(_vm._f("currency")(property.price)) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                    ]\n                  }),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _vm.visibleFields.includes("basketValueNet") ||\n            _vm.visibleFields.includes("basket.value_of_items_net")\n              ? [\n                  _c(\n                    "dt",\n                    { class: { "font-weight-bold": _vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketValue")\n                          ) +\n                          " " +\n                          _vm._s(_vm.$translate("Ceres::Template.basketNet")) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _c(\n                    "dd",\n                    {\n                      class: { "font-weight-bold": _vm.showNetPrices },\n                      attrs: { "data-testing": "item-sum-net" },\n                    },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm._f("currency")(\n                              _vm.calculateBaseValue(\n                                _vm.basket.itemSumNet,\n                                _vm.basket.basketRebate\n                              )\n                            )\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _vm.visibleFields.includes("basketValueGross") ||\n            _vm.visibleFields.includes("basket.value_of_items_gross")\n              ? [\n                  _c(\n                    "dt",\n                    { class: { "font-weight-bold": !_vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketValue")\n                          ) +\n                          " " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketGross")\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _c(\n                    "dd",\n                    {\n                      class: { "font-weight-bold": !_vm.showNetPrices },\n                      attrs: { "data-testing": "item-sum" },\n                    },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm._f("currency")(\n                              _vm.calculateBaseValue(\n                                _vm.basket.itemSum,\n                                _vm.basket.basketRebate\n                              )\n                            )\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            (_vm.visibleFields.includes("rebate") ||\n              _vm.visibleFields.includes("basket.rebate")) &&\n            _vm.basket.basketRebate\n              ? [\n                  _c("dt", { staticClass: "rebate-hint" }, [\n                    _vm._v(\n                      "\\n                    " +\n                        _vm._s(_vm.$translate("Ceres::Template.basketRebate")) +\n                        "\\n                "\n                    ),\n                  ]),\n                  !_vm.showNetPrices\n                    ? _c("dd", { staticClass: "rebate-hint" }, [\n                        _vm._v(\n                          "\\n                    " +\n                            _vm._s(\n                              _vm.$translate("Ceres::Template.basketRebateSign")\n                            ) +\n                            _vm._s(\n                              _vm._f("currency")(\n                                _vm.calculateBaseValue(\n                                  _vm.basket.itemSum,\n                                  _vm.basket.basketRebate\n                                ) - _vm.basket.itemSum\n                              )\n                            ) +\n                            "\\n                "\n                        ),\n                      ])\n                    : _c("dd", { staticClass: "rebate-hint" }, [\n                        _vm._v(\n                          "\\n                    " +\n                            _vm._s(\n                              _vm.$translate("Ceres::Template.basketRebateSign")\n                            ) +\n                            _vm._s(\n                              _vm._f("currency")(\n                                _vm.calculateBaseValue(\n                                  _vm.basket.itemSumNet,\n                                  _vm.basket.basketRebate\n                                ) - _vm.basket.itemSumNet\n                              )\n                            ) +\n                            "\\n                "\n                        ),\n                      ]),\n                  _vm._v(" "),\n                  _c(\n                    "dt",\n                    { class: { "font-weight-bold": _vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketSubTotal")\n                          ) +\n                          " " +\n                          _vm._s(_vm.$translate("Ceres::Template.basketNet")) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _c(\n                    "dd",\n                    { class: { "font-weight-bold": _vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(_vm._f("currency")(_vm.basket.itemSumNet)) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _vm._v(" "),\n                  _c(\n                    "dt",\n                    { class: { "font-weight-bold": !_vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketSubTotal")\n                          ) +\n                          " " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketGross")\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _c(\n                    "dd",\n                    { class: { "font-weight-bold": !_vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(_vm._f("currency")(_vm.basket.itemSum)) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _vm._t("after-item-sum"),\n            _vm._v(" "),\n            _vm._t("before-shipping-costs"),\n            _vm._v(" "),\n            _vm.visibleFields.includes("shippingCostsNet") ||\n            _vm.visibleFields.includes("basket.shipping_costs_net")\n              ? [\n                  _c(\n                    "dt",\n                    { class: { "font-weight-bold": _vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm.$translate(\n                              "Ceres::Template.basketShippingCosts"\n                            )\n                          ) +\n                          " " +\n                          _vm._s(_vm.$translate("Ceres::Template.basketNet")) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _c(\n                    "dd",\n                    {\n                      class: { "font-weight-bold": _vm.showNetPrices },\n                      attrs: { "data-testing": "shipping-amount-net" },\n                    },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm._f("currency")(_vm.basket.shippingAmountNet)\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _vm.visibleFields.includes("shippingCostsGross") ||\n            _vm.visibleFields.includes("basket.shipping_costs_gross")\n              ? [\n                  _c(\n                    "dt",\n                    { class: { "font-weight-bold": !_vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm.$translate(\n                              "Ceres::Template.basketShippingCosts"\n                            )\n                          ) +\n                          " " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketGross")\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _c(\n                    "dd",\n                    {\n                      class: { "font-weight-bold": !_vm.showNetPrices },\n                      attrs: { "data-testing": "shipping-amount" },\n                    },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm._f("currency")(_vm.basket.shippingAmount)\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _vm._t("after-shipping-costs"),\n            _vm._v(" "),\n            (_vm.visibleFields.includes("promotionCoupon") ||\n              _vm.visibleFields.includes("basket.promotion_coupon")) &&\n            _vm.basket.couponCode &&\n            _vm.basket.couponCampaignType === "promotion"\n              ? [\n                  _c("dt", { staticClass: "font-weight-bold" }, [\n                    _vm._v(\n                      "\\n                    " +\n                        _vm._s(_vm.$translate("Ceres::Template.basketCoupon")) +\n                        "\\n                "\n                    ),\n                  ]),\n                  _c(\n                    "dd",\n                    {\n                      staticClass: "font-weight-bold",\n                      attrs: { "data-testing": "promotion-coupon" },\n                    },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm._f("currency")(_vm.basket.couponDiscount)\n                          ) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _c("hr"),\n            _vm._v(" "),\n            _vm._t("before-total-sum"),\n            _vm._v(" "),\n            _vm.visibleFields.includes("subAmount") ||\n            _vm.visibleFields.includes("basket.order_total_net")\n              ? [\n                  _c(\n                    "dt",\n                    { class: { "font-weight-bold": _vm.showNetPrices } },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketSubAmount")\n                          ) +\n                          " " +\n                          _vm._s(_vm.$translate("Ceres::Template.basketNet")) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                  _c(\n                    "dd",\n                    {\n                      class: { "font-weight-bold": _vm.showNetPrices },\n                      attrs: { "data-testing": "basket-sub-amount" },\n                    },\n                    [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(_vm._f("currency")(_vm.basket.subAmount)) +\n                          "\\n                "\n                      ),\n                    ]\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _vm._t("before-vat"),\n            _vm._v(" "),\n            _vm._l(_vm.basket.totalVats, function (totalVat) {\n              return _vm.visibleFields.includes("vats") ||\n                _vm.visibleFields.includes("basket.vat")\n                ? [\n                    _c("dt", [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(_vm.$translate("Ceres::Template.basketVAT")) +\n                          " " +\n                          _vm._s(totalVat.vatValue) +\n                          "%\\n                "\n                      ),\n                    ]),\n                    _c("dd", { attrs: { "data-testing": "vat-amount" } }, [\n                      _vm._v(\n                        "\\n                    " +\n                          _vm._s(_vm._f("currency")(totalVat.vatAmount)) +\n                          "\\n                "\n                      ),\n                    ]),\n                  ]\n                : _vm._e()\n            }),\n            _vm._v(" "),\n            _vm._t("after-vat"),\n            _vm._v(" "),\n            (_vm.visibleFields.includes("additionalCosts") ||\n              _vm.visibleFields.includes("basket.additional_costs")) &&\n            _vm.displayedPropertiesWithoutTax.length\n              ? [\n                  _vm._l(\n                    _vm.displayedPropertiesWithoutTax,\n                    function (property) {\n                      return [\n                        _c(\n                          "dt",\n                          {\n                            key: "property-name-" + property.propertyId,\n                            class: { "font-weight-bold": _vm.showNetPrices },\n                            attrs: {\n                              "data-testing": "additionalcost-without-tax",\n                            },\n                          },\n                          [\n                            _vm._v(\n                              "\\n                        " +\n                                _vm._s(property.name) +\n                                "\\n                    "\n                            ),\n                          ]\n                        ),\n                        _c(\n                          "dd",\n                          {\n                            key: "property-price-" + property.propertyId,\n                            class: { "font-weight-bold": _vm.showNetPrices },\n                          },\n                          [\n                            _vm._v(\n                              "\\n                        " +\n                                _vm._s(_vm._f("currency")(property.price)) +\n                                "\\n                    "\n                            ),\n                          ]\n                        ),\n                      ]\n                    }\n                  ),\n                ]\n              : _vm._e(),\n            _vm._v(" "),\n            _c(\n              "div",\n              { staticClass: "totalSum" },\n              [\n                _c("hr"),\n                _vm._v(" "),\n                _vm.visibleFields.includes("totalSumNet") ||\n                _vm.visibleFields.includes("basket.order_total_net")\n                  ? [\n                      _c(\n                        "dt",\n                        { class: { "font-weight-bold": _vm.showNetPrices } },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(\n                                _vm.$translate("Ceres::Template.basketTotalSum")\n                              ) +\n                              " " +\n                              _vm._s(\n                                _vm.$translate("Ceres::Template.basketNet")\n                              ) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                      _c(\n                        "dd",\n                        {\n                          class: { "font-weight-bold": _vm.showNetPrices },\n                          attrs: { "data-testing": "basket-amount-net" },\n                        },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(\n                                _vm._f("currency")(_vm.basket.basketAmountNet)\n                              ) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                    ]\n                  : _vm._e(),\n                _vm._v(" "),\n                _vm.visibleFields.includes("totalSumGross") ||\n                _vm.visibleFields.includes("basket.order_total_gross")\n                  ? [\n                      _c(\n                        "dt",\n                        { class: { "font-weight-bold": !_vm.showNetPrices } },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(\n                                _vm.$translate("Ceres::Template.basketTotalSum")\n                              ) +\n                              " " +\n                              _vm._s(\n                                _vm.$translate("Ceres::Template.basketGross")\n                              ) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                      _c(\n                        "dd",\n                        {\n                          class: { "font-weight-bold": !_vm.showNetPrices },\n                          attrs: { "data-testing": "basket-amount" },\n                        },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(\n                                _vm._f("currency")(_vm.basket.basketAmount)\n                              ) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                    ]\n                  : _vm._e(),\n                _vm._v(" "),\n                (_vm.visibleFields.includes("salesCoupon") ||\n                  _vm.visibleFields.includes("basket.sales_coupon")) &&\n                _vm.basket.couponCode &&\n                _vm.basket.couponCampaignType === "sales"\n                  ? [\n                      _c("dt", { staticClass: "font-weight-bold" }, [\n                        _vm._v(\n                          "\\n                        " +\n                            _vm._s(\n                              _vm.$translate("Ceres::Template.basketCoupon")\n                            ) +\n                            "\\n                    "\n                        ),\n                      ]),\n                      _c(\n                        "dd",\n                        {\n                          staticClass: "font-weight-bold",\n                          attrs: { "data-testing": "sales-coupon" },\n                        },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(\n                                _vm._f("currency")(_vm.basket.couponDiscount)\n                              ) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                    ]\n                  : _vm._e(),\n                _vm._v(" "),\n                (_vm.visibleFields.includes("openAmount") ||\n                  _vm.visibleFields.includes("basket.open_amount")) &&\n                _vm.basket.couponCampaignType === "sales"\n                  ? [\n                      _c("dt", { staticClass: "font-weight-bold" }, [\n                        _vm._v(\n                          "\\n                        " +\n                            _vm._s(\n                              _vm.$translate("Ceres::Template.basketOpenAmount")\n                            ) +\n                            "\\n                    "\n                        ),\n                      ]),\n                      _c(\n                        "dd",\n                        {\n                          staticClass: "font-weight-bold",\n                          attrs: { "data-testing": "open-amount" },\n                        },\n                        [\n                          _vm._v(\n                            "\\n                        " +\n                              _vm._s(\n                                _vm._f("currency")(_vm.basket.openAmount)\n                              ) +\n                              "\\n                    "\n                          ),\n                        ]\n                      ),\n                    ]\n                  : _vm._e(),\n              ],\n              2\n            ),\n            _vm._v(" "),\n            _vm._t("after-total-sum"),\n          ],\n          2\n        ),\n      ]\n    ),\n    _vm._v(" "),\n    _vm.basket.isExportDelivery && _vm.deliveryExportTranslation\n      ? _c("div", { staticClass: "alert alert-info w-100" }, [\n          _vm._v(\n            "\\n        " + _vm._s(_vm.deliveryExportTranslation) + "\\n    "\n          ),\n        ])\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/BasketTotals.vue?vue&type=template&id=3765131c&\n\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/OrderPropertyHelper.js\nvar OrderPropertyHelper = __webpack_require__(5876);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/BasketTotals.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var BasketTotalsvue_type_script_lang_js_ = ({\n    name: "basket-totals",\n    data() {\n        return {\n            displayedProperties: [],\n            displayedPropertiesWithoutTax: []\n        }\n    },\n    created() {\n        this.setPropertiesForTotals(this.basketItems);\n    },\n    watch: {\n        \n        basketItems: \n        {\n            deep: true,\n            handler(newItems)\n            {\n                this.setPropertiesForTotals(newItems)\n            }\n        }\n        \n    },\n\n    props:\n    {\n        visibleFields:\n        {\n            type: Array,\n            default: () => [\n                "basketValueNet",\n                "basketValueGross",\n                "rebate",\n                "shippingCostsNet",\n                "shippingCostsGross",\n                "promotionCoupon",\n                "totalSumNet",\n                "vats",\n                "additionalCosts",\n                "totalSumGross",\n                "salesCoupon",\n                "openAmount",\n                "subAmount"\n            ]\n        }\n    },\n\n    computed:\n    {\n        currentShippingCountry()\n        {\n            const shippingCountryId = this.basket.shippingCountryId;\n\n            return this.shippingCountries.find(country => country.id === shippingCountryId);\n        },\n\n        shopCountry()\n        {\n            const shopCountryId = this.basket.shopCountryId;\n\n            return this.shippingCountries.find(country => country.id === shopCountryId);\n        },\n\n        deliveryExportTranslation()\n        {\n            const shopCountry = this.shopCountry && this.shopCountry.currLangName;\n            const currentShippingCountry = this.currentShippingCountry && this.currentShippingCountry.currLangName;\n\n            return this.$translate("Ceres::Template.basketExportDeliveryWarning", { from: shopCountry, to: currentShippingCountry });\n        },\n\n        ...(0,vuex_esm/* mapState */.rn)({\n            basket: state => state.basket.data,\n            basketItems: state => state.basket.items,\n            isBasketLoading: state => state.basket.isBasketLoading,\n            shippingCountries: state => state.localization.shippingCountries,\n            showNetPrices: state => state.basket.showNetPrices\n        })\n    },\n\n    methods: {\n        calculateBaseValue(value, percent)\n        {\n            return (value / (100 - percent)) * 100;\n        },\n\n        isVariationProperty(property)\n        {\n            return property.property.isOderProperty && App.useVariationOrderProperties;\n        },\n\n        isInBasketItemOrderParams(basketItem, property)\n        {\n            if (!property.property.isOderProperty && !App.useVariationOrderProperties)\n            {\n                return true;\n            }\n            return !!basketItem.basketItemOrderParams.find(param => Number(param.propertyId) === Number(property.propertyId));\n        },\n        \n        setPropertiesForTotals(newBasketItems)\n        {\n            this.displayedPropertiesWithoutTax = [];\n            this.displayedProperties = [];\n            for (const basketItem of newBasketItems)\n            {\n                basketItem.variation.data.properties?.forEach(property => {\n                    if(this.isInBasketItemOrderParams(basketItem, property) && \n                      ((0,OrderPropertyHelper/* isAdditionalCosts */.Lh)(property) || (!(0,OrderPropertyHelper/* hasVat */.uP)(property) && App.useVariationOrderProperties )))\n                    {\n                        const existsIndisplayedProperties = this.displayedProperties.find(entry => entry.propertyId === property.propertyId)\n                        const existsIndisplayedPropertiesWithoutTax = this.displayedPropertiesWithoutTax.find(entry => entry.propertyId === property.propertyId)\n                        const existingProperty = existsIndisplayedProperties || existsIndisplayedPropertiesWithoutTax;\n\n                        // if new item gets added and its property already exist update quantity\n                        if (existingProperty) \n                        {\n                            existingProperty.quantity += basketItem.quantity\n                        }\n                        else\n                        {\n                            const newProperty = {\n                                propertyId: property.propertyId,\n                                name: property.property.names.name,\n                                quantity: basketItem.quantity,\n                                surcharge: this.$options.filters.propertySurcharge(basketItem.variation.data.properties, property.propertyId),\n                                vatId: property.property.vatId\n                            }\n                            !(0,OrderPropertyHelper/* hasVat */.uP)(property) ? this.displayedPropertiesWithoutTax.push(newProperty) : this.displayedProperties.push(newProperty);\n                        }\n                    }\n                });\n            }\n            this.displayedPropertiesWithoutTax.forEach((entry) => \n            {\n                entry.price = entry.quantity * entry.surcharge;\n            })\n            this.displayedProperties.forEach((entry) => \n            {\n                entry.price = entry.quantity * entry.surcharge;\n            })\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/BasketTotals.vue?vue&type=script&lang=js&\n /* harmony default export */ var basket_BasketTotalsvue_type_script_lang_js_ = (BasketTotalsvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/BasketTotals.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  basket_BasketTotalsvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/src/app/components/basket/BasketTotals.vue"\n/* harmony default export */ var BasketTotals = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3679\n')}}]);