"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[20],{3090:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ OrderPropertyList; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyList.vue?vue&type=template&id=fe8a0bd2&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.renderOrderPropertyList\n    ? _c("div", { staticClass: "order-property-slider mb-3" }, [\n        _c(\n          "div",\n          {\n            staticClass: "order-property-slider-inner",\n            style: { transform: "translateX(-" + _vm.activeSlide * 100 + "%)" },\n          },\n          _vm._l(_vm.sortedGroupedProperties, function (propertyGroup, index) {\n            return _c(\n              "div",\n              { key: index, class: { active: index === _vm.activeSlide } },\n              [\n                _c("order-property-list-group", {\n                  key: propertyGroup.id,\n                  attrs: {\n                    "padding-classes": _vm.paddingClasses,\n                    "padding-inline-styles": _vm.paddingInlineStyles,\n                    "property-group": propertyGroup,\n                  },\n                }),\n              ],\n              1\n            )\n          }),\n          0\n        ),\n        _vm._v(" "),\n        _vm.sortedGroupedProperties.length > 1\n          ? _c(\n              "div",\n              {\n                staticClass: "order-property-slider-controls",\n                class: _vm.paddingClasses,\n                style: _vm.paddingInlineStyles,\n              },\n              [\n                _c(\n                  "div",\n                  {\n                    staticClass: "btn shadow-none",\n                    class: {\n                      "btn-primary": _vm.activeSlide > 0,\n                      "btn-secondary disabled": _vm.activeSlide === 0,\n                    },\n                    attrs: {\n                      tabindex: "0",\n                      "data-testing": "order-property-previous-slide",\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.slideTo(_vm.activeSlide - 1)\n                      },\n                    },\n                  },\n                  [_c("span", { staticClass: "fa fa-chevron-left" })]\n                ),\n                _vm._v(" "),\n                _c(\n                  "div",\n                  { staticClass: "slider-nav" },\n                  _vm._l(\n                    _vm.sortedGroupedProperties,\n                    function (propertyGroup, index) {\n                      return _c("span", {\n                        directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n                        key: index,\n                        class: {\n                          active: index === _vm.activeSlide,\n                          highlight: !_vm.touchedSlides[index],\n                          error: propertyGroup.hasError,\n                        },\n                        attrs: {\n                          "data-toggle": "tooltip",\n                          "data-placement": "top",\n                          title: propertyGroup.group\n                            ? propertyGroup.group.names.name\n                            : _vm.$translate(\n                                "Ceres::Template.singleItemPropertiesWithoutGroup"\n                              ),\n                        },\n                        on: {\n                          click: function ($event) {\n                            return _vm.slideTo(index)\n                          },\n                        },\n                      })\n                    }\n                  ),\n                  0\n                ),\n                _vm._v(" "),\n                _c(\n                  "div",\n                  {\n                    staticClass: "btn float-right shadow-none",\n                    class: {\n                      "btn-primary":\n                        _vm.activeSlide <\n                        _vm.sortedGroupedProperties.length - 1,\n                      "btn-secondary disabled":\n                        _vm.activeSlide >=\n                        _vm.sortedGroupedProperties.length - 1,\n                    },\n                    attrs: {\n                      tabindex: "0",\n                      "data-testing": "order-property-next-slide",\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.slideTo(_vm.activeSlide + 1)\n                      },\n                    },\n                  },\n                  [_c("span", { staticClass: "fa fa-chevron-right" })]\n                ),\n              ]\n            )\n          : _vm._e(),\n      ])\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyList.vue?vue&type=template&id=fe8a0bd2&\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyListGroup.vue?vue&type=template&id=65a40158&\nvar OrderPropertyListGroupvue_type_template_id_65a40158_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", [\n    _vm.isShownOnItemPageCount\n      ? _c(\n          "div",\n          { staticClass: "pt-2" },\n          [\n            _vm.propertyGroup.group\n              ? _c(\n                  "div",\n                  { class: _vm.paddingClasses, style: _vm.paddingInlineStyles },\n                  [\n                    _c("div", { staticClass: "h4" }, [\n                      _vm._v(\n                        "\\n                " +\n                          _vm._s(_vm.propertyGroup.group.names.name) +\n                          ":\\n            "\n                      ),\n                    ]),\n                    _vm._v(" "),\n                    _c("p", { staticClass: "text-muted text-wrap" }, [\n                      _vm._v(\n                        "\\n                " +\n                          _vm._s(_vm.propertyGroup.group.names.description) +\n                          "\\n            "\n                      ),\n                    ]),\n                  ]\n                )\n              : _vm._e(),\n            _vm._v(" "),\n            _vm._l(_vm.propertyGroup.properties, function (property) {\n              return _c(\n                "div",\n                {\n                  key: property.id,\n                  class: _vm.paddingClasses,\n                  style: _vm.paddingInlineStyles,\n                },\n                [\n                  property.isShownOnItemPage\n                    ? _c("order-property-list-item", {\n                        attrs: {\n                          group: _vm.propertyGroup.group,\n                          property: property,\n                        },\n                      })\n                    : _vm._e(),\n                ],\n                1\n              )\n            }),\n          ],\n          2\n        )\n      : _vm._e(),\n  ])\n}\nvar OrderPropertyListGroupvue_type_template_id_65a40158_staticRenderFns = []\nOrderPropertyListGroupvue_type_template_id_65a40158_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyListGroup.vue?vue&type=template&id=65a40158&\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyListItem.vue?vue&type=template&id=6fc17f6c&\nvar OrderPropertyListItemvue_type_template_id_6fc17f6c_render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    { staticClass: "position-relative" },\n    [\n      _vm.inputType === "text" ||\n      _vm.inputType === "float" ||\n      _vm.inputType === "int"\n        ? _c(\n            "div",\n            {\n              staticClass: "input-unit order-property-input",\n              class: { active: _vm.property.value, error: _vm.hasError },\n              attrs: { "data-validate": "text" },\n            },\n            [\n              _c("input", {\n                directives: [\n                  {\n                    name: "model",\n                    rawName: "v-model",\n                    value: _vm.inputValue,\n                    expression: "inputValue",\n                  },\n                  { name: "tooltip", rawName: "v-tooltip" },\n                ],\n                attrs: {\n                  type: "text",\n                  "data-toggle": "tooltip",\n                  title: _vm.property.names.description,\n                  "data-testing": "order-property-input-" + _vm.inputType,\n                },\n                domProps: { value: _vm.inputValue },\n                on: {\n                  input: [\n                    function ($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.inputValue = $event.target.value\n                    },\n                    function ($event) {\n                      return _vm.onInputValueChanged($event.target.value)\n                    },\n                  ],\n                },\n              }),\n              _vm._v(" "),\n              _c("label", { staticClass: "d-flex" }, [\n                _c("span", { staticClass: "text-truncate" }, [\n                  _vm._v(_vm._s(_vm.property.names.name)),\n                ]),\n                _vm._v(" "),\n                _c(\n                  "strong",\n                  { staticClass: "ml-1" },\n                  [\n                    _vm.surcharge > 0\n                      ? [\n                          _vm._v(\n                            "( " +\n                              _vm._s(_vm.inclOrPlus) +\n                              " " +\n                              _vm._s(_vm._f("currency")(_vm.surcharge)) +\n                              ")"\n                          ),\n                        ]\n                      : _vm._e(),\n                    _vm._v(" "),\n                    _c("span", [\n                      _vm._v(\n                        _vm._s(_vm.footnotes) +\n                          " " +\n                          _vm._s(_vm.requiredFootnotes)\n                      ),\n                    ]),\n                  ],\n                  2\n                ),\n              ]),\n            ]\n          )\n        : _vm.inputType === "checkbox" || _vm.inputType === "radio"\n        ? _c(\n            "div",\n            { staticClass: "form-check", class: { error: _vm.hasError } },\n            [\n              _vm.inputType === "checkbox" &&\n              !(_vm.property.isRequired && _vm.property.isPreSelected)\n                ? _c("input", {\n                    staticClass: "form-check-input",\n                    attrs: {\n                      type: "checkbox",\n                      name: _vm.group ? _vm.group.id : "check" + _vm._uid,\n                      id: "check" + _vm._uid,\n                      "data-testing": "order-property-input-checkbox",\n                    },\n                    domProps: {\n                      value: _vm.property.id,\n                      checked: _vm.property.value,\n                    },\n                    on: {\n                      change: function ($event) {\n                        return _vm.onInputValueChanged($event.target.checked)\n                      },\n                    },\n                  })\n                : _vm.inputType === "radio"\n                ? _c("input", {\n                    staticClass: "form-check-input",\n                    attrs: {\n                      type: "radio",\n                      name: _vm.group ? _vm.group.id : "check" + _vm._uid,\n                      id: "check" + _vm._uid,\n                      "data-testing": "order-property-input-radio",\n                    },\n                    domProps: {\n                      value: _vm.property.id,\n                      checked: _vm.property.value,\n                    },\n                    on: {\n                      change: function ($event) {\n                        return _vm.onInputValueChanged($event.target.value)\n                      },\n                    },\n                  })\n                : _vm._e(),\n              _vm._v(" "),\n              _c(\n                "label",\n                {\n                  directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n                  staticClass: "form-check-label text-appearance d-flex",\n                  attrs: {\n                    for: "check" + _vm._uid,\n                    "data-toggle": "tooltip",\n                    title: _vm.property.names.description,\n                    "data-testing": "order-property-label-" + _vm.inputType,\n                  },\n                },\n                [\n                  _c("span", { staticClass: "text-wrap" }, [\n                    _vm._v(_vm._s(_vm.property.names.name)),\n                  ]),\n                  _vm._v(" "),\n                  _c(\n                    "strong",\n                    { staticClass: "ml-1" },\n                    [\n                      _vm.surcharge > 0\n                        ? [\n                            _vm._v(\n                              "( " +\n                                _vm._s(_vm.inclOrPlus) +\n                                " " +\n                                _vm._s(_vm._f("currency")(_vm.surcharge)) +\n                                ")"\n                            ),\n                          ]\n                        : _vm._e(),\n                      _vm._v(" "),\n                      _c("span", [\n                        _vm._v(\n                          _vm._s(_vm.footnotes) +\n                            " " +\n                            _vm._s(_vm.requiredFootnotes)\n                        ),\n                      ]),\n                    ],\n                    2\n                  ),\n                ]\n              ),\n            ]\n          )\n        : _vm.inputType === "selection"\n        ? _c(\n            "div",\n            { class: { "d-flex": _vm.selectedDescription } },\n            [\n              _c(\n                "div",\n                {\n                  directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n                  staticClass: "input-unit order-property-input",\n                  class: { active: _vm.property.value, error: _vm.hasError },\n                  attrs: {\n                    "data-toggle": "tooltip",\n                    title: _vm.property.names.description,\n                  },\n                },\n                [\n                  _c(\n                    "select",\n                    {\n                      directives: [\n                        {\n                          name: "model",\n                          rawName: "v-model",\n                          value: _vm.selectionValue,\n                          expression: "selectionValue",\n                        },\n                      ],\n                      staticClass: "custom-select",\n                      attrs: {\n                        id: "order-property-input-select",\n                        "data-testing": "order-property-selection",\n                      },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = "_value" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.selectionValue = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          },\n                          function ($event) {\n                            return _vm.onInputValueChanged($event.target.value)\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\n                        "option",\n                        { domProps: { selected: true, value: null } },\n                        [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$translate(\n                                "Ceres::Template.singleItemPleaseSelect"\n                              )\n                            )\n                          ),\n                        ]\n                      ),\n                      _vm._v(" "),\n                      _vm._l(\n                        _vm.property.selectionValues,\n                        function (value, id) {\n                          return _c(\n                            "option",\n                            {\n                              key: id,\n                              attrs: {\n                                "data-testing":\n                                  "order-property-selection-option",\n                              },\n                              domProps: {\n                                selected: _vm.property.id === id,\n                                value: id,\n                              },\n                            },\n                            [_vm._v(_vm._s(value.name))]\n                          )\n                        }\n                      ),\n                    ],\n                    2\n                  ),\n                  _vm._v(" "),\n                  _c(\n                    "label",\n                    {\n                      staticClass: "d-flex w-100",\n                      attrs: { for: "order-property-input-select" },\n                    },\n                    [\n                      _c("span", { staticClass: "text-truncate" }, [\n                        _vm._v(_vm._s(_vm.property.names.name)),\n                      ]),\n                      _vm._v(" "),\n                      _c(\n                        "strong",\n                        { staticClass: "ml-1" },\n                        [\n                          _vm.surcharge > 0\n                            ? [\n                                _vm._v(\n                                  "( " +\n                                    _vm._s(_vm.inclOrPlus) +\n                                    " " +\n                                    _vm._s(_vm._f("currency")(_vm.surcharge)) +\n                                    ")"\n                                ),\n                              ]\n                            : _vm._e(),\n                          _vm._v(" "),\n                          _c("span", [\n                            _vm._v(\n                              _vm._s(_vm.footnotes) +\n                                " " +\n                                _vm._s(_vm.requiredFootnotes)\n                            ),\n                          ]),\n                        ],\n                        2\n                      ),\n                    ]\n                  ),\n                ]\n              ),\n              _vm._v(" "),\n              _vm.selectedDescription\n                ? _c("popper", {\n                    staticClass: "order-property-selection-info-popper",\n                    attrs: { placement: "bottom" },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: "handle",\n                          fn: function () {\n                            return [\n                              _c(\n                                "button",\n                                {\n                                  staticClass:\n                                    "btn btn-icon btn-circle btn-default btn-appearance font-weight-bold",\n                                },\n                                [_vm._v("?")]\n                              ),\n                            ]\n                          },\n                          proxy: true,\n                        },\n                        {\n                          key: "content",\n                          fn: function () {\n                            return [\n                              _vm._v(\n                                "\\n                " +\n                                  _vm._s(_vm.selectedDescription) +\n                                  "\\n            "\n                              ),\n                            ]\n                          },\n                          proxy: true,\n                        },\n                      ],\n                      null,\n                      false,\n                      2730731730\n                    ),\n                  })\n                : _vm._e(),\n            ],\n            1\n          )\n        : _vm.inputType === "file"\n        ? _c(\n            "div",\n            { staticClass: "d-flex" },\n            [\n              _c(\n                "label",\n                {\n                  directives: [{ name: "tooltip", rawName: "v-tooltip" }],\n                  staticClass:\n                    "input-unit file-input order-property-input component-loading with-icon sending",\n                  class: {\n                    active: _vm.property.value,\n                    "is-loading": _vm.waiting,\n                    error: _vm.hasError,\n                  },\n                  attrs: {\n                    "data-toggle": "tooltip",\n                    title: _vm.property.names.description,\n                  },\n                },\n                [\n                  _c(\n                    "span",\n                    {\n                      staticClass: "input-unit-preview",\n                      class: { disabled: _vm.waiting },\n                    },\n                    [_vm._v(_vm._s(_vm.selectedFileName))]\n                  ),\n                  _vm._v(" "),\n                  _c("span", { staticClass: "input-unit-label d-flex" }, [\n                    _c("span", { staticClass: "text-truncate" }, [\n                      _vm._v(_vm._s(_vm.property.names.name)),\n                    ]),\n                    _vm._v(" "),\n                    _c(\n                      "strong",\n                      { staticClass: "ml-1" },\n                      [\n                        _vm.surcharge > 0\n                          ? [\n                              _vm._v(\n                                "( " +\n                                  _vm._s(_vm.inclOrPlus) +\n                                  " " +\n                                  _vm._s(_vm._f("currency")(_vm.surcharge)) +\n                                  ")"\n                              ),\n                            ]\n                          : _vm._e(),\n                        _vm._v(" "),\n                        _c("span", [\n                          _vm._v(\n                            _vm._s(_vm.footnotes) +\n                              " " +\n                              _vm._s(_vm.requiredFootnotes)\n                          ),\n                        ]),\n                      ],\n                      2\n                    ),\n                  ]),\n                  _vm._v(" "),\n                  !_vm.selectedFile\n                    ? _c("span", { staticClass: "input-unit-btn" }, [\n                        _c("i", { staticClass: "fa fa-ellipsis-h" }),\n                      ])\n                    : _c(\n                        "span",\n                        {\n                          staticClass: "input-unit-btn",\n                          attrs: { disabled: _vm.waiting },\n                          on: {\n                            click: function ($event) {\n                              $event.preventDefault()\n                              return _vm.clearSelectedFile()\n                            },\n                          },\n                        },\n                        [_c("i", { staticClass: "fa fa-times" })]\n                      ),\n                  _vm._v(" "),\n                  _c("input", {\n                    ref: "fileInput",\n                    attrs: {\n                      disabled: _vm.waiting,\n                      type: "file",\n                      size: "50",\n                      "data-testing": "order-property-input-file",\n                    },\n                    on: {\n                      change: function ($event) {\n                        return _vm.setPropertyFile($event)\n                      },\n                    },\n                  }),\n                ]\n              ),\n              _vm._v(" "),\n              _c(\n                "client-only",\n                [\n                  _vm.isTouchDevice && _vm.property.names.description\n                    ? _c("popper", {\n                        staticClass: "order-property-selection-info-popper",\n                        attrs: { placement: "bottom" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: "handle",\n                              fn: function () {\n                                return [\n                                  _c(\n                                    "button",\n                                    {\n                                      staticClass:\n                                        "btn btn-icon btn-circle btn-default btn-appearance font-weight-bold",\n                                    },\n                                    [_vm._v("?")]\n                                  ),\n                                ]\n                              },\n                              proxy: true,\n                            },\n                            {\n                              key: "content",\n                              fn: function () {\n                                return [\n                                  _vm._v(\n                                    "\\n                    " +\n                                      _vm._s(_vm.property.names.description) +\n                                      "\\n                "\n                                  ),\n                                ]\n                              },\n                              proxy: true,\n                            },\n                          ],\n                          null,\n                          false,\n                          1618376136\n                        ),\n                      })\n                    : _vm._e(),\n                ],\n                1\n              ),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(" "),\n      _c(\n        "client-only",\n        [\n          _vm.isTouchDevice &&\n          _vm.inputType !== "selection" &&\n          _vm.inputType !== "file" &&\n          _vm.property.names.description\n            ? _c("popper", {\n                staticClass:\n                  "order-property-selection-info-popper position-absolute",\n                class: {\n                  "checkbox-or-radio":\n                    _vm.inputType === "checkbox" || _vm.inputType === "radio",\n                },\n                attrs: { placement: "bottom" },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: "handle",\n                      fn: function () {\n                        return [\n                          _c(\n                            "button",\n                            {\n                              staticClass:\n                                "btn btn-icon btn-circle btn-default btn-appearance font-weight-bold",\n                            },\n                            [_vm._v("?")]\n                          ),\n                        ]\n                      },\n                      proxy: true,\n                    },\n                    {\n                      key: "content",\n                      fn: function () {\n                        return [\n                          _vm._v(\n                            "\\n                " +\n                              _vm._s(_vm.property.names.description) +\n                              "\\n            "\n                          ),\n                        ]\n                      },\n                      proxy: true,\n                    },\n                  ],\n                  null,\n                  false,\n                  1214237640\n                ),\n              })\n            : _vm._e(),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar OrderPropertyListItemvue_type_template_id_6fc17f6c_staticRenderFns = []\nOrderPropertyListItemvue_type_template_id_6fc17f6c_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyListItem.vue?vue&type=template&id=6fc17f6c&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./resources/js/src/app/services/TranslationService.js\nvar TranslationService = __webpack_require__(1513);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyListItem.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst ApiService = __webpack_require__(3085);\nconst NotificationService = __webpack_require__(1452);\n\n\n\n\n\n/* harmony default export */ var OrderPropertyListItemvue_type_script_lang_js_ = ({\n\n    name: "order-property-list-item",\n\n    props:\n    {\n        group: Object,\n        property: Object\n    },\n\n    inject: {\n        itemId: {\n            default: null\n        }\n    },\n\n    data()\n    {\n        return {\n            inputValue: "",\n            selectedFile: null,\n            waiting: false,\n            selectionValue: null\n        };\n    },\n\n    mounted()\n    {\n        document.addEventListener("onVariationChanged", event =>\n        {\n            if (event.detail.itemId === this.itemId)\n            {\n                // clear type specific bindings\n                if (this.property.valueType === "selection")\n                {\n                    this.selectionValue = this.property.value || null;\n                }\n                else if (this.property.valueType === "file")\n                {\n                    if (this.property.value && this.property.value.length)\n                    {\n                        NotificationService.warn(\n                            TranslationService/* default.translate */.Z.translate("Ceres::Template.singleItemOrderPropertyFileHasReset",\n                                { propertyName: this.property.names.name })\n                        ).closeAfter(5000);\n                    }\n\n                    this.clearSelectedFile();\n                }\n                else\n                {\n                    this.inputValue = this.property.value || "";\n                }\n            }\n        });\n    },\n\n    computed:\n    {\n        inputType()\n        {\n            const orderPropertyGroupingType = this.group ? this.group.orderPropertyGroupingType : null;\n            const valueType = this.property.valueType;\n\n            if (valueType === "empty")\n            {\n                if (!orderPropertyGroupingType || orderPropertyGroupingType === "none" || orderPropertyGroupingType === "multi")\n                {\n                    return "checkbox";\n                }\n\n                return "radio";\n            }\n\n            return valueType;\n        },\n\n        selectedFileName()\n        {\n            if (this.selectedFile)\n            {\n                return this.selectedFile.name;\n            }\n\n            return "";\n        },\n\n        hasError()\n        {\n            const isRequired = this.property.isRequired || App.config.item.requireOrderProperties;\n\n            if (isRequired && this.variationMarkInvalidProperties && this.inputType === "radio")\n            {\n                return this.variationMissingProperties.find(property => property.property.id === this.property.id);\n            }\n\n            return isRequired && this.variationMarkInvalidProperties && !this.property.value;\n        },\n\n        surcharge()\n        {\n            return this.property.itemSurcharge || this.property.surcharge;\n        },\n\n        hasTax()\n        {\n            return this.property.vatId !== "none" && this.property.vatId !== null;\n        },\n\n        inclOrPlus()\n        {\n            if(this.property.isShownAsAdditionalCosts || !this.hasTax)\n            {\n                return this.$translate("Ceres::Template.basketPlusAbbr")\n            }\n            return this.$translate("Ceres::Template.basketIncludeAbbr");\n        },\n\n        footnotes()\n        {\n            if (this.surcharge > 0)\n            {\n                if (this.property.isRequired && !this.property.isPreSelected && this.hasTax)\n                {\n                    return this.$translate("Ceres::Template.singleItemFootnote12");\n                }\n                else if(this.hasTax)\n                {\n                    return this.$translate("Ceres::Template.singleItemFootnote1");\n                }\n            }\n        },\n\n        requiredFootnotes()\n        {\n            if (this.property.isRequired && !this.property.isPreSelected && !this.footnotes)\n            {\n                return this.$translate("Ceres::Template.singleItemFootnote2");\n            }\n        },\n\n        selectedDescription()\n        {\n            if (this.inputType !== "selection" || (0,utils/* isNullOrUndefined */.le)(this.selectionValue))\n            {\n                return null;\n            }\n\n            const selectedProperty = this.property.selectionValues[this.selectionValue];\n\n            return selectedProperty.description;\n        },\n\n        variationMissingProperties()\n        {\n            return this.$store.getters[`${this.itemId}/variationMissingProperties`];\n        },\n\n        variationMarkInvalidProperties() {\n            return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationMarkInvalidProperties;\n        },\n\n        isTouchDevice() {\n            return !App.isSSR ? document.body.classList.contains("touch"): false;\n        },\n\n        ...(0,vuex_esm/* mapState */.rn)({\n            isBasketLoading: state => state.basket.isBasketLoading,\n        })\n    },\n\n    methods:\n    {\n        onInputValueChanged(value)\n        {\n            if (this.inputType === "int")\n            {\n                value = this.validateInt(value);\n            }\n            else if (this.inputType === "float")\n            {\n                value = this.validateFloat(value);\n            }\n            else if (this.inputType === "checkbox")\n            {\n                if (!value)\n                {\n                    value = null;\n                }\n            }\n            else if (this.inputType === "selection")\n            {\n                if ((0,utils/* isNullOrUndefined */.le)(value) || value.length <= 0)\n                {\n                    value = null;\n                }\n            }\n            else if (this.inputType === "text")\n            {\n                if(value === "")\n                {\n                    value = null;\n                }\n            }\n\n            this.$store.commit(`${this.itemId}/setVariationPropertySurcharges`, this.$store.getters[`${this.itemId}/variationBasePrice`]);\n            this.setVariationOrderProperty({ propertyId: this.property.id, value: value });\n        },\n\n        validateInt(value)\n        {\n            value = parseInt(value);\n\n            if (isNaN(value))\n            {\n                value = null;\n            }\n\n            this.inputValue = value;\n\n            return value;\n        },\n\n        validateFloat(value)\n        {\n            const lastChar = value.slice(-1);\n\n            const str = value.replace(App.decimalSeparator, ".");\n            const arr = str.split(".");\n            let toFixedLength = 0;\n\n            if (arr.length === 2)\n            {\n                toFixedLength = arr[1].length;\n            }\n\n            value = parseFloat(str).toFixed(toFixedLength);\n\n            if (isNaN(value))\n            {\n                value = null;\n            }\n            else\n            {\n                if (lastChar === "." || lastChar === App.decimalSeparator)\n                {\n                    value += lastChar;\n                }\n\n                value = value.toString().replace(".", App.decimalSeparator);\n            }\n\n            this.inputValue = value;\n\n            return value;\n        },\n\n        setVariationOrderProperty(orderProperty) {\n            return this.$store.commit(`${this.itemId}/setVariationOrderProperty`, orderProperty);\n        },\n\n        setPropertyFile(event)\n        {\n            if (event.target && event.target.files && event.target.files.length > 0)\n            {\n                this.selectedFile = event.target.files[0];\n                this.uploadPropertyFile(this.selectedFile);\n            }\n        },\n\n        uploadPropertyFile(file)\n        {\n            this.setIsBasketLoading(true);\n            this.waiting = true;\n\n            const fileData = new FormData();\n\n            fileData.append("fileData", file);\n\n            ApiService.post("/rest/io/order/property/file", fileData, { processData: false, contentType: false, cache: false, async: true, timeout: 60000, supressNotifications: true })\n                .done(response =>\n                {\n                    this.setVariationOrderProperty({ propertyId: this.property.id, value: response });\n                })\n                .fail(error =>\n                {\n                    this.clearSelectedFile();\n                    this._handleValidationErrors(error);\n                })\n                .always(response =>\n                {\n                    this.setIsBasketLoading(false);\n                    this.waiting = false;\n                });\n        },\n\n        clearSelectedFile()\n        {\n            this.selectedFile = null;\n            this.setVariationOrderProperty({ propertyId: this.property.id, value: null });\n            this.$refs.fileInput.value = "";\n        },\n\n        _handleValidationErrors(error)\n        {\n            if (error.hasOwnProperty("validation_errors"))\n            {\n                for (const err of Object.values(error.validation_errors))\n                {\n                    NotificationService.error(err[0]);\n                }\n            }\n\n            if (error.error.message && error.error.message === "Post too large")\n            {\n                NotificationService.error(\n                    this.$translate("Ceres::Template.errorPostTooLarge" , { maxSize: error.error.maxSize })\n                );\n            }\n        },\n\n        ...(0,vuex_esm/* mapMutations */.OI)([\n            "setIsBasketLoading"\n        ]),\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyListItem.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyListItemvue_type_script_lang_js_ = (OrderPropertyListItemvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyListItem.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyListItemvue_type_script_lang_js_,\n  OrderPropertyListItemvue_type_template_id_6fc17f6c_render,\n  OrderPropertyListItemvue_type_template_id_6fc17f6c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/src/app/components/item/OrderPropertyListItem.vue"\n/* harmony default export */ var OrderPropertyListItem = (component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyListGroup.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var OrderPropertyListGroupvue_type_script_lang_js_ = ({\n    name: "order-property-list-group",\n\n    components:\n    {\n        OrderPropertyListItem: OrderPropertyListItem\n    },\n\n    props:\n    {\n        paddingClasses:\n        {\n            type: String,\n            default: null\n        },\n        paddingInlineStyles:\n        {\n            type: String,\n            default: null\n        },\n        propertyGroup: Object\n    },\n\n    computed:\n    {\n        isShownOnItemPageCount()\n        {\n            const properties = this.propertyGroup.properties.filter(property => property.isShownOnItemPage);\n\n            return properties.length;\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyListGroup.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyListGroupvue_type_script_lang_js_ = (OrderPropertyListGroupvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyListGroup.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderPropertyListGroup_component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyListGroupvue_type_script_lang_js_,\n  OrderPropertyListGroupvue_type_template_id_65a40158_render,\n  OrderPropertyListGroupvue_type_template_id_65a40158_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var OrderPropertyListGroup_api; }\nOrderPropertyListGroup_component.options.__file = "resources/js/src/app/components/item/OrderPropertyListGroup.vue"\n/* harmony default export */ var OrderPropertyListGroup = (OrderPropertyListGroup_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyList.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var OrderPropertyListvue_type_script_lang_js_ = ({\n    name: "order-property-list",\n\n    components:\n    {\n        "order-property-list-group": OrderPropertyListGroup\n    },\n\n    props:\n    {\n        paddingClasses:\n        {\n            type: String,\n            default: null\n        },\n        paddingInlineStyles:\n        {\n            type: String,\n            default: null\n        },\n    },\n\n    inject: {\n        itemId: {\n            default: null\n        }\n    },\n\n    data()\n    {\n        return {\n            activeSlide: 0,\n            touchedSlides: { 0: true }\n        };\n    },\n\n    mounted()\n    {\n        if (App.useVariationOrderProperties)\n        {\n            // go to first side, because variation order properties could differ between variations\n            document.addEventListener("onVariationChanged", () => {\n                this.activeSlide = 0;\n            });\n        }\n    },\n\n    computed:\n    {\n        sortedGroupedProperties()\n        {\n            const groupedProperties = JSON.parse(JSON.stringify(this.variationGroupedProperties));\n\n            for (const group of groupedProperties)\n            {\n                this.sortGroupProperties(group);\n            }\n\n            return this.getSortedGroups(groupedProperties);\n        },\n\n        missingPropertyGroupIds()\n        {\n            if (this.variationMarkInvalidProperties)\n            {\n                return [...new Set(this.variationMissingProperties.map(property => property.group && property.group.id))];\n            }\n\n            return [];\n        },\n\n        variationGroupedProperties()\n        {\n            return this.$store.getters[`${this.itemId}/variationGroupedProperties`];\n        },\n\n        renderOrderPropertyList()\n        {\n            return this.variationGroupedProperties.length || App.isShopBuilder;\n        },\n\n        variationMissingProperties()\n        {\n            return this.$store.getters[`${this.itemId}/variationMissingProperties`];\n        },\n\n        variationMarkInvalidProperties() {\n            return this.$store.state.items[this.itemId] && this.$store.state.items[this.itemId].variationMarkInvalidProperties;\n        }\n    },\n\n    methods:\n    {\n        sortGroupProperties(group)\n        {\n            return group.properties.sort((prev, current) =>\n            {\n                if (prev.position > current.position)\n                {\n                    return 1;\n                }\n                if (prev.position < current.position)\n                {\n                    return -1;\n                }\n\n                return 0;\n            });\n        },\n\n        getSortedGroups(groups)\n        {\n            for (const group of groups)\n            {\n                const lowestPosition = group.properties.reduce((prev, current) => (prev.position < current.position) ? prev : current);\n\n                group.lowestPosition = lowestPosition.position;\n\n                const groupId = group.group ? group.group.id : null;\n\n                if (this.variationMarkInvalidProperties && this.missingPropertyGroupIds.includes(groupId))\n                {\n                    group.hasError = true;\n                }\n            }\n\n            return groups.sort((prev, current) =>\n            {\n                if (prev.lowestPosition > current.lowestPosition)\n                {\n                    return 1;\n                }\n                if (prev.lowestPosition < current.lowestPosition)\n                {\n                    return -1;\n                }\n\n                return 0;\n            });\n        },\n\n        slideTo(position)\n        {\n            if (position >= 0 && position < this.sortedGroupedProperties.length)\n            {\n                this.activeSlide = position;\n                this.touchedSlides[this.activeSlide] = true;\n            }\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyList.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyListvue_type_script_lang_js_ = (OrderPropertyListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderPropertyList_component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var OrderPropertyList_api; }\nOrderPropertyList_component.options.__file = "resources/js/src/app/components/item/OrderPropertyList.vue"\n/* harmony default export */ var OrderPropertyList = (OrderPropertyList_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3090\n')}}]);