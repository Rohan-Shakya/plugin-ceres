"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[49],{9618:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ Coupon; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/Coupon.vue?vue&type=template&id=127bda26&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "cmp" }, [\n    _vm.isCheckoutReadonly &&\n    !!_vm.$translate("Ceres::Template.couponReadonlyInfoText")\n      ? _c("p", [\n          _vm._v("\\n        " + _vm._s(_vm.couponReadonlyInfoText) + "\\n    "),\n        ])\n      : _vm._e(),\n    _vm._v(" "),\n    _c(\n      "div",\n      {\n        class: {\n          "input-group": true,\n          "component-loading": _vm.isCheckoutReadonly,\n          "is-loading": _vm.isCheckoutReadonly,\n        },\n      },\n      [\n        _c("input", {\n          directives: [\n            {\n              name: "model",\n              rawName: "v-model",\n              value: _vm.couponCode,\n              expression: "couponCode",\n            },\n          ],\n          staticClass: "form-control",\n          attrs: {\n            type: "text",\n            placeholder: _vm.$translate("Ceres::Template.couponEnterCoupon"),\n            disabled: _vm.disabled || _vm.isCheckoutReadonly,\n            "data-testing": "coupon-input",\n          },\n          domProps: { value: _vm.couponCode },\n          on: {\n            keyup: function ($event) {\n              if (\n                !$event.type.indexOf("key") &&\n                _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")\n              ) {\n                return null\n              }\n              return _vm.redeemCode()\n            },\n            input: function ($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.couponCode = $event.target.value\n            },\n          },\n        }),\n        _vm._v(" "),\n        _c("span", { staticClass: "input-group-btn" }, [\n          !_vm.disabled\n            ? _c(\n                "button",\n                {\n                  staticClass: "btn btn-medium btn-primary btn-appearance",\n                  attrs: {\n                    type: "button",\n                    disabled: _vm.waiting || _vm.isCheckoutReadonly,\n                    "data-testing": "coupon-redeem",\n                  },\n                  on: {\n                    click: function ($event) {\n                      return _vm.redeemCode()\n                    },\n                  },\n                },\n                [\n                  _c("icon", { attrs: { icon: "gift", loading: _vm.waiting } }),\n                  _vm._v(\n                    "\\n                " +\n                      _vm._s(_vm.$translate("Ceres::Template.couponRedeem")) +\n                      "\\n            "\n                  ),\n                ],\n                1\n              )\n            : _c(\n                "button",\n                {\n                  staticClass: "btn btn-medium btn-danger",\n                  attrs: {\n                    type: "button",\n                    disabled: _vm.waiting || _vm.isCheckoutReadonly,\n                    "data-testing": "coupon-remove",\n                  },\n                  on: {\n                    click: function ($event) {\n                      return _vm.removeCode()\n                    },\n                  },\n                },\n                [\n                  _c("icon", {\n                    attrs: { icon: "trash", loading: _vm.waiting },\n                  }),\n                  _vm._v(\n                    "\\n                " +\n                      _vm._s(_vm.$translate("Ceres::Template.couponRemove")) +\n                      "\\n            "\n                  ),\n                ],\n                1\n              ),\n        ]),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/Coupon.vue?vue&type=template&id=127bda26&\n\n// EXTERNAL MODULE: ./resources/js/src/app/exceptions/ExceptionMap.js\nvar ExceptionMap = __webpack_require__(4650);\n// EXTERNAL MODULE: ./resources/js/src/app/services/TranslationService.js\nvar TranslationService = __webpack_require__(1513);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/Coupon.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nconst NotificationService = __webpack_require__(1452);\n\n\n\n\n\n/* harmony default export */ var Couponvue_type_script_lang_js_ = ({\n    name: "coupon",\n\n    props: {\n        template:\n        {\n            type: String,\n            default: "#vue-coupon"\n        }\n    },\n\n    data()\n    {\n        return {\n            waiting: false,\n            couponCode: ""\n        };\n    },\n\n    watch:\n    {\n        redeemedCouponCode(val)\n        {\n            this.couponCode = val;\n        }\n    },\n\n    computed:\n    {\n        disabled()\n        {\n            if (this.redeemedCouponCode)\n            {\n                return true;\n            }\n\n            return false;\n        },\n\n        ...(0,vuex_esm/* mapState */.rn)({\n            redeemedCouponCode: state => state.basket.data.couponCode,\n            isBasketLoading: state => state.basket.isBasketLoading,\n            isCheckoutReadonly: state => state.checkout.readOnly\n        })\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            if (this.redeemedCouponCode)\n            {\n                this.couponCode = this.redeemedCouponCode;\n            }\n        });\n    },\n\n    methods:\n    {\n        redeemCode()\n        {\n            // remove whitespaces\n            this.couponCode = this.couponCode.replace(/\\s/g, "");\n\n            if (this.couponCode.length > 0)\n            {\n                this.waiting = true;\n\n                this.$store.dispatch("redeemCouponCode", this.couponCode).then(\n                    response =>\n                    {\n                        this.waiting = false;\n                        NotificationService.success(\n                            TranslationService/* default.translate */.Z.translate("Ceres::Template.couponRedeemSuccess")\n                        ).closeAfter(10000);\n                    },\n                    error =>\n                    {\n                        this.waiting = false;\n                        NotificationService.error(this.getCouponRedemptionErrorMessage(error)).closeAfter(10000);\n                    });\n            }\n            else\n            {\n                NotificationService.error(\n                    TranslationService/* default.translate */.Z.translate("Ceres::Template.couponIsEmpty")\n                ).closeAfter(10000);\n            }\n        },\n\n        removeCode()\n        {\n            this.waiting = true;\n\n            this.$store.dispatch("removeCouponCode", this.couponCode).then(\n                response =>\n                {\n                    this.waiting = false;\n                    NotificationService.success(\n                        TranslationService/* default.translate */.Z.translate("Ceres::Template.couponRemoveSuccess")\n                    ).closeAfter(10000);\n                },\n                error =>\n                {\n                    this.waiting = false;\n                    NotificationService.error(\n                        TranslationService/* default.translate */.Z.translate("Ceres::Template.couponRemoveFailure")\n                    ).closeAfter(10000);\n                });\n        },\n\n        getCouponRedemptionErrorMessage(error)\n        {\n            const errorCode = error && error.warn && error.warn.code || 0;\n            if (errorCode > 0 && ExceptionMap/* default.has */.Z.has(errorCode.toString()))\n            {\n                return TranslationService/* default.translate */.Z.translate("Ceres::Template." + ExceptionMap/* default.get */.Z.get(errorCode.toString()));\n            }\n\n            return TranslationService/* default.translate */.Z.translate("Ceres::Template.couponRedeemFailure");\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/Coupon.vue?vue&type=script&lang=js&\n /* harmony default export */ var basket_Couponvue_type_script_lang_js_ = (Couponvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/Coupon.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  basket_Couponvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/src/app/components/basket/Coupon.vue"\n/* harmony default export */ var Coupon = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9618\n')}}]);