"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[34],{5854:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ TagList; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/TagList.vue?vue&type=template&id=2a940624&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.tags && _vm.tags.length > 0\n    ? _c(\n        "div",\n        { staticClass: "pt-1 pb-1" },\n        [\n          _vm.isTagRouteEnabled\n            ? _vm._l(_vm.tags, function (tag) {\n                return _c(\n                  "a",\n                  {\n                    key: tag.id,\n                    staticClass: "badge mr-1",\n                    class: [\n                      _vm.tagAppearance,\n                      _vm.marginClasses,\n                      _vm.getTextColorClass(tag.color),\n                    ],\n                    style: [_vm.getStyles(tag), _vm.marginInlineStyles],\n                    attrs: { href: _vm.getTagLink(tag) },\n                  },\n                  [_c("span", [_vm._v(_vm._s(tag.names.name))])]\n                )\n              })\n            : _vm._l(_vm.tags, function (tag) {\n                return _c(\n                  "span",\n                  {\n                    key: tag.id,\n                    staticClass: "badge mr-1",\n                    class: [\n                      _vm.tagAppearance,\n                      _vm.marginClasses,\n                      _vm.getTextColorClass(tag.color),\n                    ],\n                    style: [_vm.getStyles(tag), _vm.marginInlineStyles],\n                  },\n                  [_c("span", [_vm._v(_vm._s(tag.names.name))])]\n                )\n              }),\n        ],\n        2\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/TagList.vue?vue&type=template&id=2a940624&\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/TagList.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var TagListvue_type_script_lang_js_ = ({\n\n    name: "tag-list",\n\n    props: {\n        tagAppearance:\n        {\n            type: String,\n            default: ""\n        },\n        marginClasses:\n        {\n            type: String,\n            default: ""\n        },\n        marginInlineStyles:\n        {\n            type: String,\n            default: ""\n        },\n        enabledRoutes:\n        {\n            type: Array,\n            default: () => []\n        }\n    },\n\n    inject: {\n        itemId: {\n            default: null\n        }\n    },\n\n    computed: {\n        isTagRouteEnabled()\n        {\n            return this.enabledRoutes.includes("all") || this.enabledRoutes.includes("tags");\n        },\n\n        tags()\n        {\n            const currentVariation = this.$store.getters[`${this.itemId}/currentItemVariation`];\n            \n            return (currentVariation && currentVariation.tags) ? currentVariation.tags.filter((tag) => tag.names.name) : [];\n        }\n    },\n\n    methods:\n    {\n        getTextColorClass(bgColor)\n        {\n            if (!bgColor)return "badge-primary";\n            const color = (bgColor.charAt(0) === "#") ? bgColor.substring(1, 7) : bgColor;\n            const red = parseInt(color.substring(0, 2), 16);\n            const green = parseInt(color.substring(2, 4), 16);\n            const blue = parseInt(color.substring(4, 6), 16);\n            const result = (red * 0.299) + (green * 0.587) + (blue * 0.114);\n\n            return (result > 186) ? "text-dark" : "text-light";\n        },\n        getStyles(tag)\n        {\n            if (tag.color)\n            {\n                return {\n                    backgroundColor: tag.color\n                };\n            }\n            return {};\n        },\n        getTagLink(tag)\n        {\n            return "/" + encodeURIComponent(tag.names.name.toLowerCase()) + "_t" + tag.id;\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/TagList.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_TagListvue_type_script_lang_js_ = (TagListvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/TagList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_TagListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/src/app/components/item/TagList.vue"\n/* harmony default export */ var TagList = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5854\n')}}]);