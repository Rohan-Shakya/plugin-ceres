"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[14],{562:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ AddItemToBasketOverlay; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=template&id=004c0f61&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c("div", { attrs: { id: "add-item-to-basket-overlay" } }, [\n    _c("div", { staticClass: "modal fade" }, [\n      _c("div", { staticClass: "modal-dialog", attrs: { role: "document" } }, [\n        _vm.basketItem\n          ? _c(\n              "div",\n              { staticClass: "modal-content" },\n              [\n                _c("div", { staticClass: "modal-header" }, [\n                  _c("div", { staticClass: "modal-title h5" }, [\n                    _vm._v(\n                      _vm._s(_vm.$translate("Ceres::Template.singleItemAdded"))\n                    ),\n                  ]),\n                  _vm._v(" "),\n                  _vm._m(0),\n                  _vm._v(" "),\n                  _c(\n                    "button",\n                    {\n                      staticClass: "close ml-0 pl-1",\n                      attrs: {\n                        type: "button",\n                        "data-dismiss": "modal",\n                        "aria-label": _vm.$translate(\n                          "Ceres::Template.closeIcon"\n                        ),\n                      },\n                    },\n                    [\n                      _c("span", { attrs: { "aria-hidden": "true" } }, [\n                        _vm._v("Ã—"),\n                      ]),\n                    ]\n                  ),\n                ]),\n                _vm._v(" "),\n                _c("div", { staticClass: "modal-body" }, [\n                  _c("div", { staticClass: "row is-table-row" }, [\n                    _c(\n                      "div",\n                      {\n                        staticClass: "col-md-4",\n                        staticStyle: { "min-height": "80px" },\n                      },\n                      [\n                        _c("img", {\n                          staticClass: "img-fluid mx-auto",\n                          staticStyle: { "max-height": "140px" },\n                          attrs: {\n                            src: _vm.imageUrl,\n                            alt: _vm.imageAlternativeText || _vm.itemName,\n                            title: _vm.itemName,\n                          },\n                        }),\n                      ]\n                    ),\n                    _vm._v(" "),\n                    _c(\n                      "div",\n                      { staticClass: "col-md-8" },\n                      [\n                        _c("p", [\n                          _c("strong", [_vm._v(_vm._s(_vm.itemName))]),\n                          _vm._v(" "),\n                          _c("br"),\n                          _vm._v(" "),\n                          _vm.countAdditionalBasketItems > 0\n                            ? _c("span", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.$translate(\n                                      "Ceres::Template.basketItemOverlayAdditionalCount",\n                                      { count: _vm.countAdditionalBasketItems }\n                                    )\n                                  )\n                                ),\n                              ])\n                            : _vm._e(),\n                        ]),\n                        _vm._v(" "),\n                        _c("p", { staticClass: "small" }, [\n                          _c("strong", [\n                            _c("span", { staticClass: "text-muted" }, [\n                              _vm._v(_vm._s(_vm.basketItem.quantity) + " x "),\n                            ]),\n                            _vm._v(" "),\n                            _c("span", [\n                              _vm._v(_vm._s(_vm._f("currency")(_vm.price))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(" "),\n                        _vm._l(_vm.variation.attributes, function (attribute) {\n                          return _c("p", { staticClass: "small" }, [\n                            _c("strong", [\n                              _vm._v(_vm._s(attribute.attribute.names.name)),\n                            ]),\n                            _vm._v(":\\n                                "),\n                            _c("span", [\n                              _vm._v(_vm._s(attribute.value.names.name)),\n                            ]),\n                          ])\n                        }),\n                        _vm._v(" "),\n                        _c("order-property-value-list", {\n                          attrs: { "basket-item": _vm.basketItem },\n                        }),\n                      ],\n                      2\n                    ),\n                  ]),\n                ]),\n                _vm._v(" "),\n                _c("div", { staticClass: "modal-footer" }, [\n                  _c(\n                    "a",\n                    {\n                      directives: [\n                        {\n                          name: "waiting-animation-infinite",\n                          rawName: "v-waiting-animation-infinite",\n                        },\n                      ],\n                      staticClass: "btn btn-outline-primary btn-medium mr-2",\n                      attrs: { href: _vm.urls.basket, rel: "nofollow" },\n                    },\n                    [\n                      _c("i", {\n                        staticClass: "fa fa-shopping-cart",\n                        attrs: { "aria-hidden": "true" },\n                      }),\n                      _vm._v(\n                        "\\n                        " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.singleItemBasket")\n                          ) +\n                          "\\n                    "\n                      ),\n                    ]\n                  ),\n                  _vm._v(" "),\n                  _c(\n                    "a",\n                    {\n                      directives: [\n                        {\n                          name: "waiting-animation-infinite",\n                          rawName: "v-waiting-animation-infinite",\n                        },\n                      ],\n                      staticClass: "btn btn-primary btn-medium",\n                      attrs: { href: _vm.urls.checkout, rel: "nofollow" },\n                    },\n                    [\n                      _c("i", {\n                        staticClass: "fa fa-arrow-right",\n                        attrs: { "aria-hidden": "true" },\n                      }),\n                      _vm._v(\n                        "\\n                        " +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.singleItemCheckout")\n                          ) +\n                          "\\n                    "\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(" "),\n                _vm._t("extendOverlayButtons"),\n              ],\n              2\n            )\n          : _vm._e(),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c("span", { staticClass: "text-muted ml-auto" }, [\n      _c("span", { staticClass: "timer" }),\n      _vm._v("s"),\n    ])\n  },\n]\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=template&id=004c0f61&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue + 9 modules\nvar OrderPropertyValueList = __webpack_require__(9097);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=script&lang=js&\n\n\n\n\n\nconst ModalService  = __webpack_require__(7832);\nconst ApiService    = __webpack_require__(3085);\n\n/* harmony default export */ var AddItemToBasketOverlayvue_type_script_lang_js_ = ({\n    name: "add-item-to-basket-overlay",\n\n    components: {\n        OrderPropertyValueList: OrderPropertyValueList/* default */.Z\n    },\n    \n    props: {\n        defaultTimeToClose: {\n            type: Number,\n            default: 15\n        }\n    },\n\n    data()\n    {\n        return {\n            price: 0,\n            basketItem: null,\n            countAdditionalBasketItems: 0\n        };\n    },\n\n    mounted()\n    {\n        if (App.config.basket.addItemToBasketConfirm === "overlay")\n        {\n            ApiService.listen("AfterBasketItemUpdate", data =>\n            {\n                const updatedBasketItem = data.basketItems[0];\n\n                if (!this.isBasketItemQuantityUpdate)\n                {\n                    const basketItem = this.basketItems.find(item => item.id === updatedBasketItem.id) || {};\n\n                    this.showItem(basketItem);\n                }\n            });\n\n            ApiService.listen("AfterBasketItemAdd", data =>\n            {\n                this.showItem(data.basketItems[0], data.basketItems.length - 1);\n            });\n        }\n    },\n\n    computed:\n    {\n        ...(0,vuex_esm/* mapState */.rn)({\n            basketItems: state => state.basket.items,\n            isBasketItemQuantityUpdate: state => state.basket.isBasketItemQuantityUpdate\n        }),\n\n        isLastBasketEntrySet()\n        {\n            return !(0,utils/* isNullOrUndefined */.le)(this.basketItem);\n        },\n\n        variation()\n        {\n            if (this.basketItem)\n            {\n                return this.basketItem.variation ? this.basketItem.variation.data : null;\n            }\n\n            return null;\n        },\n\n        itemName()\n        {\n            if (this.isLastBasketEntrySet)\n            {\n                return this.$options.filters.itemName(this.variation);\n            }\n\n            return "";\n        },\n\n        imageUrl()\n        {\n            if (this.isLastBasketEntrySet)\n            {\n                const images = this.$options.filters.itemImages(this.variation.images, "urlPreview");\n\n                return this.$options.filters.itemImage(images);\n            }\n\n            return "";\n        },\n\n        imageAlternativeText()\n        {\n            if (this.isLastBasketEntrySet)\n            {\n                const images = this.$options.filters.itemImages(this.variation.images, "urlPreview");\n\n                return this.$options.filters.itemImageAlternativeText(images);\n            }\n\n            return "";\n        },\n\n        urls()\n        {\n            return {\n                basket: App.urls.basket,\n                checkout: App.urls.checkout\n            }\n        }\n    },\n\n    methods:\n    {\n        showItem(basketItem, countAdditionalBasketItems)\n        {\n            this.basketItem = basketItem;\n            this.countAdditionalBasketItems = countAdditionalBasketItems;\n            this.price = basketItem.price;\n\n            ModalService\n                .findModal(document.getElementById("add-item-to-basket-overlay"))\n                .setTimeout(this.defaultTimeToClose * 1000)\n                .show();\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=script&lang=js&\n /* harmony default export */ var basket_AddItemToBasketOverlayvue_type_script_lang_js_ = (AddItemToBasketOverlayvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  basket_AddItemToBasketOverlayvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var AddItemToBasketOverlay = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///562\n')},9097:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ OrderPropertyValueList; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=template&id=2d8aca16&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _vm.shownProperties && _vm.shownProperties.length\n    ? _c("div", { staticClass: "small" }, [\n        _c("div", { staticClass: "font-weight-bold my-1" }, [\n          _vm._v(\n            _vm._s(_vm.$translate("Ceres::Template.basketAdditionalCosts")) +\n              ":"\n          ),\n        ]),\n        _vm._v(" "),\n        _c(\n          "ul",\n          {\n            staticClass: "ml-1 pl-3",\n            attrs: { "data-testing": "order-property-list" },\n          },\n          _vm._l(_vm.shownProperties, function (property) {\n            return _c("order-property-value-list-item", {\n              key: property.propertyId,\n              attrs: { property: property },\n            })\n          }),\n          1\n        ),\n      ])\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=template&id=2d8aca16&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=template&id=f7b6d6d2&\nvar OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c("li", [\n    _c("span", { staticClass: "d-block" }, [\n      _c(\n        "strong",\n        { class: { colon: _vm.showColon } },\n        [\n          _vm._v(\n            "\\n            " +\n              _vm._s(_vm.property.property.names.name) +\n              " \\n            "\n          ),\n          _vm.surcharge > 0\n            ? [\n                _vm.isAdditionalCost || _vm.isTaxless\n                  ? [\n                      _vm._v(\n                        "\\n                    (" +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketPlusAbbr")\n                          ) +\n                          " " +\n                          _vm._s(_vm._f("currency")(_vm.surcharge)) +\n                          ")\\n                "\n                      ),\n                    ]\n                  : [\n                      _vm._v(\n                        "\\n                    (" +\n                          _vm._s(\n                            _vm.$translate("Ceres::Template.basketIncludeAbbr")\n                          ) +\n                          " " +\n                          _vm._s(_vm._f("currency")(_vm.surcharge)) +\n                          ")\\n                "\n                      ),\n                    ],\n              ]\n            : _vm._e(),\n        ],\n        2\n      ),\n      _vm._v(" "),\n      _c("span", [\n        _vm.property.property.valueType === "file"\n          ? _c("span", [\n              _c(\n                "a",\n                {\n                  attrs: {\n                    href: _vm._f("fileUploadPath")(_vm.property.property.value),\n                    target: "_blank",\n                  },\n                },\n                [\n                  _c("i", {\n                    staticClass: "fa fa-external-link",\n                    attrs: { "aria-hidden": "true" },\n                  }),\n                  _vm._v(\n                    "\\n                    " +\n                      _vm._s(_vm._f("fileName")(_vm.property.property.value)) +\n                      "\\n                "\n                  ),\n                ]\n              ),\n            ])\n          : _vm.property.property.valueType !== "empty"\n          ? _c("span", [_vm._v(_vm._s(_vm.property.property.value))])\n          : _vm._e(),\n      ]),\n    ]),\n  ])\n}\nvar OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_staticRenderFns = []\nOrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=template&id=f7b6d6d2&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/OrderPropertyHelper.js\nvar OrderPropertyHelper = __webpack_require__(5876);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=script&lang=js&\n\n\n/* harmony default export */ var OrderPropertyValueListItemvue_type_script_lang_js_ = ({\n    name: "order-property-value-list-item",\n\n    props:\n    {\n        property:\n        {\n            required: true,\n            type: Object\n        }\n    },\n\n    computed:\n    {\n        surcharge()\n        {\n            return this.$options.filters.propertySurcharge([this.property], this.property.propertyId);\n        },\n\n        isAdditionalCost()\n        {\n            return (0,OrderPropertyHelper/* isAdditionalCosts */.Lh)(this.property);\n        },\n\n        isTaxless()\n        {\n            return !(0,OrderPropertyHelper/* hasVat */.uP)(this.property) && App.useVariationOrderProperties;\n        },\n\n        showColon()\n        {\n            return this.property && this.property.property.value && this.property.property.valueType !== "empty";\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyValueListItemvue_type_script_lang_js_ = (OrderPropertyValueListItemvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyValueListItemvue_type_script_lang_js_,\n  OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render,\n  OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var OrderPropertyValueListItem = (component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=script&lang=js&\n\n\n\n\n/* harmony default export */ var OrderPropertyValueListvue_type_script_lang_js_ = ({\n    name: "order-property-value-list",\n\n    components:\n    {\n        OrderPropertyValueListItem: OrderPropertyValueListItem\n    },\n\n    props:\n    {\n        basketItem:\n        {\n            required: true,\n            type: Object\n        }\n    },\n\n    computed:\n    {\n        shownProperties()\n        {\n            const shownProperties = [];\n\n            this.basketItem.variation.data.properties.forEach(property =>\n            {\n                const filledProperty = this.basketItem.basketItemOrderParams.find(prop =>\n                {\n                    return parseInt(prop.propertyId) === property.propertyId;\n                });\n\n                if ((0,utils/* isDefined */.$K)(filledProperty))\n                {\n                    if (filledProperty.type === "selection")\n                    {\n                        property.property.value = property.property.selectionValues[filledProperty.value].name;\n                    }\n                    else\n                    {\n                        property.property.value = filledProperty.value;\n                    }\n                }\n\n                if((0,utils/* isDefined */.$K)(filledProperty) || this.isPropertyWithAdditionalCosts(property))\n                {\n                    shownProperties.push(property);\n                }\n            });\n\n            return shownProperties;\n        }\n    },\n\n    methods:\n    {\n        isPropertyWithAdditionalCosts(property)\n        {\n            return property.property &&\n                property.property.isShownAtCheckout &&\n                property.property.isShownAsAdditionalCosts &&\n                !property.property.isOderProperty\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyValueListvue_type_script_lang_js_ = (OrderPropertyValueListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderPropertyValueList_component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyValueListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var OrderPropertyValueList = (OrderPropertyValueList_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9097\n')}}]);