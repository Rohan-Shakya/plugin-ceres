"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[46],{9366:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ ForgotPassword; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=template&id=04111a15&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("form", {\n    staticClass: "reset-pwd-container login-pwd-reset",\n    attrs: {\n      id: "reset-pwd-form-" + _vm._uid,\n      method: "post"\n    }\n  }, [_c("div", {\n    ref: "pwdModal",\n    staticClass: "modal fade",\n    attrs: {\n      id: "resetPwd",\n      tabindex: "-1",\n      role: "dialog"\n    }\n  }, [_c("div", {\n    staticClass: "modal-dialog"\n  }, [_c("div", {\n    staticClass: "modal-content"\n  }, [_c("div", {\n    staticClass: "modal-header"\n  }, [_c("div", {\n    staticClass: "modal-title h3"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.loginForgotPassword")))]), _vm._v(" "), _c("button", {\n    staticClass: "close",\n    attrs: {\n      type: "button",\n      "data-dismiss": "modal",\n      "aria-hidden": "true",\n      "aria-label": _vm.$translate("Ceres::Template.closeIcon")\n    }\n  }, [_vm._v("Ã—")])]), _vm._v(" "), _c("div", {\n    staticClass: "modal-body"\n  }, [_c("div", {\n    staticClass: "alert alert-info w-100 pwd-forgot-info"\n  }, [_c("span", {\n    staticClass: "info-badge"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.loginForgotPasswordInfo")))])]), _vm._v(" "), _c("div", {\n    staticClass: "row"\n  }, [_c("div", {\n    staticClass: "col-12"\n  }, [_c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.honeypot,\n      expression: "honeypot"\n    }],\n    staticClass: "honey",\n    attrs: {\n      type: "text",\n      name: "username",\n      autocomplete: "new-password",\n      tabindex: "-1"\n    },\n    domProps: {\n      value: _vm.honeypot\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.honeypot = $event.target.value;\n      }\n    }\n  }), _vm._v(" "), _c("div", {\n    staticClass: "input-unit no-bottom",\n    attrs: {\n      "data-validate": "mail"\n    }\n  }, [_c("input", {\n    directives: [{\n      name: "model",\n      rawName: "v-model",\n      value: _vm.username,\n      expression: "username"\n    }],\n    attrs: {\n      type: "email",\n      name: "email",\n      autocomplete: "email",\n      id: "mail" + _vm._uid,\n      "data-autofocus": ""\n    },\n    domProps: {\n      value: _vm.username\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.username = $event.target.value;\n      }\n    }\n  }), _vm._v(" "), _c("label", {\n    attrs: {\n      for: "mail" + _vm._uid\n    }\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.loginEmail")) + "*")])]), _vm._v(" "), _c("span", {\n    staticClass: "error-msg"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.loginEnterConfirmEmail")))])])])]), _vm._v(" "), _c("div", {\n    staticClass: "modal-footer"\n  }, [_c("div", [_vm._t("extend-overlay-buttons"), _vm._v(" "), !!_vm.currentTemplate && _vm.currentTemplate != "tpl.login" ? _c("button", {\n    staticClass: "btn btn-danger btn-medium mr-2",\n    attrs: {\n      type: "button"\n    },\n    on: {\n      click: function click($event) {\n        $event.preventDefault();\n        return _vm.cancelResetPwd.apply(null, arguments);\n      }\n    }\n  }, [_c("i", {\n    staticClass: "fa fa-arrow-left",\n    attrs: {\n      "aria-hidden": "true"\n    }\n  }), _vm._v("\\n                                " + _vm._s(_vm.$translate("Ceres::Template.loginBackToLogin")) + "\\n                            ")]) : _vm._e(), _vm._v(" "), _c("button", {\n    staticClass: "btn btn-primary btn-medium",\n    attrs: {\n      disabled: _vm.isDisabled\n    },\n    on: {\n      click: function click($event) {\n        $event.preventDefault();\n        return _vm.validateResetPwd.apply(null, arguments);\n      }\n    }\n  }, [_vm._v("\\n\\t\\t\\t\\t\\t\\t\\t\\t" + _vm._s(_vm.$translate("Ceres::Template.loginSend")) + "\\n\\t\\t\\t\\t\\t\\t\\t\\t"), _c("icon", {\n    attrs: {\n      icon: "paper-plane-o",\n      loading: _vm.isDisabled\n    }\n  })], 1)], 2)])])])])]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=template&id=04111a15&\n\n// EXTERNAL MODULE: ./resources/js/src/app/services/ApiService.js\nvar ApiService = __webpack_require__(7653);\n// EXTERNAL MODULE: ./resources/js/src/app/services/NotificationService.js\nvar NotificationService = __webpack_require__(1841);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ModalService.js\nvar ModalService = __webpack_require__(3740);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ValidationService.js\nvar ValidationService = __webpack_require__(892);\n// EXTERNAL MODULE: ./resources/js/src/app/services/UrlService.js + 1 modules\nvar UrlService = __webpack_require__(6160);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(9413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n/* harmony default export */ var ForgotPasswordvue_type_script_lang_js_ = ({\n  name: "forgot-password-modal",\n  props: {\n    currentTemplate: String\n  },\n  data: function data() {\n    return {\n      username: "",\n      isDisabled: false,\n      honeypot: ""\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      $(_this.$refs.pwdModal).on("hidden.bs.modal", function () {\n        _this.username = "";\n      });\n      var urlParams = UrlService/* default.getUrlParams */.ZP.getUrlParams(document.location.search);\n      if (!(0,utils/* isNullOrUndefined */.le)(urlParams.show) && urlParams.show === "forgotPassword") {\n        ModalService["default"].findModal(_this.$refs.pwdModal).show();\n        _this.username = !(0,utils/* isNullOrUndefined */.le)(urlParams.email) ? urlParams.email : "";\n      }\n    });\n  },\n  watch: {\n    username: function username(val, oldVal) {\n      this.resetError();\n    }\n  },\n  methods: {\n    validateResetPwd: function validateResetPwd() {\n      var _this2 = this;\n      ValidationService["default"].validate(this.$refs.pwdModal).done(function () {\n        _this2.sendResetPwd();\n      }).fail(function (invalidFields) {\n        ValidationService["default"].markInvalidFields(invalidFields, "error");\n      });\n    },\n    /**\n     *  Reset password\n     */\n    sendResetPwd: function sendResetPwd() {\n      var _this3 = this;\n      this.isDisabled = true;\n      ApiService["default"].post("/rest/io/customer/password_reset", {\n        email: this.username,\n        honeypot: this.honeypot\n      }).done(function () {\n        ModalService["default"].findModal(_this3.$refs.pwdModal).hide();\n        _this3.isDisabled = false;\n        NotificationService["default"].success(_this3.$translate("Ceres::Template.loginSendEmailOk")).closeAfter(5000);\n      }).fail(function () {\n        _this3.isDisabled = false;\n        NotificationService["default"].error(_this3.$translate("Ceres::Template.loginResetPwDErrorOnSendEmail")).closeAfter(5000);\n      });\n    },\n    cancelResetPwd: function cancelResetPwd() {\n      this.resetError();\n      ModalService["default"].findModal(this.$refs.pwdModal).hide().then(function () {\n        ModalService["default"].findModal(document.getElementById("login")).show();\n      });\n    },\n    resetError: function resetError() {\n      ValidationService["default"].unmarkAllFields(this.$refs.pwdModal);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=script&lang=js&\n /* harmony default export */ var login_ForgotPasswordvue_type_script_lang_js_ = (ForgotPasswordvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/ForgotPassword.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  login_ForgotPasswordvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var ForgotPassword = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9366\n')}}]);