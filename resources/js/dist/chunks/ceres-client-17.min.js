"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[17],{2775:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ NewsletterInput; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=template&id=73e680cd&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "form",\n    {\n      ref: "newsletterForm",\n      attrs: { id: "newsletter-input-form_" + _vm._uid, method: "post" },\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.validateData($event)\n        },\n      },\n    },\n    [\n      _c("div", { staticClass: "row" }, [\n        _vm.showNameInputs\n          ? _c("div", { staticClass: "col-6" }, [\n              _c(\n                "div",\n                {\n                  staticClass: "input-unit",\n                  attrs: { "data-validate": "!regex" },\n                },\n                [\n                  _c(\n                    "label",\n                    { attrs: { for: "first-name-input_" + _vm._uid } },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.$translate("Ceres::Template.newsletterFirstName")\n                        )\n                      ),\n                    ]\n                  ),\n                  _vm._v(" "),\n                  _c("input", {\n                    directives: [\n                      {\n                        name: "model",\n                        rawName: "v-model",\n                        value: _vm.firstName,\n                        expression: "firstName",\n                      },\n                    ],\n                    attrs: {\n                      type: "text",\n                      "data-validate-ref": "/[.:\\\\/\\\\d]/g",\n                      id: "first-name-input_" + _vm._uid,\n                      "data-testing": "nl-first-name",\n                    },\n                    domProps: { value: _vm.firstName },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.firstName = $event.target.value\n                      },\n                    },\n                  }),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(" "),\n        _vm.showNameInputs\n          ? _c("div", { staticClass: "col-6 pl-0" }, [\n              _c(\n                "div",\n                {\n                  staticClass: "input-unit",\n                  attrs: { "data-validate": "!regex" },\n                },\n                [\n                  _c(\n                    "label",\n                    { attrs: { for: "last-name-input_" + _vm._uid } },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.$translate("Ceres::Template.newsletterLastName")\n                        )\n                      ),\n                    ]\n                  ),\n                  _vm._v(" "),\n                  _c("input", {\n                    directives: [\n                      {\n                        name: "model",\n                        rawName: "v-model",\n                        value: _vm.lastName,\n                        expression: "lastName",\n                      },\n                    ],\n                    attrs: {\n                      type: "text",\n                      "data-validate-ref": "/[.:\\\\/\\\\d]/g",\n                      id: "last-name-input_" + _vm._uid,\n                      "data-testing": "nl-last-name",\n                    },\n                    domProps: { value: _vm.lastName },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.lastName = $event.target.value\n                      },\n                    },\n                  }),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(" "),\n        _c("div", { staticClass: "col-12" }, [\n          _c("div", { staticClass: "input-group" }, [\n            _c(\n              "div",\n              { staticClass: "input-unit", attrs: { "data-validate": "mail" } },\n              [\n                _c("label", { attrs: { for: "email-input-id_" + _vm._uid } }, [\n                  _vm._v(\n                    _vm._s(_vm.$translate("Ceres::Template.newsletterEmail")) +\n                      " " +\n                      _vm._s(\n                        _vm.$translate(\n                          "Ceres::Template.newsletterIsRequiredFootnote"\n                        )\n                      )\n                  ),\n                ]),\n                _vm._v(" "),\n                _c("input", {\n                  directives: [\n                    {\n                      name: "model",\n                      rawName: "v-model",\n                      value: _vm.email,\n                      expression: "email",\n                    },\n                  ],\n                  attrs: {\n                    type: "email",\n                    autocomplete: "email",\n                    id: "email-input-id_" + _vm._uid,\n                    "data-testing": "nl-mail",\n                  },\n                  domProps: { value: _vm.email },\n                  on: {\n                    focus: function ($event) {\n                      _vm.loadRecaptcha = true\n                    },\n                    input: function ($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.email = $event.target.value\n                    },\n                  },\n                }),\n              ]\n            ),\n            _vm._v(" "),\n            _c("input", {\n              directives: [\n                {\n                  name: "model",\n                  rawName: "v-model",\n                  value: _vm.honeypot,\n                  expression: "honeypot",\n                },\n              ],\n              staticClass: "honey",\n              attrs: {\n                autocomplete: "none",\n                type: "text",\n                name: "username",\n                tabindex: "-1",\n              },\n              domProps: { value: _vm.honeypot },\n              on: {\n                input: function ($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.honeypot = $event.target.value\n                },\n              },\n            }),\n          ]),\n        ]),\n        _vm._v(" "),\n        _vm.showPrivacyPolicyCheckbox\n          ? _c("div", { staticClass: "col-12" }, [\n              _c(\n                "div",\n                {\n                  staticClass: "form-check small",\n                  attrs: { "data-validate": "" },\n                },\n                [\n                  _c("input", {\n                    directives: [\n                      {\n                        name: "model",\n                        rawName: "v-model",\n                        value: _vm.privacyPolicyValue,\n                        expression: "privacyPolicyValue",\n                      },\n                    ],\n                    staticClass: "form-check-input",\n                    attrs: {\n                      type: "checkbox",\n                      id: "privacy-policy-accept-id_" + _vm._uid,\n                      name: "privacy-policy-accept",\n                      "data-testing": "nl-policy",\n                    },\n                    domProps: {\n                      checked: Array.isArray(_vm.privacyPolicyValue)\n                        ? _vm._i(_vm.privacyPolicyValue, null) > -1\n                        : _vm.privacyPolicyValue,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.privacyPolicyValue,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              (_vm.privacyPolicyValue = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.privacyPolicyValue = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.privacyPolicyValue = $$c\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(" "),\n                  _c("label", {\n                    staticClass: "form-check-label",\n                    attrs: { for: "privacy-policy-accept-id_" + _vm._uid },\n                    domProps: { innerHTML: _vm._s(_vm.privacyPolicyText) },\n                  }),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(" "),\n        _c("div", { staticClass: "col-12 mt-3" }, [\n          _c("div", { staticClass: "input-group-btn" }, [\n            _c(\n              "button",\n              {\n                staticClass: "btn btn-block btn-primary btn-appearance",\n                class: _vm.buttonSizeClass,\n                attrs: {\n                  type: "button",\n                  disabled: _vm.isDisabled,\n                  "data-testing": "nl-send",\n                },\n                on: { click: _vm.validateData },\n              },\n              [\n                _c("icon", {\n                  attrs: { icon: "paper-plane-o", loading: _vm.isDisabled },\n                }),\n                _vm._v(\n                  "\\n                    " +\n                    _vm._s(\n                      _vm.$translate(\n                        "Ceres::Template.newsletterSubscribeButtonLabel"\n                      )\n                    ) +\n                    "\\n                "\n                ),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(" "),\n        _c("div", { staticClass: "col-12 text-right small mt-2" }, [\n          _vm._v(\n            _vm._s(\n              _vm.$translate("Ceres::Template.newsletterIsRequiredFootnote")\n            ) +\n              " " +\n              _vm._s(_vm.$translate("Ceres::Template.newsletterIsRequired"))\n          ),\n        ]),\n      ]),\n      _vm._v(" "),\n      !!_vm.$ceres.config.global.googleRecaptchaApiKey && _vm.loadRecaptcha\n        ? _c("recaptcha")\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=template&id=73e680cd&\n\n// EXTERNAL MODULE: ./resources/js/src/app/services/ApiService.js\nvar ApiService = __webpack_require__(3085);\n// EXTERNAL MODULE: ./resources/js/src/app/services/NotificationService.js\nvar NotificationService = __webpack_require__(1452);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ValidationService.js\nvar ValidationService = __webpack_require__(7412);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/executeReCaptcha.js\nvar executeReCaptcha = __webpack_require__(1281);\n// EXTERNAL MODULE: ./resources/js/src/app/mixins/buttonSizeProperty.mixin.js\nvar buttonSizeProperty_mixin = __webpack_require__(9430);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n/* harmony default export */ var NewsletterInputvue_type_script_lang_js_ = ({\n    mixins: [buttonSizeProperty_mixin/* ButtonSizePropertyMixin */.Z],\n\n    props: {\n        showNameInputs:\n        {\n            type: Boolean,\n            default: false\n        },\n        showPrivacyPolicyCheckbox:\n        {\n            type: Boolean,\n            default: true\n        },\n        emailFolder:\n        {\n            type: Number,\n            default: 0\n        }\n    },\n\n    data()\n    {\n        return {\n            firstName: "",\n            lastName: "",\n            email: "",\n            isDisabled: false,\n            privacyPolicyValue: false,\n            honeypot: "",\n            loadRecaptcha: false\n        };\n    },\n\n    computed:\n    {\n        privacyPolicyText()\n        {\n            const link = "<a href=\\"" + App.urls.privacyPolicy + "\\" target=\\"_blank\\"><span class=\\"text-primary text-appearance\\">"\n                + this.$translate("Ceres::Template.checkoutPrivacyPolicy", {"hyphen": "&shy;"})\n                + "</span></a>";\n\n            return this.$translate("Ceres::Template.newsletterAcceptPrivacyPolicy", {"policy": link}) + this.$translate("Ceres::Template.newsletterIsRequiredFootnote");\n        }\n    },\n\n    methods: {\n        validateData()\n        {\n            this.isDisabled = true;\n\n            ValidationService["default"].validate($("#newsletter-input-form_" + this._uid))\n                .done(() =>\n                {\n                    this.save();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService["default"].markInvalidFields(invalidFields, "error");\n\n                    invalidFields.filter(field => {\n                        return field.dataset.validate !== null\n                    }).map((field) => {\n                        return {\n                            type: field.dataset.validate,\n                            name: field.innerText\n                        }\n                    }).forEach((field) => {\n                        if(field.type === \'!regex\')\n                        {\n                            NotificationService["default"].error(this.$translate("Ceres::Template.newsletterNotAllowedCharacters", {name: field.name}));\n                        }\n                    });\n\n                    this.isDisabled = false;\n                });\n        },\n\n        save()\n        {\n            const recaptchaEl = this.$el.querySelector("[data-recaptcha]");\n\n            if (App.config.global.googleRecaptchaApiKey && (!window.grecaptcha || !recaptchaEl))\n            {\n                NotificationService["default"].error(this.$translate("Ceres::Template.newsletterAcceptRecaptchaCookie"));\n                this.isDisabled = false;\n                return;\n            }\n\n            (0,executeReCaptcha/* executeReCaptcha */.j)(this.$el)\n            .then((recaptchaToken) =>\n            {\n                ApiService["default"].post("/rest/io/customer/newsletter", { email: this.email, firstName: this.firstName, lastName: this.lastName, emailFolder: this.emailFolder, honeypot: this.honeypot, recaptcha: recaptchaToken})\n                    .done(data =>\n                    {\n                        if (!!data.containsHoneypot)\n                        {\n                            NotificationService["default"].warn(\n                                this.$translate("Ceres::Template.newsletterHoneypotWarning")\n                            );\n                        }\n                        else\n                        {\n                            NotificationService["default"].success(\n                                this.$translate("Ceres::Template.newsletterSuccessMessage")\n                            ).closeAfter(3000);\n                        }\n                        this.resetInputs();\n                    })\n                    .fail(() =>\n                    {\n                        NotificationService["default"].error(\n                            this.$translate("Ceres::Template.newsletterErrorMessage")\n                        ).closeAfter(5000);\n                    })\n                    .always(() =>\n                    {\n                        this.isDisabled = false;\n                        this.resetRecaptcha();\n                    });\n            });\n        },\n\n        resetInputs()\n        {\n            this.firstName = "";\n            this.lastName = "";\n            this.email = "";\n            this.privacyPolicyValue = false;\n        },\n\n        resetRecaptcha()\n        {\n            if(App.config.global.googleRecaptchaVersion === 2 && window.grecaptcha)\n            {\n                const recaptchaId = this.$el.querySelector("[data-recaptcha]");\n\n                window.grecaptcha.reset(recaptchaId);\n            }\n        },\n\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/newsletter/NewsletterInput.vue?vue&type=script&lang=js&\n /* harmony default export */ var newsletter_NewsletterInputvue_type_script_lang_js_ = (NewsletterInputvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/newsletter/NewsletterInput.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  newsletter_NewsletterInputvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/src/app/components/newsletter/NewsletterInput.vue"\n/* harmony default export */ var NewsletterInput = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2775\n')},9430:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ButtonSizePropertyMixin; }\n/* harmony export */ });\nconst BUTTON_SIZES = ["btn-sm", "btn-lg"];\n\nconst LEGACY_CLASS_MAP = {\n    "sm": "btn-sm",\n    "md": "",\n    "lg": "btn-lg"\n};\n\nconst ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    "",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQzMC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NlcmVzLy4vcmVzb3VyY2VzL2pzL3NyYy9hcHAvbWl4aW5zL2J1dHRvblNpemVQcm9wZXJ0eS5taXhpbi5qcz9jMmQyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJVVFRPTl9TSVpFUyA9IFtcImJ0bi1zbVwiLCBcImJ0bi1sZ1wiXTtcblxuY29uc3QgTEVHQUNZX0NMQVNTX01BUCA9IHtcbiAgICBcInNtXCI6IFwiYnRuLXNtXCIsXG4gICAgXCJtZFwiOiBcIlwiLFxuICAgIFwibGdcIjogXCJidG4tbGdcIlxufTtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvblNpemVQcm9wZXJ0eU1peGluID1cbntcbiAgICBwcm9wczoge1xuICAgICAgICBidXR0b25TaXplOlxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiBbU3RyaW5nLCBudWxsXSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB2YWxpZGF0b3I6IHZhbHVlID0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgXCJcIixcbiAgICAgICAgICAgICAgICAgICAgLi4uQlVUVE9OX1NJWkVTLFxuICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3Qua2V5cyhMRUdBQ1lfQ0xBU1NfTUFQKVxuICAgICAgICAgICAgICAgIF0uaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGNvbXB1dGVkOiB7XG4gICAgICAgIGJ1dHRvblNpemVDbGFzcygpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmIChMRUdBQ1lfQ0xBU1NfTUFQLmhhc093blByb3BlcnR5KHRoaXMuYnV0dG9uU2l6ZSkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIExFR0FDWV9DTEFTU19NQVBbdGhpcy5idXR0b25TaXplXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnV0dG9uU2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9430\n')}}]);