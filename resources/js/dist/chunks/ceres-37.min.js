"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[37],{9246:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ AddItemToBasketOverlay; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=template&id=004c0f61&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("div", {\n    attrs: {\n      id: "add-item-to-basket-overlay"\n    }\n  }, [_c("div", {\n    staticClass: "modal fade"\n  }, [_c("div", {\n    staticClass: "modal-dialog",\n    attrs: {\n      role: "document"\n    }\n  }, [_vm.basketItem ? _c("div", {\n    staticClass: "modal-content"\n  }, [_c("div", {\n    staticClass: "modal-header"\n  }, [_c("div", {\n    staticClass: "modal-title h5"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.singleItemAdded")))]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c("button", {\n    staticClass: "close ml-0 pl-1",\n    attrs: {\n      type: "button",\n      "data-dismiss": "modal",\n      "aria-label": _vm.$translate("Ceres::Template.closeIcon")\n    }\n  }, [_c("span", {\n    attrs: {\n      "aria-hidden": "true"\n    }\n  }, [_vm._v("Ã—")])])]), _vm._v(" "), _c("div", {\n    staticClass: "modal-body"\n  }, [_c("div", {\n    staticClass: "row is-table-row"\n  }, [_c("div", {\n    staticClass: "col-md-4",\n    staticStyle: {\n      "min-height": "80px"\n    }\n  }, [_c("img", {\n    staticClass: "img-fluid mx-auto",\n    staticStyle: {\n      "max-height": "140px"\n    },\n    attrs: {\n      src: _vm.imageUrl,\n      alt: _vm.imageAlternativeText || _vm.itemName,\n      title: _vm.itemName\n    }\n  })]), _vm._v(" "), _c("div", {\n    staticClass: "col-md-8"\n  }, [_c("p", [_c("strong", [_vm._v(_vm._s(_vm.itemName))]), _vm._v(" "), _c("br"), _vm._v(" "), _vm.countAdditionalBasketItems > 0 ? _c("span", [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketItemOverlayAdditionalCount", {\n    count: _vm.countAdditionalBasketItems\n  })))]) : _vm._e()]), _vm._v(" "), _c("p", {\n    staticClass: "small"\n  }, [_c("strong", [_c("span", {\n    staticClass: "text-muted"\n  }, [_vm._v(_vm._s(_vm.basketItem.quantity) + " x ")]), _vm._v(" "), _c("span", [_vm._v(_vm._s(_vm._f("currency")(_vm.price)))])])]), _vm._v(" "), _vm._l(_vm.variation.attributes, function (attribute) {\n    return _c("p", {\n      staticClass: "small"\n    }, [_c("strong", [_vm._v(_vm._s(attribute.attribute.names.name))]), _vm._v(":\\n                                "), _c("span", [_vm._v(_vm._s(attribute.value.names.name))])]);\n  }), _vm._v(" "), _c("order-property-value-list", {\n    attrs: {\n      "basket-item": _vm.basketItem\n    }\n  })], 2)])]), _vm._v(" "), _c("div", {\n    staticClass: "modal-footer"\n  }, [_c("a", {\n    directives: [{\n      name: "waiting-animation-infinite",\n      rawName: "v-waiting-animation-infinite"\n    }],\n    staticClass: "btn btn-outline-primary btn-medium mr-2",\n    attrs: {\n      href: _vm.urls.basket,\n      rel: "nofollow"\n    }\n  }, [_c("i", {\n    staticClass: "fa fa-shopping-cart",\n    attrs: {\n      "aria-hidden": "true"\n    }\n  }), _vm._v("\\n                        " + _vm._s(_vm.$translate("Ceres::Template.singleItemBasket")) + "\\n                    ")]), _vm._v(" "), _c("a", {\n    directives: [{\n      name: "waiting-animation-infinite",\n      rawName: "v-waiting-animation-infinite"\n    }],\n    staticClass: "btn btn-primary btn-medium",\n    attrs: {\n      href: _vm.urls.checkout,\n      rel: "nofollow"\n    }\n  }, [_c("i", {\n    staticClass: "fa fa-arrow-right",\n    attrs: {\n      "aria-hidden": "true"\n    }\n  }), _vm._v("\\n                        " + _vm._s(_vm.$translate("Ceres::Template.singleItemCheckout")) + "\\n                    ")])]), _vm._v(" "), _vm._t("extendOverlayButtons")], 2) : _vm._e()])])]);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("span", {\n    staticClass: "text-muted ml-auto"\n  }, [_c("span", {\n    staticClass: "timer"\n  }), _vm._v("s")]);\n}];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=template&id=004c0f61&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(9413);\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(629);\n// EXTERNAL MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue + 9 modules\nvar OrderPropertyValueList = __webpack_require__(5413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=script&lang=js&\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n\nvar ModalService = __webpack_require__(3740);\nvar ApiService = __webpack_require__(7653);\n/* harmony default export */ var AddItemToBasketOverlayvue_type_script_lang_js_ = ({\n  name: "add-item-to-basket-overlay",\n  components: {\n    OrderPropertyValueList: OrderPropertyValueList/* default */.Z\n  },\n  props: {\n    defaultTimeToClose: {\n      type: Number,\n      default: 15\n    }\n  },\n  data: function data() {\n    return {\n      price: 0,\n      basketItem: null,\n      countAdditionalBasketItems: 0\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    if (App.config.basket.addItemToBasketConfirm === "overlay") {\n      ApiService.listen("AfterBasketItemUpdate", function (data) {\n        var updatedBasketItem = data.basketItems[0];\n        if (!_this.isBasketItemQuantityUpdate) {\n          var basketItem = _this.basketItems.find(function (item) {\n            return item.id === updatedBasketItem.id;\n          }) || {};\n          _this.showItem(basketItem);\n        }\n      });\n      ApiService.listen("AfterBasketItemAdd", function (data) {\n        _this.showItem(data.basketItems[0], data.basketItems.length - 1);\n      });\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, (0,vuex_esm/* mapState */.rn)({\n    basketItems: function basketItems(state) {\n      return state.basket.items;\n    },\n    isBasketItemQuantityUpdate: function isBasketItemQuantityUpdate(state) {\n      return state.basket.isBasketItemQuantityUpdate;\n    }\n  })), {}, {\n    isLastBasketEntrySet: function isLastBasketEntrySet() {\n      return !(0,utils/* isNullOrUndefined */.le)(this.basketItem);\n    },\n    variation: function variation() {\n      if (this.basketItem) {\n        return this.basketItem.variation ? this.basketItem.variation.data : null;\n      }\n      return null;\n    },\n    itemName: function itemName() {\n      if (this.isLastBasketEntrySet) {\n        return this.$options.filters.itemName(this.variation);\n      }\n      return "";\n    },\n    imageUrl: function imageUrl() {\n      if (this.isLastBasketEntrySet) {\n        var images = this.$options.filters.itemImages(this.variation.images, "urlPreview");\n        return this.$options.filters.itemImage(images);\n      }\n      return "";\n    },\n    imageAlternativeText: function imageAlternativeText() {\n      if (this.isLastBasketEntrySet) {\n        var images = this.$options.filters.itemImages(this.variation.images, "urlPreview");\n        return this.$options.filters.itemImageAlternativeText(images);\n      }\n      return "";\n    },\n    urls: function urls() {\n      return {\n        basket: App.urls.basket,\n        checkout: App.urls.checkout\n      };\n    }\n  }),\n  methods: {\n    showItem: function showItem(basketItem, countAdditionalBasketItems) {\n      this.basketItem = basketItem;\n      this.countAdditionalBasketItems = countAdditionalBasketItems;\n      this.price = basketItem.price;\n      ModalService.findModal(document.getElementById("add-item-to-basket-overlay")).setTimeout(this.defaultTimeToClose * 1000).show();\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue?vue&type=script&lang=js&\n /* harmony default export */ var basket_AddItemToBasketOverlayvue_type_script_lang_js_ = (AddItemToBasketOverlayvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/basket/AddItemToBasketOverlay.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  basket_AddItemToBasketOverlayvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var AddItemToBasketOverlay = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9246\n')},5413:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ OrderPropertyValueList; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=template&id=2d8aca16&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _vm.shownProperties && _vm.shownProperties.length ? _c("div", {\n    staticClass: "small"\n  }, [_c("div", {\n    staticClass: "font-weight-bold my-1"\n  }, [_vm._v(_vm._s(_vm.$translate("Ceres::Template.basketAdditionalCosts")) + ":")]), _vm._v(" "), _c("ul", {\n    staticClass: "ml-1 pl-3",\n    attrs: {\n      "data-testing": "order-property-list"\n    }\n  }, _vm._l(_vm.shownProperties, function (property) {\n    return _c("order-property-value-list-item", {\n      key: property.propertyId,\n      attrs: {\n        property: property\n      }\n    });\n  }), 1)]) : _vm._e();\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=template&id=2d8aca16&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(9413);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=template&id=f7b6d6d2&\nvar OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c("li", [_c("span", {\n    staticClass: "d-block"\n  }, [_c("strong", {\n    class: {\n      colon: _vm.showColon\n    }\n  }, [_vm._v("\\n            " + _vm._s(_vm.property.property.names.name) + " \\n            "), _vm.surcharge > 0 ? [_vm.isAdditionalCost || _vm.isTaxless ? [_vm._v("\\n                    (" + _vm._s(_vm.$translate("Ceres::Template.basketPlusAbbr")) + " " + _vm._s(_vm._f("currency")(_vm.surcharge)) + ")\\n                ")] : [_vm._v("\\n                    (" + _vm._s(_vm.$translate("Ceres::Template.basketIncludeAbbr")) + " " + _vm._s(_vm._f("currency")(_vm.surcharge)) + ")\\n                ")]] : _vm._e()], 2), _vm._v(" "), _c("span", [_vm.property.property.valueType === "file" ? _c("span", [_c("a", {\n    attrs: {\n      href: _vm._f("fileUploadPath")(_vm.property.property.value),\n      target: "_blank"\n    }\n  }, [_c("i", {\n    staticClass: "fa fa-external-link",\n    attrs: {\n      "aria-hidden": "true"\n    }\n  }), _vm._v("\\n                    " + _vm._s(_vm._f("fileName")(_vm.property.property.value)) + "\\n                ")])]) : _vm.property.property.valueType !== "empty" ? _c("span", [_vm._v(_vm._s(_vm.property.property.value))]) : _vm._e()])])]);\n};\nvar OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_staticRenderFns = [];\nOrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render._withStripped = true;\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=template&id=f7b6d6d2&\n\n// EXTERNAL MODULE: ./resources/js/src/app/helper/OrderPropertyHelper.js\nvar OrderPropertyHelper = __webpack_require__(672);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=script&lang=js&\n\n/* harmony default export */ var OrderPropertyValueListItemvue_type_script_lang_js_ = ({\n  name: "order-property-value-list-item",\n  props: {\n    property: {\n      required: true,\n      type: Object\n    }\n  },\n  computed: {\n    surcharge: function surcharge() {\n      return this.$options.filters.propertySurcharge([this.property], this.property.propertyId);\n    },\n    isAdditionalCost: function isAdditionalCost() {\n      return (0,OrderPropertyHelper/* isAdditionalCosts */.Lh)(this.property);\n    },\n    isTaxless: function isTaxless() {\n      return !(0,OrderPropertyHelper/* hasVat */.uP)(this.property) && App.useVariationOrderProperties;\n    },\n    showColon: function showColon() {\n      return this.property && this.property.property.value && this.property.property.valueType !== "empty";\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyValueListItemvue_type_script_lang_js_ = (OrderPropertyValueListItemvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueListItem.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyValueListItemvue_type_script_lang_js_,\n  OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_render,\n  OrderPropertyValueListItemvue_type_template_id_f7b6d6d2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var OrderPropertyValueListItem = (component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-2.use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=script&lang=js&\n\n\n/* harmony default export */ var OrderPropertyValueListvue_type_script_lang_js_ = ({\n  name: "order-property-value-list",\n  components: {\n    OrderPropertyValueListItem: OrderPropertyValueListItem\n  },\n  props: {\n    basketItem: {\n      required: true,\n      type: Object\n    }\n  },\n  computed: {\n    shownProperties: function shownProperties() {\n      var _this = this;\n      var shownProperties = [];\n      this.basketItem.variation.data.properties.forEach(function (property) {\n        var filledProperty = _this.basketItem.basketItemOrderParams.find(function (prop) {\n          return parseInt(prop.propertyId) === property.propertyId;\n        });\n        if ((0,utils/* isDefined */.$K)(filledProperty)) {\n          if (filledProperty.type === "selection") {\n            property.property.value = property.property.selectionValues[filledProperty.value].name;\n          } else {\n            property.property.value = filledProperty.value;\n          }\n        }\n        if ((0,utils/* isDefined */.$K)(filledProperty) || _this.isPropertyWithAdditionalCosts(property)) {\n          shownProperties.push(property);\n        }\n      });\n      return shownProperties;\n    }\n  },\n  methods: {\n    isPropertyWithAdditionalCosts: function isPropertyWithAdditionalCosts(property) {\n      return property.property && property.property.isShownAtCheckout && property.property.isShownAsAdditionalCosts && !property.property.isOderProperty;\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue?vue&type=script&lang=js&\n /* harmony default export */ var item_OrderPropertyValueListvue_type_script_lang_js_ = (OrderPropertyValueListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/src/app/components/item/OrderPropertyValueList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderPropertyValueList_component = (0,componentNormalizer/* default */.Z)(\n  item_OrderPropertyValueListvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var OrderPropertyValueList = (OrderPropertyValueList_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5413\n')}}]);