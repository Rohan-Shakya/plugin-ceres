"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[36],{6065:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ Login; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/login/Login.vue?vue&type=template&id=0f0e37b8&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "login-pwd-reset" }, [\n    _c(\n      "form",\n      {\n        ref: "loginForm",\n        attrs: { id: "login-form-" + _vm._uid, method: "post" },\n      },\n      [\n        _c("div", { class: { "modal-body": _vm.modalElement } }, [\n          _c("div", { staticClass: "row" }, [\n            _c("div", { staticClass: "col-12" }, [\n              _c(\n                "div",\n                {\n                  staticClass: "input-unit",\n                  attrs: { "data-validate": "mail" },\n                },\n                [\n                  _c("input", {\n                    directives: [\n                      {\n                        name: "model",\n                        rawName: "v-model",\n                        value: _vm.username,\n                        expression: "username",\n                      },\n                    ],\n                    attrs: {\n                      "data-testing": "email-login",\n                      type: "email",\n                      name: "email",\n                      autocomplete: "email",\n                      id: "email" + _vm._uid,\n                      "data-autofocus": "",\n                    },\n                    domProps: { value: _vm.username },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.username = $event.target.value\n                      },\n                    },\n                  }),\n                  _vm._v(" "),\n                  _c("label", { attrs: { for: "email" + _vm._uid } }, [\n                    _vm._v(\n                      _vm._s(_vm.$translate("Ceres::Template.loginEmail")) + "*"\n                    ),\n                  ]),\n                ]\n              ),\n              _vm._v(" "),\n              _c("span", { staticClass: "error-msg" }, [\n                _vm._v(\n                  _vm._s(\n                    _vm.$translate("Ceres::Template.loginEnterConfirmEmail")\n                  )\n                ),\n              ]),\n            ]),\n            _vm._v(" "),\n            _c("div", { staticClass: "col-12" }, [\n              _c(\n                "div",\n                {\n                  staticClass: "input-unit",\n                  class: { "no-bottom": _vm.modalElement },\n                  attrs: { "data-validate": "text" },\n                },\n                [\n                  _c("input", {\n                    directives: [\n                      {\n                        name: "model",\n                        rawName: "v-model",\n                        value: _vm.password,\n                        expression: "password",\n                      },\n                    ],\n                    attrs: {\n                      "data-testing": "password-login",\n                      type: "password",\n                      name: "password",\n                      autocomplete: "current-password",\n                      id: "password" + _vm._uid,\n                    },\n                    domProps: { value: _vm.password },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.password = $event.target.value\n                      },\n                    },\n                  }),\n                  _vm._v(" "),\n                  _c("label", { attrs: { for: "password" + _vm._uid } }, [\n                    _vm._v(\n                      _vm._s(_vm.$translate("Ceres::Template.loginPassword")) +\n                        "*"\n                    ),\n                  ]),\n                ]\n              ),\n              _vm._v(" "),\n              _c("span", { staticClass: "error-msg" }, [\n                _vm._v(\n                  _vm._s(_vm.$translate("Ceres::Template.loginEmptyPassword"))\n                ),\n              ]),\n            ]),\n          ]),\n        ]),\n        _vm._v(" "),\n        _c(\n          "div",\n          {\n            class: {\n              "modal-footer justify-content-between": _vm.modalElement,\n              row: !_vm.modalElement,\n            },\n          },\n          [\n            _c("div", { class: { "col-7 col-sm-4": !_vm.modalElement } }, [\n              _c(\n                "a",\n                {\n                  staticClass: "small text-appearance",\n                  attrs: { href: "javascript:void(0)" },\n                  on: { click: _vm.showResetPwdView },\n                },\n                [\n                  _vm._v(\n                    _vm._s(\n                      _vm.$translate("Ceres::Template.loginForgotPassword")\n                    ) + "?"\n                  ),\n                ]\n              ),\n            ]),\n            _vm._v(" "),\n            _c(\n              "div",\n              { class: { "col-5 col-sm-8 text-sm-right": !_vm.modalElement } },\n              [\n                _vm._t("extend-overlay-buttons"),\n                _vm._v(" "),\n                _c(\n                  "button",\n                  {\n                    staticClass: "btn btn-primary btn-appearance btn-medium",\n                    class: [\n                      { "float-right": !_vm.modalElement },\n                      _vm.buttonSizeClass,\n                    ],\n                    attrs: {\n                      "data-testing": "submit-login",\n                      disabled: _vm.isDisabled,\n                    },\n                    on: {\n                      click: function ($event) {\n                        $event.preventDefault()\n                        return _vm.validateLogin($event)\n                      },\n                    },\n                  },\n                  [\n                    _vm._v(\n                      "\\n                    " +\n                        _vm._s(_vm.$translate("Ceres::Template.login")) +\n                        "\\n                    "\n                    ),\n                    _c("icon", {\n                      attrs: { icon: "user", loading: _vm.isDisabled },\n                    }),\n                  ],\n                  1\n                ),\n              ],\n              2\n            ),\n          ]\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/Login.vue?vue&type=template&id=0f0e37b8&\n\n// EXTERNAL MODULE: ./resources/js/src/app/mixins/buttonSizeProperty.mixin.js\nvar buttonSizeProperty_mixin = __webpack_require__(9430);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ApiService.js\nvar ApiService = __webpack_require__(3085);\n// EXTERNAL MODULE: ./resources/js/src/app/services/NotificationService.js\nvar NotificationService = __webpack_require__(1452);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ModalService.js\nvar ModalService = __webpack_require__(7832);\n// EXTERNAL MODULE: ./resources/js/src/app/services/AutoFocusService.js\nvar AutoFocusService = __webpack_require__(2201);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ValidationService.js\nvar ValidationService = __webpack_require__(7412);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/login/Login.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var Loginvue_type_script_lang_js_ = ({\n    mixins: [buttonSizeProperty_mixin/* ButtonSizePropertyMixin */.Z],\n\n    props: {\n        backlink: {\n            type: String\n        },\n        modalElement: {\n            type: String\n        },\n        hasToForward:\n        {\n            type: Boolean,\n            default: false\n        }\n    },\n\n    data()\n    {\n        return {\n            password: "",\n            username: "",\n            loginFields: [],\n            isDisabled: false\n        };\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            this.loginFields = this.$refs.loginForm.querySelectorAll(".input-unit");\n\n            AutoFocusService["default"].triggerAutoFocus();\n        });\n    },\n\n    watch:\n    {\n        password(val, oldVal)\n        {\n            this.resetError();\n        },\n\n        username(val, oldVal)\n        {\n            this.resetError();\n        }\n    },\n\n    methods:\n    {\n        /**\n         * Open the login modal\n         */\n        showLogin()\n        {\n            ModalService["default"].findModal(document.getElementById(this.modalElement)).show();\n        },\n\n        validateLogin()\n        {\n            ValidationService["default"].validate($("#login-form-" + this._uid))\n                .done(() =>\n                {\n                    this.sendLogin();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService["default"].markInvalidFields(invalidFields, "error");\n                });\n        },\n\n        /**\n         * Send the login data\n         */\n        sendLogin()\n        {\n            this.isDisabled = true;\n\n            ApiService["default"].post("/rest/io/customer/login", { email: this.username, password: this.password }, { supressNotifications: true })\n                .done(response =>\n                {\n                    ApiService["default"].setToken(response);\n\n                    NotificationService["default"].success(\n                        this.$translate("Ceres::Template.loginSuccessful")\n                    ).closeAfter(3000);\n\n                    if (this.backlink !== null && this.backlink)\n                    {\n                        location.assign(decodeURIComponent(this.backlink));\n                    }\n                    else if (this.hasToForward)\n                    {\n                        location.assign(location.origin);\n                    }\n                    else\n                    {\n                        location.reload();\n                    }\n                })\n                .fail(response =>\n                {\n                    this.isDisabled = false;\n\n                    switch (response.error.code)\n                    {\n                        case 401:\n                            this.loginFields.forEach(element => element.classList.add("has-login-error"));\n\n                            let translationKey = "Ceres::Template.loginFailed";\n\n                            if (response.error.message.length > 0 && response.error.message === "user is blocked")\n                            {\n                                translationKey = "Ceres::Template.loginBlocked";\n                            }\n                            NotificationService["default"].error(\n                                this.$translate(translationKey)\n                            ).closeAfter(10000);\n                            break;\n                        default:\n                            return;\n                    }\n                });\n        },\n\n        showResetPwdView()\n        {\n            this.resetError();\n\n            this.$store.dispatch("loadComponent", "forgot-password-modal");\n\n            Vue.nextTick(() =>\n            {\n                let modalDOM = document.querySelector(\'#resetPwd\');\n                let modalVue = (0,utils/* getContainingComponent */.tI)(modalDOM);\n\n                modalVue.$data.username = this.username;\n\n                let showModal = () => ModalService["default"].findModal(modalDOM).show();\n\n                if(this.modalElement)\n                {\n                    ModalService["default"].findModal(document.getElementById(this.modalElement))\n                        .hide()\n                        .then(showModal);\n                }\n                else\n                {\n                    showModal();\n                }\n            });\n        },\n\n        resetError()\n        {\n            this.loginFields.forEach( element => element.classList.remove("has-login-error"));\n            ValidationService["default"].unmarkAllFields("#login-form-" + this._uid);\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/Login.vue?vue&type=script&lang=js&\n /* harmony default export */ var login_Loginvue_type_script_lang_js_ = (Loginvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/Login.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  login_Loginvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/src/app/components/customer/login/Login.vue"\n/* harmony default export */ var Login = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6065\n')},9430:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": function() { return /* binding */ ButtonSizePropertyMixin; }\n/* harmony export */ });\nconst BUTTON_SIZES = ["btn-sm", "btn-lg"];\n\nconst LEGACY_CLASS_MAP = {\n    "sm": "btn-sm",\n    "md": "",\n    "lg": "btn-lg"\n};\n\nconst ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    "",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQzMC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0NlcmVzLy4vcmVzb3VyY2VzL2pzL3NyYy9hcHAvbWl4aW5zL2J1dHRvblNpemVQcm9wZXJ0eS5taXhpbi5qcz9jMmQyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJVVFRPTl9TSVpFUyA9IFtcImJ0bi1zbVwiLCBcImJ0bi1sZ1wiXTtcblxuY29uc3QgTEVHQUNZX0NMQVNTX01BUCA9IHtcbiAgICBcInNtXCI6IFwiYnRuLXNtXCIsXG4gICAgXCJtZFwiOiBcIlwiLFxuICAgIFwibGdcIjogXCJidG4tbGdcIlxufTtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvblNpemVQcm9wZXJ0eU1peGluID1cbntcbiAgICBwcm9wczoge1xuICAgICAgICBidXR0b25TaXplOlxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiBbU3RyaW5nLCBudWxsXSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB2YWxpZGF0b3I6IHZhbHVlID0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgXCJcIixcbiAgICAgICAgICAgICAgICAgICAgLi4uQlVUVE9OX1NJWkVTLFxuICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3Qua2V5cyhMRUdBQ1lfQ0xBU1NfTUFQKVxuICAgICAgICAgICAgICAgIF0uaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGNvbXB1dGVkOiB7XG4gICAgICAgIGJ1dHRvblNpemVDbGFzcygpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmIChMRUdBQ1lfQ0xBU1NfTUFQLmhhc093blByb3BlcnR5KHRoaXMuYnV0dG9uU2l6ZSkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIExFR0FDWV9DTEFTU19NQVBbdGhpcy5idXR0b25TaXplXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnV0dG9uU2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9430\n')}}]);