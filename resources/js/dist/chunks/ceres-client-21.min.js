"use strict";(self.webpackChunkCeres=self.webpackChunkCeres||[]).push([[21],{3131:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ ForgotPassword; }\n});\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=template&id=7f94eb33&\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "form",\n    {\n      staticClass: "reset-pwd-container login-pwd-reset",\n      attrs: { id: "reset-pwd-form-" + _vm._uid, method: "post" },\n    },\n    [\n      _c(\n        "div",\n        {\n          ref: "pwdModal",\n          staticClass: "modal fade",\n          attrs: { id: "resetPwd", tabindex: "-1", role: "dialog" },\n        },\n        [\n          _c("div", { staticClass: "modal-dialog" }, [\n            _c("div", { staticClass: "modal-content" }, [\n              _c("div", { staticClass: "modal-header" }, [\n                _c("div", { staticClass: "modal-title h3" }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.$translate("Ceres::Template.loginForgotPassword")\n                    )\n                  ),\n                ]),\n                _vm._v(" "),\n                _c(\n                  "button",\n                  {\n                    staticClass: "close",\n                    attrs: {\n                      type: "button",\n                      "data-dismiss": "modal",\n                      "aria-hidden": "true",\n                      "aria-label": _vm.$translate("Ceres::Template.closeIcon"),\n                    },\n                  },\n                  [_vm._v("Ã—")]\n                ),\n              ]),\n              _vm._v(" "),\n              _c("div", { staticClass: "modal-body" }, [\n                _c(\n                  "div",\n                  { staticClass: "alert alert-info w-100 pwd-forgot-info" },\n                  [\n                    _c("span", { staticClass: "info-badge" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.$translate(\n                            "Ceres::Template.loginForgotPasswordInfo"\n                          )\n                        )\n                      ),\n                    ]),\n                  ]\n                ),\n                _vm._v(" "),\n                _c("div", { staticClass: "row" }, [\n                  _c("div", { staticClass: "col-12" }, [\n                    _c("input", {\n                      directives: [\n                        {\n                          name: "model",\n                          rawName: "v-model",\n                          value: _vm.honeypot,\n                          expression: "honeypot",\n                        },\n                      ],\n                      staticClass: "honey",\n                      attrs: {\n                        type: "text",\n                        name: "username",\n                        autocomplete: "new-password",\n                        tabindex: "-1",\n                      },\n                      domProps: { value: _vm.honeypot },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.honeypot = $event.target.value\n                        },\n                      },\n                    }),\n                    _vm._v(" "),\n                    _c(\n                      "div",\n                      {\n                        staticClass: "input-unit no-bottom",\n                        attrs: { "data-validate": "mail" },\n                      },\n                      [\n                        _c("input", {\n                          directives: [\n                            {\n                              name: "model",\n                              rawName: "v-model",\n                              value: _vm.username,\n                              expression: "username",\n                            },\n                          ],\n                          attrs: {\n                            type: "email",\n                            name: "email",\n                            autocomplete: "email",\n                            id: "mail" + _vm._uid,\n                            "data-autofocus": "",\n                          },\n                          domProps: { value: _vm.username },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.username = $event.target.value\n                            },\n                          },\n                        }),\n                        _vm._v(" "),\n                        _c("label", { attrs: { for: "mail" + _vm._uid } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$translate("Ceres::Template.loginEmail")\n                            ) + "*"\n                          ),\n                        ]),\n                      ]\n                    ),\n                    _vm._v(" "),\n                    _c("span", { staticClass: "error-msg" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.$translate(\n                            "Ceres::Template.loginEnterConfirmEmail"\n                          )\n                        )\n                      ),\n                    ]),\n                  ]),\n                ]),\n              ]),\n              _vm._v(" "),\n              _c("div", { staticClass: "modal-footer" }, [\n                _c(\n                  "div",\n                  [\n                    _vm._t("extend-overlay-buttons"),\n                    _vm._v(" "),\n                    !!_vm.currentTemplate && _vm.currentTemplate != "tpl.login"\n                      ? _c(\n                          "button",\n                          {\n                            staticClass: "btn btn-danger btn-medium mr-2",\n                            attrs: { type: "button" },\n                            on: {\n                              click: function ($event) {\n                                $event.preventDefault()\n                                return _vm.cancelResetPwd($event)\n                              },\n                            },\n                          },\n                          [\n                            _c("i", {\n                              staticClass: "fa fa-arrow-left",\n                              attrs: { "aria-hidden": "true" },\n                            }),\n                            _vm._v(\n                              "\\n                                " +\n                                _vm._s(\n                                  _vm.$translate(\n                                    "Ceres::Template.loginBackToLogin"\n                                  )\n                                ) +\n                                "\\n                            "\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(" "),\n                    _c(\n                      "button",\n                      {\n                        staticClass: "btn btn-primary btn-medium",\n                        attrs: { disabled: _vm.isDisabled },\n                        on: {\n                          click: function ($event) {\n                            $event.preventDefault()\n                            return _vm.validateResetPwd($event)\n                          },\n                        },\n                      },\n                      [\n                        _vm._v(\n                          "\\n\\t\\t\\t\\t\\t\\t\\t\\t" +\n                            _vm._s(\n                              _vm.$translate("Ceres::Template.loginSend")\n                            ) +\n                            "\\n\\t\\t\\t\\t\\t\\t\\t\\t"\n                        ),\n                        _c("icon", {\n                          attrs: {\n                            icon: "paper-plane-o",\n                            loading: _vm.isDisabled,\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ],\n                  2\n                ),\n              ]),\n            ]),\n          ]),\n        ]\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=template&id=7f94eb33&\n\n// EXTERNAL MODULE: ./resources/js/src/app/services/ApiService.js\nvar ApiService = __webpack_require__(3085);\n// EXTERNAL MODULE: ./resources/js/src/app/services/NotificationService.js\nvar NotificationService = __webpack_require__(1452);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ModalService.js\nvar ModalService = __webpack_require__(7832);\n// EXTERNAL MODULE: ./resources/js/src/app/services/ValidationService.js\nvar ValidationService = __webpack_require__(7412);\n// EXTERNAL MODULE: ./resources/js/src/app/services/UrlService.js + 1 modules\nvar UrlService = __webpack_require__(3279);\n// EXTERNAL MODULE: ./resources/js/src/app/helper/utils.js\nvar utils = __webpack_require__(1023);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n/* harmony default export */ var ForgotPasswordvue_type_script_lang_js_ = ({\n\n    name: "forgot-password-modal",\n\n    props: {\n        currentTemplate: String\n    },\n\n    data()\n    {\n        return {\n            username: "",\n            isDisabled: false,\n            honeypot: ""\n        };\n    },\n\n    mounted()\n    {\n        this.$nextTick(() =>\n        {\n            $(this.$refs.pwdModal).on("hidden.bs.modal", () =>\n            {\n                this.username = "";\n            });\n\n            const urlParams = UrlService/* default.getUrlParams */.ZP.getUrlParams(document.location.search);\n\n            if (!(0,utils/* isNullOrUndefined */.le)(urlParams.show) && urlParams.show === "forgotPassword")\n            {\n                ModalService["default"].findModal(this.$refs.pwdModal).show();\n\n                this.username = !(0,utils/* isNullOrUndefined */.le)(urlParams.email) ? urlParams.email : "";\n            }\n        });\n    },\n\n    watch:\n    {\n        username(val, oldVal)\n        {\n            this.resetError();\n        }\n    },\n\n    methods:\n    {\n        validateResetPwd()\n        {\n            ValidationService["default"].validate(this.$refs.pwdModal)\n                .done(() =>\n                {\n                    this.sendResetPwd();\n                })\n                .fail(invalidFields =>\n                {\n                    ValidationService["default"].markInvalidFields(invalidFields, "error");\n                });\n        },\n\n        /**\n         *  Reset password\n         */\n        sendResetPwd()\n        {\n            this.isDisabled = true;\n\n            ApiService["default"].post("/rest/io/customer/password_reset", { email: this.username, honeypot: this.honeypot })\n                .done(() =>\n                {\n                    ModalService["default"].findModal(this.$refs.pwdModal).hide();\n                    this.isDisabled = false;\n\n                    NotificationService["default"].success(\n                        this.$translate("Ceres::Template.loginSendEmailOk")\n                    ).closeAfter(5000);\n\n                })\n                .fail(() =>\n                {\n                    this.isDisabled = false;\n\n                    NotificationService["default"].error(\n                        this.$translate("Ceres::Template.loginResetPwDErrorOnSendEmail")\n                    ).closeAfter(5000);\n                });\n        },\n\n        cancelResetPwd()\n        {\n            this.resetError();\n\n            ModalService["default"].findModal(this.$refs.pwdModal)\n                .hide()\n                .then(() =>\n                {\n                    ModalService["default"].findModal(document.getElementById("login"))\n                        .show();\n                });\n        },\n\n        resetError()\n        {\n            ValidationService["default"].unmarkAllFields(this.$refs.pwdModal);\n        }\n    }\n});\n\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/ForgotPassword.vue?vue&type=script&lang=js&\n /* harmony default export */ var login_ForgotPasswordvue_type_script_lang_js_ = (ForgotPasswordvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1900);\n;// CONCATENATED MODULE: ./resources/js/src/app/components/customer/login/ForgotPassword.vue\n\n\n\n\n\n/* normalize component */\n;\nvar component = (0,componentNormalizer/* default */.Z)(\n  login_ForgotPasswordvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "resources/js/src/app/components/customer/login/ForgotPassword.vue"\n/* harmony default export */ var ForgotPassword = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3131\n')}}]);